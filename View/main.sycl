//==-------------------------------------------------------==//
//
// WARNING: This file is auto-generated. Do not modify.
//
// SYCL Device Compiler:
//   Codeplay ComputeCpp - CE 0.5.1 Device Compiler - clang version 3.9.0 (git@git.office.codeplay.com:sycl/clang.git 0ed0d82f982d83203ab3f737bf8d7f8dbbd632a4) (git@git.office.codeplay.com:sycl/llvm.git ae118d2f2c245911c49acb2b163a9cb35f4fd58f) (based on LLVM 3.9.0svn)
//
//==-------------------------------------------------------==//
#ifndef CODEPLAY_SYCL_main_cpp_STUB
#define CODEPLAY_SYCL_main_cpp_STUB

#include <cstddef>
#include <SYCL/predefines.h>
#include <SYCL/common.h>

namespace cl {
namespace sycl {
namespace detail {
namespace {
// SYCL kernel traits primary template
template <typename T>
struct kernel_info;

 static_assert(0== COMPUTECPP_VERSION_MAJOR &&
5== COMPUTECPP_VERSION_MINOR &&
1== COMPUTECPP_VERSION_PATCH,"Error: Mismatch between compiler and runtime. Please ensure both are at the latest version. Compiler is version:0.5.1 Runtime: " __COMPUTECPP__ );

} // namespace
} // namespace detail
} // namespace sycl
} // namespace cl
namespace cl {
namespace sycl {
namespace detail {
namespace {
unsigned char SYCL_main_cpp_bin_spir64[] = {
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00,
  0x01, 0x10, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x10, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0x84, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x49,
  0x0a, 0x32, 0x44, 0x24, 0x48, 0x0a, 0x90, 0x21, 0x23, 0xc4, 0x52, 0x80,
  0x0c, 0x19, 0x21, 0x72, 0x24, 0x07, 0xc8, 0x08, 0x11, 0x62, 0xa8, 0xa0,
  0xa8, 0x40, 0xc6, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x0b, 0x84, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xc0,
  0x30, 0x58, 0x20, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x00, 0x06, 0x0b, 0x84,
  0xff, 0xff, 0xff, 0xff, 0x1f, 0xc0, 0x30, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x32, 0x22, 0x08, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x22, 0xa4, 0x84, 0x04, 0x13, 0x22, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x88, 0x8c, 0x0b, 0x84, 0x84, 0x4c, 0x10, 0x28, 0x73, 0x04,
  0xa0, 0x30, 0x47, 0x00, 0x06, 0x45, 0x80, 0x20, 0x19, 0x01, 0x98, 0x01,
  0x18, 0x44, 0x28, 0x82, 0x42, 0x90, 0x99, 0xd1, 0x0d, 0x04, 0x00, 0x00,
  0x13, 0xac, 0x79, 0x80, 0x87, 0x74, 0x90, 0x07, 0x3b, 0xa0, 0x83, 0x36,
  0xa8, 0x07, 0x77, 0x58, 0x07, 0x77, 0x78, 0x87, 0x7b, 0x70, 0x87, 0x36,
  0xa8, 0x07, 0x77, 0x58, 0x07, 0x77, 0x78, 0x87, 0x7b, 0x70, 0x87, 0x0d,
  0xae, 0x51, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x60, 0x07, 0x74, 0xa0, 0x07,
  0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe9, 0x10, 0x07,
  0x7a, 0x80, 0x07, 0x7a, 0x80, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07,
  0x78, 0xa0, 0x07, 0x78, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x71, 0x60, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06,
  0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07,
  0x74, 0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07,
  0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xf6, 0x10, 0x07,
  0x76, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xd0, 0x06,
  0xf6, 0x20, 0x07, 0x74, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xf6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xf6, 0x40, 0x07, 0x78, 0xa0, 0x07,
  0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xf6, 0x60, 0x07,
  0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06,
  0xf6, 0x90, 0x07, 0x76, 0xa0, 0x07, 0x71, 0x20, 0x07, 0x78, 0xa0, 0x07,
  0x71, 0x20, 0x07, 0x78, 0xd0, 0x06, 0xf6, 0x10, 0x07, 0x72, 0x80, 0x07,
  0x7a, 0x10, 0x07, 0x72, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x72, 0x80, 0x07,
  0x6d, 0x60, 0x0f, 0x71, 0x90, 0x07, 0x72, 0xa0, 0x07, 0x72, 0x50, 0x07,
  0x76, 0xa0, 0x07, 0x72, 0x50, 0x07, 0x76, 0xd0, 0x06, 0xf6, 0x20, 0x07,
  0x75, 0x60, 0x07, 0x7a, 0x20, 0x07, 0x75, 0x60, 0x07, 0x7a, 0x20, 0x07,
  0x75, 0x60, 0x07, 0x6d, 0x60, 0x0f, 0x75, 0x10, 0x07, 0x72, 0xa0, 0x07,
  0x75, 0x10, 0x07, 0x72, 0xa0, 0x07, 0x75, 0x10, 0x07, 0x72, 0xd0, 0x06,
  0xf6, 0x10, 0x07, 0x70, 0x20, 0x07, 0x74, 0xa0, 0x07, 0x71, 0x00, 0x07,
  0x72, 0x40, 0x07, 0x7a, 0x10, 0x07, 0x70, 0x20, 0x07, 0x74, 0x30, 0x44,
  0x19, 0x56, 0x21, 0x00, 0x02, 0x00, 0x00, 0x00, 0x60, 0x88, 0x32, 0xac,
  0x42, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc0, 0x10, 0x05, 0x61, 0x05, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x80, 0x2c, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x10, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x82, 0x11, 0x00, 0x8a, 0x12, 0x28, 0x82, 0x62, 0x18,
  0x01, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
  0x1a, 0x09, 0x4c, 0xd0, 0x02, 0x87, 0x15, 0xd2, 0xc1, 0x1d, 0xd6, 0xa1,
  0x1c, 0xe4, 0x01, 0x0c, 0x5e, 0x01, 0x1e, 0xe8, 0x21, 0x1d, 0xde, 0xc1,
  0x1d, 0xe6, 0x61, 0x41, 0xd2, 0x06, 0xec, 0xc0, 0x0e, 0xe9, 0x20, 0x0e,
  0xe3, 0x00, 0x0f, 0xed, 0x40, 0x0f, 0x0b, 0x12, 0x58, 0x48, 0x85, 0x51,
  0x00, 0x03, 0x56, 0x28, 0x07, 0x7b, 0x28, 0x07, 0x76, 0x58, 0x80, 0x22,
  0xa3, 0xf0, 0x0e, 0xe4, 0x50, 0x0e, 0xf0, 0xc0, 0x0e, 0xe1, 0x90, 0x0f,
  0x60, 0x30, 0x0a, 0xef, 0xd0, 0x0e, 0xf0, 0x50, 0x0f, 0xf4, 0x50, 0x0e,
  0xa3, 0x00, 0x0f, 0xf0, 0x00, 0x06, 0x6d, 0x00, 0x06, 0xa3, 0x50, 0x0a,
  0x60, 0x00, 0x07, 0x6e, 0x50, 0x07, 0x6e, 0x10, 0x07, 0x60, 0x40, 0x0a,
  0xe5, 0x60, 0x0f, 0xe9, 0x30, 0x0e, 0xe5, 0x00, 0x06, 0xa3, 0xf0, 0x0e,
  0xed, 0x00, 0x0f, 0xe9, 0xc0, 0x0e, 0xe5, 0x20, 0x0f, 0x60, 0xd0, 0x06,
  0x60, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xee, 0x70, 0x0e, 0x60, 0x60, 0x0f,
  0xe5, 0x20, 0x0f, 0xf3, 0x90, 0x0e, 0xef, 0xe0, 0x0e, 0x60, 0x30, 0x07,
  0x6e, 0x90, 0x07, 0x6e, 0x00, 0x07, 0x60, 0x80, 0x06, 0xe7, 0x90, 0x0e,
  0xf4, 0x00, 0x0a, 0xe7, 0x90, 0x0e, 0xf4, 0xe0, 0x06, 0xef, 0x60, 0x0e,
  0xe6, 0x90, 0x0e, 0xe3, 0x50, 0x0e, 0x6e, 0x30, 0x0e, 0xef, 0x40, 0x0e,
  0xe5, 0x00, 0x0f, 0xec, 0x10, 0x0e, 0xf9, 0xe0, 0x06, 0xe3, 0xf0, 0x0e,
  0xed, 0xa0, 0x07, 0xf3, 0x90, 0x0f, 0xe3, 0xc0, 0x0e, 0x6f, 0x30, 0x0e,
  0xec, 0x10, 0x0e, 0xee, 0x70, 0x0e, 0x6e, 0x70, 0x0e, 0xe9, 0x40, 0x0f,
  0x60, 0x00, 0x07, 0xe5, 0x40, 0x0e, 0x70, 0x40, 0x0e, 0x78, 0x20, 0x07,
  0xe6, 0x90, 0x07, 0x78, 0x20, 0x07, 0xe4, 0x80, 0x07, 0x73, 0x20, 0x07,
  0x70, 0x30, 0x07, 0xe1, 0x20, 0x0e, 0x73, 0x60, 0x0e, 0x77, 0x30, 0x07,
  0x77, 0x20, 0x0e, 0xe6, 0x80, 0x07, 0xe4, 0x70, 0x07, 0xe6, 0x80, 0x07,
  0xe4, 0x20, 0x0e, 0xe2, 0x40, 0x0e, 0x76, 0x30, 0x07, 0x72, 0x10, 0x0e,
  0x74, 0x90, 0x06, 0x60, 0x80, 0x06, 0xe7, 0x90, 0x0e, 0xf4, 0x00, 0x0a,
  0xe7, 0x90, 0x0e, 0xf4, 0xe0, 0x06, 0xef, 0x60, 0x0e, 0xe6, 0x90, 0x0e,
  0xe3, 0x50, 0x0e, 0x6e, 0x30, 0x0e, 0xef, 0x40, 0x0e, 0xe5, 0x00, 0x0f,
  0xec, 0x10, 0x0e, 0xf9, 0xe0, 0x06, 0xe3, 0xf0, 0x0e, 0xed, 0xa0, 0x07,
  0xf3, 0x90, 0x0f, 0xe3, 0xc0, 0x0e, 0x6f, 0xc0, 0x0e, 0xec, 0x60, 0x0f,
  0xed, 0xe0, 0x06, 0xe7, 0x90, 0x0e, 0xf4, 0x00, 0x06, 0xe1, 0x50, 0x0e,
  0x71, 0x10, 0x07, 0x78, 0x40, 0x0e, 0x72, 0x60, 0x0e, 0x72, 0x30, 0x0e,
  0x72, 0x40, 0x07, 0x75, 0x90, 0x07, 0x71, 0x10, 0x07, 0xe3, 0x40, 0x07,
  0x79, 0x10, 0x0e, 0xe3, 0x20, 0x0e, 0x72, 0x20, 0x0e, 0x71, 0x60, 0x07,
  0x73, 0x10, 0x0e, 0x79, 0x30, 0x0e, 0xe2, 0x30, 0x07, 0x75, 0x60, 0x0e,
  0x74, 0x60, 0x0e, 0xe4, 0x50, 0x07, 0x78, 0x60, 0x0e, 0x69, 0x00, 0x06,
  0x68, 0x20, 0x0e, 0xe1, 0x30, 0x0f, 0xe5, 0x40, 0x0e, 0x60, 0xf0, 0x0e,
  0xee, 0x00, 0x06, 0xac, 0xc0, 0x0a, 0xb6, 0xd0, 0x0a, 0x60, 0x30, 0x07,
  0x6e, 0x90, 0x07, 0x6e, 0x00, 0x07, 0xf3, 0x60, 0x0f, 0xee, 0x90, 0x06,
  0x0b, 0xaa, 0x75, 0x28, 0x07, 0x79, 0x70, 0x87, 0x72, 0x60, 0x87, 0x5f,
  0x08, 0x07, 0x79, 0x38, 0x87, 0x5f, 0x08, 0x07, 0x72, 0x20, 0x07, 0x79,
  0xf8, 0x85, 0x79, 0x80, 0x87, 0x70, 0x18, 0x87, 0x72, 0x58, 0x60, 0xad,
  0x43, 0x39, 0xc8, 0x83, 0x3b, 0x94, 0x03, 0x3b, 0xfc, 0x42, 0x38, 0xc8,
  0xc3, 0x39, 0xfc, 0x42, 0x38, 0x8c, 0xc3, 0x38, 0x94, 0xc3, 0x3c, 0xcc,
  0xc3, 0x2f, 0xc4, 0x43, 0x3d, 0x84, 0x03, 0x3b, 0x2c, 0x20, 0xdc, 0xe1,
  0x1d, 0xdc, 0xa1, 0x1c, 0x16, 0x3c, 0xeb, 0x50, 0x0e, 0xf2, 0xe0, 0x0e,
  0xe5, 0xc0, 0x0e, 0xbf, 0x10, 0x0e, 0xf2, 0x70, 0x0e, 0xbf, 0x40, 0x0f,
  0xf9, 0x00, 0x0f, 0xe5, 0xb0, 0xc0, 0x30, 0x07, 0x76, 0x78, 0x87, 0x70,
  0xa0, 0x07, 0x35, 0x58, 0x40, 0xad, 0x43, 0x39, 0xc8, 0x83, 0x3b, 0x94,
  0x03, 0x3b, 0xfc, 0x42, 0x38, 0xc8, 0xc3, 0x39, 0xfc, 0x82, 0x38, 0x84,
  0xc3, 0x3c, 0x94, 0xc3, 0x2f, 0xd0, 0x43, 0x3e, 0xc0, 0x43, 0x39, 0x2c,
  0xa0, 0xd6, 0xa1, 0x1c, 0xe4, 0xc1, 0x1d, 0xca, 0x81, 0x1d, 0x7e, 0x21,
  0x1c, 0xe4, 0xe1, 0x1c, 0x7e, 0x81, 0x1e, 0xf2, 0x01, 0x1e, 0xca, 0xe1,
  0x17, 0xe2, 0xa1, 0x1e, 0xc2, 0x81, 0x1d, 0x16, 0x00, 0x0b, 0x9e, 0x75,
  0x28, 0x07, 0x79, 0x70, 0x87, 0x72, 0x60, 0x87, 0x5f, 0x08, 0x07, 0x79,
  0x38, 0x87, 0x5f, 0x70, 0x87, 0x70, 0x68, 0x87, 0x72, 0x58, 0x50, 0xb4,
  0xc3, 0x2f, 0xc0, 0x03, 0x3d, 0xc8, 0xc3, 0x10, 0x21, 0x71, 0x86, 0x08,
  0xc9, 0x33, 0x44, 0x48, 0xa0, 0x21, 0x42, 0x12, 0x0d, 0x21, 0x02, 0x22,
  0x28, 0x86, 0x00, 0x43, 0x84, 0x24, 0x18, 0x22, 0x24, 0xd4, 0x10, 0x23,
  0x30, 0x12, 0x20, 0xa9, 0x86, 0x18, 0x01, 0x91, 0x08, 0x41, 0x31, 0x44,
  0x48, 0x86, 0x21, 0x48, 0x42, 0x04, 0x44, 0x40, 0x04, 0xc4, 0x10, 0x24,
  0x29, 0x12, 0x23, 0x31, 0x12, 0x63, 0x08, 0x92, 0x1c, 0x09, 0x92, 0x20,
  0x09, 0x32, 0x04, 0x49, 0x92, 0x04, 0x49, 0x90, 0x04, 0x19, 0x82, 0x24,
  0x4a, 0xb2, 0x24, 0x4b, 0xb2, 0x0c, 0x41, 0x12, 0x26, 0x69, 0x92, 0x26,
  0x69, 0x86, 0x38, 0x88, 0x90, 0x64, 0x89, 0x96, 0x6c, 0x09, 0x97, 0x74,
  0x89, 0xc7, 0xe9, 0x0d, 0xae, 0xcc, 0x6d, 0x8c, 0xcd, 0x65, 0x0e, 0x2e,
  0x4d, 0xce, 0xc5, 0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd, 0x6d, 0x4a, 0x20,
  0x51, 0x7a, 0x83, 0x2b, 0x73, 0x1b, 0x63, 0x73, 0x79, 0x1b, 0x63, 0x73,
  0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x9b, 0x12, 0x48, 0x14, 0x83,
  0x37, 0xb8, 0x32, 0xb7, 0x31, 0x36, 0x97, 0xba, 0xb9, 0x32, 0x32, 0x97,
  0x37, 0x38, 0xba, 0xb4, 0x37, 0xb7, 0x30, 0x36, 0x97, 0xb1, 0x37, 0xb9,
  0x32, 0x17, 0xb3, 0xb2, 0x30, 0xba, 0x3a, 0xb9, 0xb2, 0xb9, 0x29, 0xc1,
  0x44, 0xeb, 0x0d, 0xae, 0xcc, 0x6d, 0x8c, 0xcd, 0xa5, 0x6e, 0xae, 0x8c,
  0xcc, 0xa5, 0x0c, 0x8f, 0xae, 0xcc, 0x6d, 0x2e, 0xed, 0xcd, 0x6d, 0x6e,
  0x4a, 0x30, 0xf1, 0x7a, 0x83, 0x2b, 0x73, 0x1b, 0x63, 0x73, 0x19, 0x7b,
  0x6b, 0x83, 0x4b, 0x63, 0x2b, 0x93, 0x73, 0x79, 0x83, 0xa3, 0x4b, 0x7b,
  0x73, 0x9b, 0x9b, 0x12, 0x4c, 0x8c, 0xd8, 0xd8, 0xec, 0xda, 0x5c, 0xda,
  0xde, 0xc8, 0xea, 0xd8, 0xca, 0x5c, 0xcc, 0xd8, 0xc2, 0xce, 0xe6, 0xa6,
  0x08, 0xd6, 0x45, 0x85, 0x8d, 0xcd, 0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc,
  0x8d, 0x6e, 0x4a, 0x80, 0xd1, 0x79, 0x83, 0x2b, 0x73, 0x1b, 0x63, 0x73,
  0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63, 0x9b, 0x9b, 0x12, 0x7c, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc7, 0x69, 0x87, 0x70, 0x58,
  0x87, 0x72, 0x70, 0x83, 0x74, 0x68, 0x07, 0x78, 0x60, 0x87, 0x74, 0x18,
  0x87, 0x74, 0xa0, 0x87, 0x19, 0xce, 0x53, 0x0f, 0xee, 0x00, 0x0f, 0xf2,
  0x50, 0x0e, 0xe4, 0x90, 0x0e, 0xe3, 0x40, 0x0f, 0xe1, 0x20, 0x0e, 0xec,
  0x50, 0x0e, 0x33, 0x20, 0x28, 0x1d, 0xdc, 0xc1, 0x1e, 0xc2, 0x41, 0x1e,
  0xd2, 0x21, 0x1c, 0xdc, 0x81, 0x1e, 0xdc, 0xe0, 0x1c, 0xe4, 0xe1, 0x1d,
  0xea, 0x01, 0x1e, 0x66, 0x18, 0x51, 0x38, 0xb0, 0x43, 0x3a, 0x9c, 0x83,
  0x3b, 0xcc, 0x50, 0x24, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x60,
  0x87, 0x77, 0x78, 0x07, 0x78, 0x98, 0x51, 0x4c, 0xf4, 0x90, 0x0f, 0xf0,
  0x50, 0x0e, 0x33, 0x2c, 0x6a, 0x1d, 0xca, 0x41, 0x1e, 0xdc, 0xa1, 0x1c,
  0xd8, 0xe1, 0x17, 0xc2, 0x41, 0x1e, 0xce, 0xe1, 0x17, 0xc2, 0x81, 0x1c,
  0xc8, 0x41, 0x1e, 0x7e, 0x61, 0x1e, 0xe0, 0x21, 0x1c, 0xc6, 0xa1, 0x1c,
  0x66, 0x5c, 0xd5, 0x3a, 0x94, 0x83, 0x3c, 0xb8, 0x43, 0x39, 0xb0, 0xc3,
  0x2f, 0x84, 0x83, 0x3c, 0x9c, 0xc3, 0x2f, 0x84, 0xc3, 0x38, 0x8c, 0x43,
  0x39, 0xcc, 0xc3, 0x3c, 0xfc, 0x42, 0x3c, 0xd4, 0x43, 0x38, 0xb0, 0xc3,
  0x0c, 0xc8, 0x5a, 0x87, 0x72, 0x90, 0x07, 0x77, 0x28, 0x07, 0x76, 0xf8,
  0x85, 0x70, 0x90, 0x87, 0x73, 0xf8, 0x05, 0x7a, 0xc8, 0x07, 0x78, 0x28,
  0x87, 0x19, 0xd5, 0xb5, 0x0e, 0xe5, 0x20, 0x0f, 0xee, 0x50, 0x0e, 0xec,
  0xf0, 0x0b, 0xe1, 0x20, 0x0f, 0xe7, 0xf0, 0x0b, 0xe2, 0x10, 0x0e, 0xf3,
  0x50, 0x0e, 0xbf, 0x40, 0x0f, 0xf9, 0x00, 0x0f, 0xe5, 0x30, 0xa3, 0xc2,
  0xd6, 0xa1, 0x1c, 0xe4, 0xc1, 0x1d, 0xca, 0x81, 0x1d, 0x7e, 0x21, 0x1c,
  0xe4, 0xe1, 0x1c, 0x7e, 0x81, 0x1e, 0xf2, 0x01, 0x1e, 0xca, 0xe1, 0x17,
  0xe2, 0xa1, 0x1e, 0xc2, 0x81, 0x1d, 0x66, 0x40, 0xd9, 0x3a, 0x94, 0x83,
  0x3c, 0xb8, 0x43, 0x39, 0xb0, 0xc3, 0x2f, 0x84, 0x83, 0x3c, 0x9c, 0xc3,
  0x2f, 0xb8, 0x43, 0x38, 0xb4, 0x43, 0x39, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x26, 0x50, 0xb1, 0x32, 0x57, 0xfe, 0xc2, 0x02,
  0x48, 0xd2, 0x5f, 0x11, 0xc2, 0xe4, 0x44, 0x3f, 0x30, 0x0c, 0x16, 0x40,
  0xfd, 0x73, 0x9d, 0x1b, 0xc4, 0xf4, 0x1b, 0x8b, 0x13, 0x00, 0xcb, 0x2f,
  0x21, 0x19, 0x91, 0x18, 0x80, 0xf4, 0xcf, 0xf5, 0x6d, 0x10, 0xd3, 0x6f,
  0x2c, 0x4e, 0x00, 0x2c, 0x3f, 0x32, 0x24, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x58, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x3c, 0x0c, 0x00, 0x00, 0x00,
  0x3e, 0x00, 0x00, 0x00, 0x0b, 0xb0, 0x71, 0x60, 0x07, 0x3d, 0xd0, 0x83,
  0x79, 0xc8, 0x87, 0x71, 0x60, 0x07, 0x3d, 0xd0, 0x83, 0x70, 0x18, 0x87,
  0x71, 0x28, 0x87, 0x79, 0x98, 0x87, 0x77, 0x90, 0x87, 0x5f, 0x90, 0x87,
  0x70, 0x70, 0x87, 0x73, 0x28, 0x87, 0x05, 0x48, 0x3b, 0xfc, 0xc2, 0x3b,
  0x98, 0x83, 0x39, 0xcc, 0x43, 0x39, 0xd0, 0xc3, 0x82, 0xa3, 0x1d, 0x7e,
  0x41, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x16, 0x14, 0xe6, 0xc0,
  0x0e, 0xef, 0x10, 0x0e, 0xf4, 0xb0, 0xe0, 0x79, 0x87, 0x76, 0x70, 0x87,
  0x74, 0x80, 0x87, 0x77, 0xa0, 0x87, 0x72, 0x70, 0x07, 0x7a, 0x00, 0x83,
  0x71, 0x40, 0x87, 0x70, 0x90, 0x87, 0x05, 0xcf, 0x2c, 0xa4, 0x43, 0x3b,
  0xc0, 0x03, 0x3b, 0x94, 0x03, 0x18, 0x8c, 0xc2, 0x1a, 0xac, 0x01, 0x18,
  0xd0, 0x82, 0x28, 0x84, 0x42, 0x28, 0x0c, 0x11, 0x12, 0x33, 0x18, 0x22,
  0x24, 0x67, 0x30, 0x44, 0x0a, 0x88, 0xe0, 0x08, 0x8e, 0x80, 0x08, 0x8e,
  0xe0, 0x08, 0x88, 0xe0, 0x08, 0x8e, 0x21, 0x52, 0x62, 0x24, 0x46, 0x62,
  0x24, 0x46, 0x62, 0x24, 0x46, 0x62, 0x24, 0x46, 0x62, 0x0c, 0x91, 0x12,
  0x24, 0x01, 0x83, 0x04, 0x0c, 0x12, 0x24, 0x01, 0x83, 0x04, 0x0c, 0x12,
  0x24, 0x01, 0x83, 0x04, 0x0c, 0x86, 0x48, 0xc9, 0x92, 0x2c, 0xc9, 0x92,
  0x2c, 0xc9, 0x92, 0x2c, 0xc9, 0x92, 0x2c, 0xc9, 0x32, 0x44, 0x4a, 0x9a,
  0x24, 0x0c, 0x12, 0x31, 0x48, 0x9a, 0x24, 0x0c, 0x12, 0x31, 0x48, 0x9a,
  0x24, 0x0c, 0x12, 0x31, 0x18, 0x22, 0x24, 0x65, 0x30, 0xc4, 0x48, 0xc8,
  0x20, 0x69, 0x03, 0x60, 0x18, 0x62, 0x24, 0x63, 0x90, 0xb8, 0x01, 0x30,
  0x0c, 0x31, 0x92, 0x37, 0x48, 0xde, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x06, 0xc4, 0x70, 0x13, 0xc0, 0x31, 0x62, 0x40, 0x0c, 0x37, 0x01,
  0x10, 0x23, 0x06, 0xc4, 0x70, 0x13, 0x40, 0x31, 0x62, 0x40, 0x0c, 0x37,
  0x11, 0x10, 0x23, 0x06, 0xc4, 0x70, 0x13, 0x41, 0x51, 0xce, 0x22, 0x05,
  0x31, 0x50, 0xd1, 0x23, 0x25, 0x35, 0x30, 0x9e, 0x90, 0x4c, 0x44, 0x8d,
  0xf1, 0x04, 0x65, 0x22, 0x6b, 0x54, 0x75, 0xc1, 0x78, 0x02, 0x32, 0x0d,
  0x46, 0x64, 0xd8, 0x00, 0x60, 0x40, 0x0c, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x5b, 0x06, 0x25, 0x80, 0x83, 0x2d, 0x03, 0x13, 0xc0, 0xc1, 0x96, 0xe1,
  0x09, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const char *const SYCL_main_cpp_bin_spir64_features[] = {
  0
};
const kernel_binary_info SYCL_main_cpp_bin_spir64_info = {
  "spir64",
  64,
  SYCL_main_cpp_bin_spir64,
  sizeof(SYCL_main_cpp_bin_spir64),
  SYCL_main_cpp_bin_spir64_features
};

} // namespace
} // namespace detail
} // namespace sycl
} // namespace cl
class vector_add;

//
// SYCL kernel info for: vector_add
//
namespace cl {
namespace sycl {
namespace detail {
namespace {

template <>
struct kernel_info< vector_add > {
  static const char* name;

  static const size_t bin_count;
  static const kernel_binary_info *const bin_info[];

  static const size_t arg_size;
  static const size_t arg_sizes[];
  static const size_t arg_offsets[];
  static const int arg_kinds[];
  static const int arg_class[];
  static const bool arg_used[];

  typedef const size_t* const_iterator;
  typedef const int* const_kind_iterator;
  typedef const bool* const_used_iterator;
  typedef const kernel_binary_info * const* blob_iterator;
  static blob_iterator binary_begin() { return bin_count > 0 ? &bin_info[0] : 0; }
  static blob_iterator binary_end() { return binary_begin() + bin_count; }
  static const_iterator size_begin() { return arg_size > 0 ? &arg_sizes[0] : 0; }
  static const_iterator size_end() { return size_begin() + arg_size; }
  static const_iterator offset_begin() { return arg_size > 0 ? &arg_offsets[0] : 0; }
  static const_iterator offset_end() { return offset_begin() + arg_size; }
  static const_kind_iterator kind_begin() { return arg_size > 0 ? &arg_kinds[0] : 0; }
  static const_kind_iterator kind_end() { return kind_begin() + arg_size; }
  static const_kind_iterator class_begin() { return arg_size > 0 ? &arg_class[0] : 0; }
  static const_kind_iterator class_end() { return class_begin() + arg_size; }
  static const_used_iterator used_begin() { return arg_size > 0 ? &arg_used[0] : 0; }
  static const_used_iterator used_end() { return used_begin() + arg_size; }
};
const char* kernel_info< vector_add >::name = "SYCL_class_vector_add";
const size_t kernel_info< vector_add >::bin_count = 1;
const kernel_binary_info *const kernel_info< vector_add >::bin_info[] = {
  &SYCL_main_cpp_bin_spir64_info,
  0
};
const size_t kernel_info< vector_add >::arg_size = 9;
const size_t kernel_info< vector_add >::arg_sizes[] = {
  8, // __attribute__((address_space(1))) float *
  16, // class cl::sycl::accessor_range
  16, // class cl::sycl::accessor_range
  8, // __attribute__((address_space(1))) float *
  16, // class cl::sycl::accessor_range
  16, // class cl::sycl::accessor_range
  8, // __attribute__((address_space(1))) float *
  16, // class cl::sycl::accessor_range
  16, // class cl::sycl::accessor_range
  0
};
const size_t kernel_info< vector_add >::arg_offsets[] = {
  0, // __attribute__((address_space(1))) float *
  8, // class cl::sycl::accessor_range
  24, // class cl::sycl::accessor_range
  40, // __attribute__((address_space(1))) float *
  48, // class cl::sycl::accessor_range
  64, // class cl::sycl::accessor_range
  80, // __attribute__((address_space(1))) float *
  88, // class cl::sycl::accessor_range
  104, // class cl::sycl::accessor_range
  0
};
const int kernel_info< vector_add >::arg_kinds[] = {
  2, // Pointer
  1, // Normal
  1, // Normal
  2, // Pointer
  1, // Normal
  1, // Normal
  2, // Pointer
  1, // Normal
  1, // Normal
  0
};
const int kernel_info< vector_add >::arg_class[] = {
  1,
  1,
  1,
  1,
  1,
  1,
  1,
  1,
  1,
  0
};
const bool kernel_info< vector_add >::arg_used[] = {
  true, // __attribute__((address_space(1))) float *
  false, // class cl::sycl::accessor_range
  false, // class cl::sycl::accessor_range
  true, // __attribute__((address_space(1))) float *
  false, // class cl::sycl::accessor_range
  false, // class cl::sycl::accessor_range
  true, // __attribute__((address_space(1))) float *
  false, // class cl::sycl::accessor_range
  false, // class cl::sycl::accessor_range
  0
};

} // namespace
} // namespace detail
} // namespace sycl
} // namespace cl
#endif // CODEPLAY_SYCL_main_cpp_STUB

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.11.25547.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_02LMMGGCAJ@?3?5?$AA@			; `string'
PUBLIC	??_C@_0FE@JPLNENK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5naive?5?5?5?5?5?5?5func?5@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_01HCONENDN@?$HL?$AA@			; `string'
PUBLIC	??_C@_01IHBHIGKO@?0?$AA@			; `string'
PUBLIC	??_C@_01CELHOKLL@?$HN?$AA@			; `string'
PUBLIC	??_C@_07CCDOBJC@?5ms?5?$CI?$CJ?5?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_02PHMGELLB@?6?6?$AA@			; `string'
PUBLIC	??_C@_05NAKBEJEJ@?6n?5?$DN?5?$AA@		; `string'
PUBLIC	??_C@_0P@PBMJDCHB@CPU?5Blocked?516?$AA@		; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
EXTRN	__imp_?rdstate@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__Query_perf_counter:PROC
EXTRN	__imp___std_terminate:PROC
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	??_M@YAXPEAX_K1P6AX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__imp_?_Xlength_error@std@@YAXPEBD@Z:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__imp__Query_perf_frequency:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	__imp_memmove:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__imp___CxxFrameHandler3:PROC
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PBMJDCHB@CPU?5Blocked?516?$AA@
CONST	SEGMENT
??_C@_0P@PBMJDCHB@CPU?5Blocked?516?$AA@ DB 'CPU Blocked 16', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NAKBEJEJ@?6n?5?$DN?5?$AA@
CONST	SEGMENT
??_C@_05NAKBEJEJ@?6n?5?$DN?5?$AA@ DB 0aH, 'n = ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02PHMGELLB@?6?6?$AA@
CONST	SEGMENT
??_C@_02PHMGELLB@?6?6?$AA@ DB 0aH, 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07CCDOBJC@?5ms?5?$CI?$CJ?5?$AA@
CONST	SEGMENT
??_C@_07CCDOBJC@?5ms?5?$CI?$CJ?5?$AA@ DB ' ms () ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01CELHOKLL@?$HN?$AA@
CONST	SEGMENT
??_C@_01CELHOKLL@?$HN?$AA@ DB '}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0?$AA@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0?$AA@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01HCONENDN@?$HL?$AA@
CONST	SEGMENT
??_C@_01HCONENDN@?$HL?$AA@ DB '{', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@JPLNENK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5naive?5?5?5?5?5?5?5func?5@
CONST	SEGMENT
??_C@_0FE@JPLNENK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5naive?5?5?5?5?5?5?5func?5@ DB ' '
	DB	'              naive       func naive   blocked   view blocked'
	DB	'   func view blocked', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5?$AA@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5?$AA@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
PUBLIC	??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z	; std::_Copy_memmove<double * __ptr64,double * __ptr64>
PUBLIC	??$forward@AEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAAEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEBU10@@Z ; std::forward<std::pair<std::vector<double,std::allocator<double> >,double> const & __ptr64>
PUBLIC	??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNUEmptyList@@@@V1@@<lambda_961065762246b99eadeb829041f0d74c>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNUEmptyList@@@@1@Z ; <lambda_961065762246b99eadeb829041f0d74c>::operator()<View<double * __ptr64,double,EmptyList>,View<double const * __ptr64,double,EmptyList>,View<double const * __ptr64,double,EmptyList> >
PUBLIC	??A?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@QEBA?AV?$View@PEBNNUEmptyList@@@@_K@Z ; View<double const * __ptr64,double,List<P<16,512>,EmptyList> >::operator[]
PUBLIC	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
PUBLIC	??0?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@QEAA@AEBQEBN_K@Z ; View<double const * __ptr64,double,List<P<16,512>,EmptyList> >::View<double const * __ptr64,double,List<P<16,512>,EmptyList> >
PUBLIC	??0?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEBU01@@Z ; std::pair<std::vector<double,std::allocator<double> >,double>::pair<std::vector<double,std::allocator<double> >,double>
PUBLIC	??$_Rechecked@PEANPEAN@std@@YAAEAPEANAEAPEANPEAN@Z ; std::_Rechecked<double * __ptr64,double * __ptr64>
PUBLIC	??$_Uninitialized_copy_al_unchecked@NNV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_copy_al_unchecked<double,double,std::allocator<double> >
PUBLIC	??$_Ptr_copy_cat@NN@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAN0@Z ; std::_Ptr_copy_cat<double,double>
PUBLIC	??$_Unchecked@PEAN@std@@YAPEANPEAN@Z		; std::_Unchecked<double * __ptr64>
PUBLIC	??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::construct<std::pair<std::vector<double,std::allocator<double> >,double>,std::pair<std::vector<double,std::allocator<double> >,double> const & __ptr64>
PUBLIC	??$?RV?$View@PEANNUEmptyList@@@@V0@V0@@<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@QEBAXV?$View@PEANNUEmptyList@@@@00@Z ; <lambda_3f837a234d39e606b056c86a3fa6e7a3>::operator()<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList> >
PUBLIC	??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V1@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@00@Z ; hof::zip<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,double * __ptr64,double,List<P<16,1>,EmptyList>,View<double * __ptr64,double,List<P<16,1>,EmptyList> > >
PUBLIC	??A?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@_K@Z ; View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > >::operator[]
PUBLIC	??$_Uninitialized_copy@PEANPEANV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@@Z ; std::_Uninitialized_copy<double * __ptr64,double * __ptr64,std::allocator<double> >
PUBLIC	??$?0V?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@N@1@@Z ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><std::allocator<double> >
PUBLIC	??$forward@V?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z ; std::forward<std::allocator<double> >
PUBLIC	??$_Rechecked@PEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@@std@@YAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEAPEAU10@PEAU10@@Z ; std::_Rechecked<std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64>
PUBLIC	??$?0U?$integral_constant@_N$00@std@@@_Unused_parameter@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z ; std::_Unused_parameter::_Unused_parameter<std::integral_constant<bool,1> >
PUBLIC	??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z ; std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
PUBLIC	??$_Ptr_copy_cat@$$CBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@U12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEBQEAU20@@Z ; std::_Ptr_copy_cat<std::pair<std::vector<double,std::allocator<double> >,double> const ,std::pair<std::vector<double,std::allocator<double> >,double> >
PUBLIC	??$_Unchecked@PEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEAU10@@Z ; std::_Unchecked<std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64>
PUBLIC	??$_Unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@@Z ; std::_Unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>
PUBLIC	??A?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@_K@Z ; View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >::operator[]
PUBLIC	??0?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@QEAA@AEBQEBN_K@Z ; View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > >::View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > >
PUBLIC	??_G?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAAPEAXI@Z ; std::pair<std::vector<double,std::allocator<double> >,double>::`scalar deleting destructor'
PUBLIC	??$_Ucopy@PEAN@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z ; std::vector<double,std::allocator<double> >::_Ucopy<double * __ptr64>
PUBLIC	??$?0V?$allocator@N@std@@X@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAA@$$QEAV?$allocator@N@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > ><std::allocator<double>,void>
PUBLIC	??$destroy@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::destroy<std::pair<std::vector<double,std::allocator<double> >,double> >
PUBLIC	??$_Unfancy@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEAU10@@Z ; std::_Unfancy<std::pair<std::vector<double,std::allocator<double> >,double> >
PUBLIC	??$_Zero_range@PEAN@std@@YAPEANPEAN0@Z		; std::_Zero_range<double * __ptr64>
PUBLIC	??$_Uninitialized_copy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z ; std::_Uninitialized_copy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
PUBLIC	??$_Distance1@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YA_JPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0Urandom_access_iterator_tag@0@@Z ; std::_Distance1<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>
PUBLIC	??A?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@_K@Z ; View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > >::operator[]
PUBLIC	?size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ; std::vector<double,std::allocator<double> >::size
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBQEANXZ ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Mylast
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA?AV?$allocator@N@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<double> >::select_on_container_copy_construction
PUBLIC	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<double> >::_Vector_val<std::_Simple_types<double> >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >
PUBLIC	??0?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@QEAA@AEBQEBN_K@Z ; View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > >::View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > >
PUBLIC	??$_Destroy_range1@V?$allocator@N@std@@@std@@YAXPEAN0AEAV?$allocator@N@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<double> >
PUBLIC	??$_Destroy_range1@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
PUBLIC	??$_Uninitialized_value_construct_n1@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_value_construct_n1<double * __ptr64,unsigned __int64,std::allocator<double> >
PUBLIC	??$?0AEBV?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@N@1@@Z ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><std::allocator<double> const & __ptr64>
PUBLIC	??$forward@AEBV?$allocator@N@std@@@std@@YAAEBV?$allocator@N@0@AEBV10@@Z ; std::forward<std::allocator<double> const & __ptr64>
PUBLIC	??$_Ucopy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@PEBU21@0PEAU21@@Z ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Ucopy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>
PUBLIC	??$distance@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YA_JPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0@Z ; std::distance<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>
PUBLIC	??$?0AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1><std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > const & __ptr64>
PUBLIC	??$forward@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > const & __ptr64>
PUBLIC	??A?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@_K@Z ; View<double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >::operator[]
PUBLIC	??$?0AEAV?$vector@NV?$allocator@N@std@@@std@@NX$0A@@?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEAV?$vector@NV?$allocator@N@std@@@1@$$QEAN@Z ; std::pair<std::vector<double,std::allocator<double> >,double>::pair<std::vector<double,std::allocator<double> >,double><std::vector<double,std::allocator<double> > & __ptr64,double,void,0>
PUBLIC	??$forward@N@std@@YA$$QEANAEAN@Z		; std::forward<double>
PUBLIC	??$forward@AEAV?$vector@NV?$allocator@N@std@@@std@@@std@@YAAEAV?$vector@NV?$allocator@N@std@@@0@AEAV10@@Z ; std::forward<std::vector<double,std::allocator<double> > & __ptr64>
PUBLIC	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
PUBLIC	??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Get_first
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::max_size
PUBLIC	?allocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z ; std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >::allocate
PUBLIC	?max_size@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::max_size
PUBLIC	?_Xlength@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@CAXXZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Xlength
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	?_Buy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAA_N_K@Z ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Buy
PUBLIC	??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEAN0AEAV?$allocator@N@0@@Z ; std::_Destroy_range<std::allocator<double> >
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
PUBLIC	??$_Uninitialized_value_construct_n@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@@Z ; std::_Uninitialized_value_construct_n<double * __ptr64,unsigned __int64,std::allocator<double> >
PUBLIC	??$?0AEBV?$allocator@N@std@@X@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > ><std::allocator<double> const & __ptr64,void>
PUBLIC	??$_Unfancy_maybe_null@N@std@@YAPEANPEAN@Z	; std::_Unfancy_maybe_null<double>
PUBLIC	??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Range_construct_or_tidy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>
PUBLIC	??$?0AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > ><std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > const & __ptr64,void>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * __ptr64 const & __ptr64>
PUBLIC	??$make_pair@AEAV?$vector@NV?$allocator@N@std@@@std@@N@std@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEAV?$vector@NV?$allocator@N@std@@@0@$$QEAN@Z ; std::make_pair<std::vector<double,std::allocator<double> > & __ptr64,double>
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
PUBLIC	??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
PUBLIC	??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$allocator@N@2@XZ ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Get_second
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBV?$allocator@N@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Getal
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBQEANXZ ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Myend
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA_KAEBV?$allocator@N@2@@Z ; std::_Default_allocator_traits<std::allocator<double> >::max_size
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_second
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Get_data
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Myend
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Get_second
PUBLIC	?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z	; std::allocator<double>::deallocate
PUBLIC	?allocate@?$allocator@N@std@@QEAAPEAN_K@Z	; std::allocator<double>::allocate
PUBLIC	?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ; std::vector<double,std::allocator<double> >::max_size
PUBLIC	?capacity@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ; std::vector<double,std::allocator<double> >::capacity
PUBLIC	?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z ; std::vector<double,std::allocator<double> >::_Destroy
PUBLIC	?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ ; std::vector<double,std::allocator<double> >::_Xlength
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAV?$allocator@N@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Get_data
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAPEANXZ ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Myend
PUBLIC	?deallocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAXQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z ; std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >::deallocate
PUBLIC	?capacity@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::capacity
PUBLIC	?_Destroy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@0@Z ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Destroy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Myend
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	?_Udefault@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN_K@Z ; std::vector<double,std::allocator<double> >::_Udefault
PUBLIC	?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z ; std::vector<double,std::allocator<double> >::_Buy
PUBLIC	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAPEANXZ ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBQEANXZ ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAPEANXZ ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Mylast
PUBLIC	?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Tidy
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Mylast
PUBLIC	?begin@?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ; std::initializer_list<std::pair<std::vector<double,std::allocator<double> >,double> >::begin
PUBLIC	?end@?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ; std::initializer_list<std::pair<std::vector<double,std::allocator<double> >,double> >::end
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??0?$allocator@N@std@@QEAA@XZ			; std::allocator<double>::allocator<double>
PUBLIC	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
PUBLIC	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ	; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
PUBLIC	?data@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANXZ ; std::vector<double,std::allocator<double> >::data
PUBLIC	?data@?$vector@NV?$allocator@N@std@@@std@@QEBAPEBNXZ ; std::vector<double,std::allocator<double> >::data
PUBLIC	??A?$vector@NV?$allocator@N@std@@@std@@QEAAAEAN_K@Z ; std::vector<double,std::allocator<double> >::operator[]
PUBLIC	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
PUBLIC	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
PUBLIC	??0?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAA@XZ ; std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >
PUBLIC	??0?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
PUBLIC	??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::~vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
PUBLIC	?_Unchecked_begin@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Unchecked_end
PUBLIC	??0?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAA@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0@Z ; std::initializer_list<std::pair<std::vector<double,std::allocator<double> >,double> >::initializer_list<std::pair<std::vector<double,std::allocator<double> >,double> >
PUBLIC	??0?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAA@AEBQEBN_K@Z ; View<double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::View<double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >
PUBLIC	??0?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAA@AEBQEAN_K@Z ; View<double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::View<double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >
PUBLIC	??0?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEAA@AEBQEBN_K@Z ; View<double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >::View<double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >
PUBLIC	??0?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAA@AEBQEBN_K@Z ; View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >
PUBLIC	??0?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEAA@AEBQEAN_K@Z ; View<double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >::View<double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >
PUBLIC	??0?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAA@AEBQEAN_K@Z ; View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >
PUBLIC	??0?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEAA@AEBQEBN_K@Z ; View<double const * __ptr64,double,List<P<16,1>,EmptyList> >::View<double const * __ptr64,double,List<P<16,1>,EmptyList> >
PUBLIC	??0?$View@PEBNNUEmptyList@@@@QEAA@PEBN_K@Z	; View<double const * __ptr64,double,EmptyList>::View<double const * __ptr64,double,EmptyList>
PUBLIC	??B?$View@PEBNNUEmptyList@@@@QEBANXZ		; View<double const * __ptr64,double,EmptyList>::operator double
PUBLIC	??0?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEAA@AEBQEAN_K@Z ; View<double * __ptr64,double,List<P<16,1>,EmptyList> >::View<double * __ptr64,double,List<P<16,1>,EmptyList> >
PUBLIC	??0?$View@PEANNUEmptyList@@@@QEAA@PEAN_K@Z	; View<double * __ptr64,double,EmptyList>::View<double * __ptr64,double,EmptyList>
PUBLIC	??4?$View@PEANNUEmptyList@@@@QEBAXN@Z		; View<double * __ptr64,double,EmptyList>::operator=
PUBLIC	??B?$View@PEANNUEmptyList@@@@QEBANXZ		; View<double * __ptr64,double,EmptyList>::operator double
PUBLIC	??0?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@QEAA@AEBQEBN_K@Z ; View<double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >::View<double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >
PUBLIC	??0?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAA@AEBQEAN_K@Z ; View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >::View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >
PUBLIC	?__autoclassinit2@?$View@PEANNUEmptyList@@@@QEAAX_K@Z ; View<double * __ptr64,double,EmptyList>::__autoclassinit2
PUBLIC	?__autoclassinit2@?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAAX_K@Z ; View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@QEAAX_K@Z ; View<double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >::__autoclassinit2
PUBLIC	??1?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@XZ ; std::pair<std::vector<double,std::allocator<double> >,double>::~pair<std::vector<double,std::allocator<double> >,double>
PUBLIC	?__autoclassinit2@?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAAX_K@Z ; View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAAX_K@Z ; View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAAX_K@Z ; View<double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAAX_K@Z ; View<double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$vector@NV?$allocator@N@std@@@std@@QEAAX_K@Z ; std::vector<double,std::allocator<double> >::__autoclassinit2
PUBLIC	??$construct@PEADAEBQEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEADAEBQEAD@Z ; std::_Default_allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 const & __ptr64>
PUBLIC	??$destroy@PEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEAD@Z ; std::_Default_allocator_traits<std::allocator<char> >::destroy<char * __ptr64>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char * __ptr64>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z ; functional_view_blocked<512,16,double>
PUBLIC	??A?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEBA?AV?$View@PEANNUEmptyList@@@@_K@Z ; View<double * __ptr64,double,List<P<16,1>,EmptyList> >::operator[]
PUBLIC	??A?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@_K@Z ; View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::operator[]
PUBLIC	??A?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEBA?AV?$View@PEBNNUEmptyList@@@@_K@Z ; View<double const * __ptr64,double,List<P<16,1>,EmptyList> >::operator[]
PUBLIC	??A?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@_K@Z ; View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::operator[]
PUBLIC	??A?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@_K@Z ; View<double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >::operator[]
PUBLIC	??A?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@_K@Z ; View<double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::operator[]
PUBLIC	??A?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@_K@Z ; View<double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >::operator[]
PUBLIC	??A?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@_K@Z ; View<double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::operator[]
PUBLIC	??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z ; view_blocked<512,16,double>
PUBLIC	??$invoke@$0CAA@@@YAXXZ				; invoke<512>
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000> >,__int64,std::ratio<1,1000000000>,void>
PUBLIC	??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$min@V?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@@std@@YAAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@0@AEBV120@0@Z ; std::min<std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > >
PUBLIC	??$max@V?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@@std@@YAAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@0@AEBV120@0@Z ; std::max<std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > >
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Max_value<unsigned __int64>
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000> >::count
PUBLIC	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	main
PUBLIC	?ms@@YANAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@0@Z ; ms
PUBLIC	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	?_Deallocate@std@@YAXPEAX_K1@Z			; std::_Deallocate
PUBLIC	?_Allocate@std@@YAPEAX_K0_N@Z			; std::_Allocate
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?_Orphan_all@_Container_base0@std@@QEAAXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?assign@?$char_traits@D@std@@SAXAEADAEBD@Z	; std::char_traits<char>::assign
PUBLIC	?move@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z	; std::char_traits<char>::move
PUBLIC	?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z	; std::char_traits<char>::copy
PUBLIC	?length@?$char_traits@D@std@@SA_KQEBD@Z		; std::char_traits<char>::length
PUBLIC	??3@YAXPEAX0@Z					; operator delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?add@hof@@3V<lambda>@@A				; hof::add
PUBLIC	?mul@hof@@3V<lambda>@@A				; hof::mul
PUBLIC	__real@3ed0000000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@43f0000000000000
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__std_terminate:PROC
EXTRN	memcpy:PROC
EXTRN	memset:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
?add@hof@@3V<lambda>@@A DB 01H DUP (?)			; hof::add
?mul@hof@@3V<lambda>@@A DB 01H DUP (?)			; hof::mul
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z DD imagerel $LN52
	DD	imagerel $LN52+774
	DD	imagerel $unwind$??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEBU01@@Z DD imagerel $LN5
	DD	imagerel $LN5+43
	DD	imagerel $unwind$??0?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy_al_unchecked@NNV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+49
	DD	imagerel $unwind$??$_Uninitialized_copy_al_unchecked@NNV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z DD imagerel $LN12
	DD	imagerel $LN12+70
	DD	imagerel $unwind$??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z@4HA DD imagerel ?dtor$0@?0???$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z@4HA
	DD	imagerel ?dtor$0@?0???$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V1@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@00@Z DD imagerel $LN32
	DD	imagerel $LN32+472
	DD	imagerel $unwind$??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V1@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_1273283c9775fef46ee1404488bda320>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z DD imagerel ??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_1273283c9775fef46ee1404488bda320>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z
	DD	imagerel ??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_1273283c9775fef46ee1404488bda320>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z+84
	DD	imagerel $unwind$??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_1273283c9775fef46ee1404488bda320>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$map@V<lambda_1273283c9775fef46ee1404488bda320>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_1273283c9775fef46ee1404488bda320>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z DD imagerel ??$map@V<lambda_1273283c9775fef46ee1404488bda320>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_1273283c9775fef46ee1404488bda320>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
	DD	imagerel ??$map@V<lambda_1273283c9775fef46ee1404488bda320>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_1273283c9775fef46ee1404488bda320>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z+213
	DD	imagerel $unwind$??$map@V<lambda_1273283c9775fef46ee1404488bda320>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_1273283c9775fef46ee1404488bda320>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_87ccf09596cd73ff58e95777441719b2>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z DD imagerel ??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_87ccf09596cd73ff58e95777441719b2>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z
	DD	imagerel ??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_87ccf09596cd73ff58e95777441719b2>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z+84
	DD	imagerel $unwind$??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_87ccf09596cd73ff58e95777441719b2>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$map@V<lambda_87ccf09596cd73ff58e95777441719b2>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_87ccf09596cd73ff58e95777441719b2>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z DD imagerel ??$map@V<lambda_87ccf09596cd73ff58e95777441719b2>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_87ccf09596cd73ff58e95777441719b2>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
	DD	imagerel ??$map@V<lambda_87ccf09596cd73ff58e95777441719b2>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_87ccf09596cd73ff58e95777441719b2>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z+213
	DD	imagerel $unwind$??$map@V<lambda_87ccf09596cd73ff58e95777441719b2>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_87ccf09596cd73ff58e95777441719b2>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEANPEANV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@@Z DD imagerel $LN18
	DD	imagerel $LN18+49
	DD	imagerel $unwind$??$_Uninitialized_copy@PEANPEANV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z DD imagerel $LN28
	DD	imagerel $LN28+95
	DD	imagerel $unwind$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$3@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA DD imagerel ?catch$3@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA
	DD	imagerel ?catch$3@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA+36
	DD	imagerel $unwind$?catch$3@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V0@V0@@<lambda_b1116c9adf3516ba3c36d924ce54a452>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@00@Z DD imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V0@V0@@<lambda_b1116c9adf3516ba3c36d924ce54a452>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@00@Z
	DD	imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V0@V0@@<lambda_b1116c9adf3516ba3c36d924ce54a452>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@00@Z+55
	DD	imagerel $unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V0@V0@@<lambda_b1116c9adf3516ba3c36d924ce54a452>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z DD imagerel ??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z
	DD	imagerel ??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z+215
	DD	imagerel $unwind$??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_34aff3510488d97e7cf1c072c51f11e0>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z DD imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_34aff3510488d97e7cf1c072c51f11e0>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z
	DD	imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_34aff3510488d97e7cf1c072c51f11e0>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z+230
	DD	imagerel $unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_34aff3510488d97e7cf1c072c51f11e0>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$map@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z DD imagerel ??$map@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z
	DD	imagerel ??$map@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z+342
	DD	imagerel $unwind$??$map@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z DD imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z
	DD	imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z+230
	DD	imagerel $unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$map@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z DD imagerel ??$map@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z
	DD	imagerel ??$map@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z+314
	DD	imagerel $unwind$??$map@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAAPEAXI@Z DD imagerel $LN11
	DD	imagerel $LN11+23
	DD	imagerel $unwind$??_G?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEAN@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z DD imagerel $LN26
	DD	imagerel $LN26+46
	DD	imagerel $unwind$??$_Ucopy@PEAN@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Zero_range@PEAN@std@@YAPEANPEAN0@Z DD imagerel $LN4
	DD	imagerel $LN4+31
	DD	imagerel $unwind$??$_Zero_range@PEAN@std@@YAPEANPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z DD imagerel $LN17
	DD	imagerel $LN17+42
	DD	imagerel $unwind$??$_Uninitialized_copy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V0@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@<lambda_82709c2af490acbaaecbe567606e69e8>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z DD imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V0@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@<lambda_82709c2af490acbaaecbe567606e69e8>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z
	DD	imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V0@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@<lambda_82709c2af490acbaaecbe567606e69e8>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z+206
	DD	imagerel $unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V0@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@<lambda_82709c2af490acbaaecbe567606e69e8>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z DD imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
	DD	imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z+315
	DD	imagerel $unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z DD imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
	DD	imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z+327
	DD	imagerel $unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z DD imagerel ??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z
	DD	imagerel ??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z+770
	DD	imagerel $unwind$??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN111
	DD	imagerel $LN111+59
	DD	imagerel $unwind$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN111+59
	DD	imagerel $LN111+92
	DD	imagerel $chain$0$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN111+92
	DD	imagerel $LN111+106
	DD	imagerel $chain$1$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range1@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U?$integral_constant@_N$0A@@0@@Z DD imagerel $LN26
	DD	imagerel $LN26+49
	DD	imagerel $unwind$??$_Destroy_range1@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U?$integral_constant@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n1@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@U?$integral_constant@_N$00@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+46
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n1@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@PEBU21@0PEAU21@@Z DD imagerel $LN25
	DD	imagerel $LN25+26
	DD	imagerel $unwind$??$_Ucopy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@PEBU21@0PEAU21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@<lambda_7e04991c64d89450a9afdec7af8092d1>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z DD imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@<lambda_7e04991c64d89450a9afdec7af8092d1>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z
	DD	imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@<lambda_7e04991c64d89450a9afdec7af8092d1>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z+88
	DD	imagerel $unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@<lambda_7e04991c64d89450a9afdec7af8092d1>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$map@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@@Z DD imagerel ??$map@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@@Z
	DD	imagerel ??$map@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@@Z+221
	DD	imagerel $unwind$??$map@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAV?$vector@NV?$allocator@N@std@@@std@@NX$0A@@?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEAV?$vector@NV?$allocator@N@std@@@1@$$QEAN@Z DD imagerel $LN11
	DD	imagerel $LN11+42
	DD	imagerel $unwind$??$?0AEAV?$vector@NV?$allocator@N@std@@@std@@NX$0A@@?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEAV?$vector@NV?$allocator@N@std@@@1@$$QEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD imagerel $LN111
	DD	imagerel $LN111+460
	DD	imagerel $unwind$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD imagerel ?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	imagerel ?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA+56
	DD	imagerel $unwind$?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z DD imagerel $LN14
	DD	imagerel $LN14+110
	DD	imagerel $unwind$?allocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAA_N_K@Z DD imagerel $LN116
	DD	imagerel $LN116+145
	DD	imagerel $unwind$?_Buy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z DD imagerel $LN28
	DD	imagerel $LN28+49
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+46
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z DD imagerel $LN171
	DD	imagerel $LN171+194
	DD	imagerel $unwind$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$41@?0???$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z@4HA DD imagerel ?catch$41@?0???$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?catch$41@?0???$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z@4HA+32
	DD	imagerel $unwind$?catch$41@?0???$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@<lambda_d96185b9da9a7d2086bd47349d2635dc>@@QEBAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@Z DD imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@<lambda_d96185b9da9a7d2086bd47349d2635dc>@@QEBAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@Z
	DD	imagerel ??$?RV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@<lambda_d96185b9da9a7d2086bd47349d2635dc>@@QEBAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@Z+233
	DD	imagerel $unwind$??$?RV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@<lambda_d96185b9da9a7d2086bd47349d2635dc>@@QEBAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$map@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@@Z DD imagerel ??$map@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@@Z
	DD	imagerel ??$map@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@@Z+326
	DD	imagerel $unwind$??$map@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@AEAV?$vector@NV?$allocator@N@std@@@std@@N@std@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEAV?$vector@NV?$allocator@N@std@@@0@$$QEAN@Z DD imagerel $LN21
	DD	imagerel $LN21+42
	DD	imagerel $unwind$??$make_pair@AEAV?$vector@NV?$allocator@N@std@@@std@@N@std@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEAV?$vector@NV?$allocator@N@std@@@0@$$QEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z DD imagerel $LN20
	DD	imagerel $LN20+84
	DD	imagerel $unwind$?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@N@std@@QEAAPEAN_K@Z DD imagerel $LN14
	DD	imagerel $LN14+114
	DD	imagerel $unwind$?allocate@?$allocator@N@std@@QEAAPEAN_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAXQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+81
	DD	imagerel $unwind$?deallocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAXQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@0@Z DD imagerel $LN36
	DD	imagerel $LN36+49
	DD	imagerel $unwind$?_Destroy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN10
	DD	imagerel $LN10+44
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+45
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Udefault@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN_K@Z DD imagerel $LN16
	DD	imagerel $LN16+49
	DD	imagerel $unwind$?_Udefault@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z DD imagerel $LN117
	DD	imagerel $LN117+42
	DD	imagerel $unwind$?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z DD imagerel $LN117+42
	DD	imagerel $LN117+135
	DD	imagerel $chain$0$?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z DD imagerel $LN117+135
	DD	imagerel $LN117+147
	DD	imagerel $chain$1$?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ DD imagerel $LN114
	DD	imagerel $LN114+120
	DD	imagerel $unwind$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ DD imagerel $LN147
	DD	imagerel $LN147+21
	DD	imagerel $unwind$?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ DD imagerel $LN147+21
	DD	imagerel $LN147+86
	DD	imagerel $chain$0$?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ DD imagerel $LN147+86
	DD	imagerel $LN147+164
	DD	imagerel $chain$1$?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN26
	DD	imagerel $LN26+124
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN13
	DD	imagerel $LN13+72
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z DD imagerel $LN54
	DD	imagerel $LN54+38
	DD	imagerel $unwind$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z DD imagerel $LN54+38
	DD	imagerel $LN54+80
	DD	imagerel $chain$0$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z DD imagerel $LN54+80
	DD	imagerel $LN54+94
	DD	imagerel $chain$1$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z DD imagerel $LN22
	DD	imagerel $LN22+43
	DD	imagerel $unwind$??0?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ DD imagerel $LN150
	DD	imagerel $LN150+21
	DD	imagerel $unwind$??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ DD imagerel $LN150+21
	DD	imagerel $LN150+86
	DD	imagerel $chain$0$??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ DD imagerel $LN150+86
	DD	imagerel $LN150+164
	DD	imagerel $chain$1$??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
	DD	imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z+34
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z+34
	DD	imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z+314
	DD	imagerel $chain$2$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z+314
	DD	imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z+321
	DD	imagerel $chain$4$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z+321
	DD	imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z+327
	DD	imagerel $chain$5$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z DD imagerel $LN257
	DD	imagerel $LN257+585
	DD	imagerel $unwind$??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z DD imagerel $LN291
	DD	imagerel $LN291+868
	DD	imagerel $unwind$??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_c164751ea5715ae0ff95fdbf1eaa21f3>@@QEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@2@@Z DD imagerel ??R<lambda_c164751ea5715ae0ff95fdbf1eaa21f3>@@QEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@2@@Z
	DD	imagerel ??R<lambda_c164751ea5715ae0ff95fdbf1eaa21f3>@@QEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@2@@Z+137
	DD	imagerel $unwind$??R<lambda_c164751ea5715ae0ff95fdbf1eaa21f3>@@QEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@$0CAA@@@YAXXZ DD imagerel $LN378
	DD	imagerel $LN378+815
	DD	imagerel $unwind$??$invoke@$0CAA@@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???$invoke@$0CAA@@@YAXXZ@4HA DD imagerel ?dtor$4@?0???$invoke@$0CAA@@@YAXXZ@4HA
	DD	imagerel ?dtor$4@?0???$invoke@$0CAA@@@YAXXZ@4HA+42
	DD	imagerel $unwind$?dtor$4@?0???$invoke@$0CAA@@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN113
	DD	imagerel $LN113+445
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+56
	DD	imagerel $unwind$?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN20
	DD	imagerel $LN20+62
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN14
	DD	imagerel $LN14+91
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD imagerel ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
	DD	imagerel ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z+46
	DD	imagerel $unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN154
	DD	imagerel $LN154+139
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN154+139
	DD	imagerel $LN154+361
	DD	imagerel $chain$1$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN154+361
	DD	imagerel $LN154+368
	DD	imagerel $chain$3$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN154+368
	DD	imagerel $LN154+374
	DD	imagerel $chain$4$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD imagerel $LN46
	DD	imagerel $LN46+100
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN31
	DD	imagerel $LN31+48
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN49
	DD	imagerel $LN49+100
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD imagerel $LN8
	DD	imagerel $LN8+75
	DD	imagerel $unwind$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Deallocate@std@@YAXPEAX_K1@Z DD imagerel $LN17
	DD	imagerel $LN17+80
	DD	imagerel $unwind$?_Deallocate@std@@YAXPEAX_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@std@@YAPEAX_K0_N@Z DD imagerel $LN11
	DD	imagerel $LN11+106
	DD	imagerel $unwind$?_Allocate@std@@YAPEAX_K0_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+30
	DD	imagerel $unwind$?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT __real@43f0000000000000
CONST	SEGMENT
__real@43f0000000000000 DQ 043f0000000000000r	; 1.84467e+19
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@3ed0000000000000
CONST	SEGMENT
__real@3ed0000000000000 DQ 03ed0000000000000r	; 3.8147e-06
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@std@@YAPEAX_K0_N@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Deallocate@std@@YAXPEAX_K1@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 021H
	DD	imagerel $LN154
	DD	imagerel $LN154+139
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 040021H
	DD	04f400H
	DD	0b5400H
	DD	imagerel $LN154
	DD	imagerel $LN154+139
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 040e21H
	DD	04f40eH
	DD	0b5405H
	DD	imagerel $LN154
	DD	imagerel $LN154+139
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 050a01H
	DD	0e006420aH
	DD	060037004H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+113
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+167
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+181
	DD	02H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+338
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+379
	DD	04H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+399
	DD	05H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+424
	DD	0ffffffffH
	DD	imagerel ?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+13
	DD	03H
	DD	imagerel ?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+42
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$2@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	imagerel __imp___std_terminate
	DD	04H
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	01H
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0bH
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 081f19H
	DD	0f341fH
	DD	0f00d7211H
	DD	0c009e00bH
	DD	060067007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???$invoke@$0CAA@@@YAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$invoke@$0CAA@@@YAXXZ DD imagerel ??$invoke@$0CAA@@@YAXXZ
	DD	0ffffffffH
	DD	imagerel ??$invoke@$0CAA@@@YAXXZ+126
	DD	00H
	DD	imagerel ??$invoke@$0CAA@@@YAXXZ+155
	DD	01H
	DD	imagerel ??$invoke@$0CAA@@@YAXXZ+317
	DD	02H
	DD	imagerel ??$invoke@$0CAA@@@YAXXZ+335
	DD	03H
	DD	imagerel ??$invoke@$0CAA@@@YAXXZ+369
	DD	04H
	DD	imagerel ??$invoke@$0CAA@@@YAXXZ+405
	DD	05H
	DD	imagerel ??$invoke@$0CAA@@@YAXXZ+528
	DD	04H
	DD	imagerel ??$invoke@$0CAA@@@YAXXZ+617
	DD	03H
	DD	imagerel ??$invoke@$0CAA@@@YAXXZ+733
	DD	01H
	DD	imagerel ??$invoke@$0CAA@@@YAXXZ+759
	DD	00H
	DD	imagerel ??$invoke@$0CAA@@@YAXXZ+769
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$invoke@$0CAA@@@YAXXZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$invoke@$0CAA@@@YAXXZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???$invoke@$0CAA@@@YAXXZ@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???$invoke@$0CAA@@@YAXXZ@4HA
	DD	01H
	DD	imagerel ?dtor$4@?0???$invoke@$0CAA@@@YAXXZ@4HA
	DD	03H
	DD	imagerel ?dtor$5@?0???$invoke@$0CAA@@@YAXXZ@4HA
	DD	04H
	DD	imagerel ?dtor$6@?0???$invoke@$0CAA@@@YAXXZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$invoke@$0CAA@@@YAXXZ DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$??$invoke@$0CAA@@@YAXXZ
	DD	00H
	DD	00H
	DD	0cH
	DD	imagerel $ip2state$??$invoke@$0CAA@@@YAXXZ
	DD	058H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@$0CAA@@@YAXXZ DD 093119H
	DD	0207423H
	DD	01f641fH
	DD	01e341bH
	DD	01c010fH
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??$invoke@$0CAA@@@YAXXZ
	DD	0d2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_c164751ea5715ae0ff95fdbf1eaa21f3>@@QEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@2@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z DD imagerel ??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z
	DD	0ffffffffH
	DD	imagerel ??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z+102
	DD	00H
	DD	imagerel ??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z+798
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z
	DD	078H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z DD 0f3e19H
	DD	0a682cH
	DD	01f6427H
	DD	01e5423H
	DD	01d341fH
	DD	0160113H
	DD	0e00af00cH
	DD	0c006d008H
	DD	07004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z
	DD	09aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z DD imagerel ??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z
	DD	0ffffffffH
	DD	imagerel ??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z+95
	DD	00H
	DD	imagerel ??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z+141
	DD	01H
	DD	imagerel ??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z+518
	DD	00H
	DD	imagerel ??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z+528
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z
	DD	060H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z DD 0d3919H
	DD	013682bH
	DD	0306427H
	DD	02f3423H
	DD	0280116H
	DD	0e009f00bH
	DD	07005c007H
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z
	DD	012aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 021H
	DD	imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
	DD	imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z+34
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 060021H
	DD	04e400H
	DD	057400H
	DD	0c5400H
	DD	imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
	DD	imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z+34
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 064521H
	DD	057445H
	DD	0c5439H
	DD	04e405H
	DD	imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
	DD	imagerel ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z+34
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 040901H
	DD	0f0055209H
	DD	030026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ DD 021H
	DD	imagerel $LN150
	DD	imagerel $LN150+21
	DD	imagerel $unwind$??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ DD 020521H
	DD	066405H
	DD	imagerel $LN150
	DD	imagerel $LN150+21
	DD	imagerel $unwind$??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z DD 021H
	DD	imagerel $LN54
	DD	imagerel $LN54+38
	DD	imagerel $unwind$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z DD 020521H
	DD	067405H
	DD	imagerel $LN54
	DD	imagerel $LN54+38
	DD	imagerel $unwind$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z DD 040a01H
	DD	07340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+39
	DD	00H
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+66
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	0ffffffffH
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+57
	DD	00H
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+110
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 041811H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN147
	DD	imagerel $LN147+21
	DD	imagerel $unwind$?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ DD 020521H
	DD	066405H
	DD	imagerel $LN147
	DD	imagerel $LN147+21
	DD	imagerel $unwind$?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z DD 021H
	DD	imagerel $LN117
	DD	imagerel $LN117+42
	DD	imagerel $unwind$?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z DD 020521H
	DD	067405H
	DD	imagerel $LN117
	DD	imagerel $LN117+42
	DD	imagerel $unwind$?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Udefault@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@0@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAXQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@N@std@@QEAAPEAN_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@AEAV?$vector@NV?$allocator@N@std@@@std@@N@std@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEAV?$vector@NV?$allocator@N@std@@@0@$$QEAN@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$map@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@@Z DD 0d2401H
	DD	01f6424H
	DD	01e5424H
	DD	01d3424H
	DD	0160124H
	DD	0e01bf01dH
	DD	0c017d019H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@<lambda_d96185b9da9a7d2086bd47349d2635dc>@@QEBAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@Z DD 0b1b01H
	DD	018641bH
	DD	017541bH
	DD	016341bH
	DD	012011bH
	DD	0e012f014H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$41@?0???$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z@4HA DD 020a19H
	DD	05006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z DD imagerel ??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z+162
	DD	00H
	DD	imagerel ??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z+180
	DD	0ffffffffH
	DD	imagerel ?catch$41@?0???$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z@4HA
	DD	00H
	DD	imagerel ?catch$41@?0???$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$41@?0???$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z
	DD	038H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z DD 061719H
	DD	0f3417H
	DD	0e0057209H
	DD	060027003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAA_N_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	0ffffffffH
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+103
	DD	00H
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+157
	DD	01H
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+171
	DD	02H
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+354
	DD	01H
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+395
	DD	04H
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+415
	DD	05H
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+439
	DD	0ffffffffH
	DD	imagerel ?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA+13
	DD	03H
	DD	imagerel ?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA+42
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	imagerel __imp___std_terminate
	DD	04H
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	01H
	DD	imagerel $tryMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	0bH
	DD	imagerel $ip2state$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 081f19H
	DD	0f341fH
	DD	0f00d7211H
	DD	0c009e00bH
	DD	060067007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAV?$vector@NV?$allocator@N@std@@@std@@NX$0A@@?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEAV?$vector@NV?$allocator@N@std@@@1@$$QEAN@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$map@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@@Z DD 091801H
	DD	0167418H
	DD	0156418H
	DD	0143418H
	DD	0120118H
	DD	0e011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@<lambda_7e04991c64d89450a9afdec7af8092d1>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z DD 010401H
	DD	0e204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@PEBU21@0PEAU21@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n1@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@U?$integral_constant@_N$00@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range1@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U?$integral_constant@_N$0A@@0@@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z DD 021H
	DD	imagerel $LN111
	DD	imagerel $LN111+59
	DD	imagerel $unwind$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z DD 020521H
	DD	087405H
	DD	imagerel $LN111
	DD	imagerel $LN111+59
	DD	imagerel $unwind$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z DD 040a01H
	DD	09340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z DD 0b2601H
	DD	02c3426H
	DD	0220126H
	DD	0e018f01aH
	DD	0c014d016H
	DD	060117012H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z DD 0d1f01H
	DD	01e641fH
	DD	01d541fH
	DD	01c341fH
	DD	016011fH
	DD	0e016f018H
	DD	0c012d014H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z DD 0d1f01H
	DD	01e641fH
	DD	01d541fH
	DD	01c341fH
	DD	016011fH
	DD	0e016f018H
	DD	0c012d014H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V0@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@<lambda_82709c2af490acbaaecbe567606e69e8>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z DD 061201H
	DD	0136412H
	DD	0123412H
	DD	0700bf212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z DD 011319H
	DD	08204H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Zero_range@PEAN@std@@YAPEANPEAN0@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEAN@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$map@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z DD 0d1f01H
	DD	01e641fH
	DD	01d541fH
	DD	01c341fH
	DD	016011fH
	DD	0e016f018H
	DD	0c012d014H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z DD 0b1d01H
	DD	017741dH
	DD	016641dH
	DD	015541dH
	DD	014341dH
	DD	012011dH
	DD	0e016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$map@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z DD 0d2401H
	DD	01f6424H
	DD	01e5424H
	DD	01d3424H
	DD	0160124H
	DD	0e01bf01dH
	DD	0c017d019H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_34aff3510488d97e7cf1c072c51f11e0>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z DD 0b1d01H
	DD	017741dH
	DD	016641dH
	DD	015541dH
	DD	014341dH
	DD	012011dH
	DD	0e016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z DD 0a1d01H
	DD	015e41dH
	DD	014741dH
	DD	013641dH
	DD	012341dH
	DD	0f016f21dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V0@V0@@<lambda_b1116c9adf3516ba3c36d924ce54a452>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@00@Z DD 010401H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$3@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z DD imagerel ??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z+40
	DD	00H
	DD	imagerel ??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z+50
	DD	01H
	DD	imagerel ??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z+69
	DD	00H
	DD	imagerel ??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z+84
	DD	0ffffffffH
	DD	imagerel ?catch$3@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$3@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA+13
	DD	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$3@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
	DD	07H
	DD	imagerel $ip2state$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z DD 041a19H
	DD	0700d5211H
	DD	0300b600cH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEANPEANV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$map@V<lambda_87ccf09596cd73ff58e95777441719b2>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_87ccf09596cd73ff58e95777441719b2>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z DD 091801H
	DD	0167418H
	DD	0156418H
	DD	0143418H
	DD	0120118H
	DD	0e011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_87ccf09596cd73ff58e95777441719b2>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z DD 010401H
	DD	0e204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$map@V<lambda_1273283c9775fef46ee1404488bda320>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_1273283c9775fef46ee1404488bda320>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z DD 091801H
	DD	0167418H
	DD	0156418H
	DD	0143418H
	DD	0120118H
	DD	0e011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_1273283c9775fef46ee1404488bda320>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z DD 010401H
	DD	0e204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V1@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@00@Z DD 081401H
	DD	04e414H
	DD	03740fH
	DD	02640aH
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z DD imagerel ??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z+40
	DD	00H
	DD	imagerel ??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z+59
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z DD 041d11H
	DD	0a341dH
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy_al_unchecked@NNV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEBU01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z DD 060d01H
	DD	06640dH
	DD	05340dH
	DD	0700be00dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$dead$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 92   :         (void)_Size;
; 93   :         return _Where;

	mov	rax, rdx

; 94   :     }

	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vcruntime_new.h
;	COMDAT ??3@YAXPEAX0@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
??3@YAXPEAX0@Z PROC					; operator delete, COMDAT

; 98   :         return;
; 99   :     }

	ret	0
??3@YAXPEAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 8
?length@?$char_traits@D@std@@SA_KQEBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 480  : 		return (_CSTD strlen(_First));

	or	rax, -1
$LL3@length:
	inc	rax
	cmp	BYTE PTR [rcx+rax], 0
	jne	SHORT $LL3@length

; 481  : 		}

	ret	0
?length@?$char_traits@D@std@@SA_KQEBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$dead$ = 56
_Count$ = 64
?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z PROC	; std::char_traits<char>::copy, COMDAT

; 485  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	lea	rdx, OFFSET FLAT:??_C@_0P@PBMJDCHB@CPU?5Blocked?516?$AA@
	mov	rbx, rcx
	call	memcpy
	mov	rax, rbx

; 487  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z ENDP	; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 8
_First2$dead$ = 16
_Count$ = 24
?move@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z PROC	; std::char_traits<char>::move, COMDAT

; 506  : 		return ((_Elem *)_CSTD memmove(_First1, _First2, _Count));

	lea	rdx, OFFSET FLAT:??_C@_0P@PBMJDCHB@CPU?5Blocked?516?$AA@
	rex_jmp	QWORD PTR __imp_memmove
?move@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z ENDP	; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 517  : 		_Left = _Right;

	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [rcx], al

; 518  : 		}

	ret	0
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT

; 542  : 		return (_Left == _Right);

	mov	eax, DWORD PTR [rdx]
	cmp	DWORD PTR [rcx], eax
	sete	al

; 543  : 		}

	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT

; 552  : 		return (EOF);

	or	eax, -1

; 553  : 		}

	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@_Container_base0@std@@QEAAXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT

; 65   : 		}

	ret	0
?_Orphan_all@_Container_base0@std@@QEAAXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 973  : 		return (LLONG_MAX);

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 974  : 		}

	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPEAX_K0_N@Z
_TEXT	SEGMENT
_Count$ = 48
_Sz$ = 56
_Try_aligned_allocation$dead$ = 64
?_Allocate@std@@YAPEAX_K0_N@Z PROC			; std::_Allocate, COMDAT

; 49   : 	{	// allocate storage for _Count elements of size _Sz

$LN11:
	sub	rsp, 40					; 00000028H
	mov	r8, rdx

; 50   : 	void *_Ptr = 0;
; 51   : 
; 52   : 	if (_Count == 0)

	test	rcx, rcx
	jne	SHORT $LN2@Allocate

; 53   : 		{
; 54   : 		return (_Ptr);

	xor	eax, eax

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);
; 95   : 	return (_Ptr);
; 96   : 	}

	add	rsp, 40					; 00000028H
	ret	0
$LN2@Allocate:

; 55   : 		}
; 56   : 
; 57   : 	// check overflow of multiply
; 58   : 	if (static_cast<size_t>(-1) / _Sz < _Count)

	xor	edx, edx
	or	rax, -1
	div	r8
	cmp	rax, rcx
	jae	SHORT $LN3@Allocate

; 59   : 		{
; 60   : 		_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN3@Allocate:

; 61   : 		}
; 62   : 
; 63   : 	const size_t _User_size = _Count * _Sz;

	imul	rcx, r8

; 64   : 
; 65   : #if defined(_M_IX86) || defined(_M_X64)
; 66   : 	if (_Try_aligned_allocation
; 67   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN4@Allocate

; 68   : 		{	// allocate large block
; 69   : 		static_assert(sizeof(void *) < _BIG_ALLOCATION_ALIGNMENT,
; 70   : 			"Big allocations should at least match vector register size");
; 71   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	rax, QWORD PTR [rcx+39]

; 72   : 		if (_Block_size <= _User_size)

	cmp	rax, rcx
	ja	SHORT $LN5@Allocate

; 73   : 			{
; 74   : 			_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN5@Allocate:

; 75   : 			}
; 76   : 
; 77   : 		const uintptr_t _Ptr_container =
; 78   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new

; 79   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 80   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	rcx, QWORD PTR [rax+39]
	and	rcx, -32				; ffffffffffffffe0H

; 81   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 82   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rcx-8], rax

; 83   : 
; 84   :  #ifdef _DEBUG
; 85   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 86   :  #endif /* _DEBUG */
; 87   :  		return (_Ptr);

	mov	rax, rcx

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);
; 95   : 	return (_Ptr);
; 96   : 	}

	add	rsp, 40					; 00000028H
	ret	0
$LN4@Allocate:
	add	rsp, 40					; 00000028H

; 88   : 		}
; 89   : #else /* ^^^ x86/x64 hardware ^^^ // vvv ARM hardware vvv */
; 90   : 	(void)_Try_aligned_allocation;
; 91   : #endif /* defined(_M_IX86) || defined(_M_X64) */
; 92   : 
; 93   : 	_Ptr = ::operator new(_User_size);

	jmp	??2@YAPEAX_K@Z				; operator new
$LN10@Allocate:
?_Allocate@std@@YAPEAX_K0_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPEAX_K1@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Count$ = 56
_Sz$ = 64
?_Deallocate@std@@YAXPEAX_K1@Z PROC			; std::_Deallocate, COMDAT

; 101  : 	{	// deallocate storage for _Count elements of size _Sz

$LN17:
	sub	rsp, 40					; 00000028H
	mov	r9, rdx

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	or	rax, -1
	xor	edx, edx
	div	r8
	cmp	r9, rax
	ja	SHORT $_Invalid_parameter$18

; 103  : 		{
; 104  : 		goto _Invalid_parameter; // TRANSITION, VSO#359498
; 105  : 		}
; 106  : 
; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	imul	r9, r8
	cmp	r9, 4096				; 00001000H
	jb	SHORT $LN4@Deallocate

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	cl, 31
	jne	SHORT $_Invalid_parameter$18

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rcx-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rcx
	jae	SHORT $_Invalid_parameter$18
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $_Invalid_parameter$18

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, rax
$LN4@Deallocate:

; 156  : 	}

	add	rsp, 40					; 00000028H

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	jmp	??3@YAXPEAX@Z				; operator delete
$_Invalid_parameter$18:

; 152  : 	return;
; 153  : 
; 154  : _Invalid_parameter:
; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN16@Deallocate:
?_Deallocate@std@@YAXPEAX_K1@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 8
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1162 : 	return (_Len);

	mov	rax, rcx

; 1163 : 	}

	ret	0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
;	COMDAT ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 48
?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ PROC ; std::chrono::steady_clock::now, COMDAT

; 824  : 		{	// get current time

$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 825  : 		const long long _Freq = _Query_perf_frequency();	// doesn't change after system boot

	call	QWORD PTR __imp__Query_perf_frequency
	mov	rbx, rax

; 826  : 		const long long _Ctr = _Query_perf_counter();

	call	QWORD PTR __imp__Query_perf_counter

; 827  : 		static_assert(period::num == 1, "This assumes period::num == 1.");
; 828  : 		const long long _Whole = (_Ctr / _Freq) * period::den;
; 829  : 		const long long _Part = (_Ctr % _Freq) * period::den / _Freq;

	cdq
	idiv	rbx
	mov	r8, rax
	imul	rax, rdx, 1000000000			; 3b9aca00H
	imul	rcx, r8, 1000000000			; 3b9aca00H
	cdq
	idiv	rbx

; 831  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rax, rcx

; 235  : 		: _MyDur(_Other)

	mov	QWORD PTR [rdi], rax

; 830  : 		return (time_point(duration(_Whole + _Part)));

	mov	rax, rdi

; 831  : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ENDP ; std::chrono::steady_clock::now
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\algorithm
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\algorithm
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\algorithm
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ?ms@@YANAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@0@Z
_TEXT	SEGMENT
t0$ = 8
t1$ = 16
?ms@@YANAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@0@Z PROC ; ms, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono

; 482  : 	return (_CT(_Left).count() < _CT(_Right).count());

	mov	r8, QWORD PTR [rdx]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 15   : auto ms(Time const& t0, Time const& t1) { return std::chrono::duration_cast<std::chrono::microseconds>(std::max(t1, t0) - std::min(t1, t0)).count() / 1000.0; }

	mov	r9, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\algorithm

; 3719 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	mov	rcx, rdx
	xorps	xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono

; 532  : 	return (_CF::num == 1 && _CF::den == 1

	mov	rax, 2361183241434822607		; 20c49ba5e353f7cfH

; 482  : 	return (_CT(_Left).count() < _CT(_Right).count());

	cmp	r8, QWORD PTR [r9]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\algorithm

; 3719 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	cmovl	rcx, r9
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono

; 482  : 	return (_CT(_Left).count() < _CT(_Right).count());

	cmp	QWORD PTR [r9], r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\algorithm

; 3755 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	cmovl	rdx, r9
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono

; 335  : 	return (_CD(_CD(_Left).count() - _CD(_Right).count()));

	mov	rcx, QWORD PTR [rcx]
	sub	rcx, QWORD PTR [rdx]

; 532  : 	return (_CF::num == 1 && _CF::den == 1

	imul	rcx
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 15   : auto ms(Time const& t0, Time const& t1) { return std::chrono::duration_cast<std::chrono::microseconds>(std::max(t1, t0) - std::min(t1, t0)).count() / 1000.0; }

	cvtsi2sd xmm0, rdx
	divsd	xmm0, QWORD PTR __real@408f400000000000
	ret	0
?ms@@YANAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@0@Z ENDP ; ms
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT main
_TEXT	SEGMENT
main	PROC						; COMDAT

; 248  : {

$LN4:
	sub	rsp, 40					; 00000028H

; 249  :     std::cout << "               naive       func naive   blocked   view blocked   func view blocked\n";

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	lea	rdx, OFFSET FLAT:??_C@_0FE@JPLNENK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5naive?5?5?5?5?5?5?5func?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 250  :     //invoke<64>();
; 251  :     //invoke<128>();
; 252  :     //invoke<256>();
; 253  :     invoke<512>();

	call	??$invoke@$0CAA@@@YAXXZ			; invoke<512>

; 254  :     //invoke<1024>();
; 255  : }

	xor	eax, eax
	add	rsp, 40					; 00000028H
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
;	COMDAT ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
_TEXT	SEGMENT
this$ = 8
_Other$ = 16
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 235  : 		: _MyDur(_Other)

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax

; 237  : 		}

	mov	rax, rcx
	ret	0
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000> >::count, COMDAT

; 126  : 		return (_MyRep);

	mov	rax, QWORD PTR [rcx]

; 127  : 		}

	ret	0
?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000> >::count
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2245 : 		{	// destroy the string

$LN49:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1617 : 		return (_BUF_SIZE <= _Myres);

	mov	rax, QWORD PTR [rcx+24]

; 2245 : 		{	// destroy the string

	mov	rbx, rcx

; 1617 : 		return (_BUF_SIZE <= _Myres);

	cmp	rax, 16

; 3709 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN27@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 941  : 		_Deallocate(_Ptr, _Count, sizeof(_Ty));

	mov	rcx, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3714 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	cmp	rax, 4096				; 00001000H
	jb	SHORT $LN30@basic_stri

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	cl, 31
	jne	SHORT $_Invalid_parameter$50

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rcx-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rcx
	jae	SHORT $_Invalid_parameter$50
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $_Invalid_parameter$50

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, rax
$LN30@basic_stri:

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	call	??3@YAXPEAX@Z				; operator delete
$LN27@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3717 : 		_My_data._Mysize = 0;

	mov	QWORD PTR [rbx+16], 0

; 3718 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	QWORD PTR [rbx+24], 15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 2247 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$_Invalid_parameter$50:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN48@basic_stri:
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$dead$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 1977 : 		{	// construct from [_Ptr, <null>)

$LN31:
	push	rbx
	sub	rsp, 32					; 00000020H

; 3698 : 		_My_data._Mysize = 0;

	mov	QWORD PTR [rcx+16], 0

; 2452 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

	mov	r8d, 14

; 3699 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	QWORD PTR [rcx+24], 15

; 1977 : 		{	// construct from [_Ptr, <null>)

	mov	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 2452 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1978 : 		_Tidy_init();
; 1979 : 		assign(_Ptr);
; 1980 : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
	ret	0
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
	ret	0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 1654 : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 1617 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rcx+24], 16
	setae	al

; 1618 : 		}

	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 1617 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rcx+24], 16

; 1606 : 		const value_type * _Result = _Bx._Buf;
; 1607 : 		if (_Large_string_engaged())

	jb	SHORT $LN8@Myptr

; 1608 : 			{
; 1609 : 			_Result = _Unfancy(_Bx._Ptr);
; 1610 : 			}
; 1611 : 
; 1612 : 		return (_Result);

	mov	rax, QWORD PTR [rcx]

; 1613 : 		}

	ret	0
$LN8@Myptr:

; 1608 : 			{
; 1609 : 			_Result = _Unfancy(_Bx._Ptr);
; 1610 : 			}
; 1611 : 
; 1612 : 		return (_Result);

	mov	rax, rcx

; 1613 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 1617 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rcx+24], 16

; 1595 : 		value_type * _Result = _Bx._Buf;
; 1596 : 		if (_Large_string_engaged())

	jb	SHORT $LN8@Myptr

; 1597 : 			{
; 1598 : 			_Result = _Unfancy(_Bx._Ptr);
; 1599 : 			}
; 1600 : 
; 1601 : 		return (_Result);

	mov	rax, QWORD PTR [rcx]

; 1602 : 		}

	ret	0
$LN8@Myptr:

; 1597 : 			{
; 1598 : 			_Result = _Unfancy(_Bx._Ptr);
; 1599 : 			}
; 1600 : 
; 1601 : 		return (_Result);

	mov	rax, rcx

; 1602 : 		}

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 1840 : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 1841 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 1835 : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 1836 : 		}

	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 1830 : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 1831 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 1825 : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 1826 : 		}

	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all, COMDAT

; 1815 : 		_Get_data()._Orphan_all();
; 1816 : 		}

	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT

; 1576 : 		_Mysize(0),

	xor	eax, eax
	mov	QWORD PTR [rcx+16], rax

; 1577 : 		_Myres(0)

	mov	QWORD PTR [rcx+24], rax

; 1703 : 		}

	mov	rax, rcx
	ret	0
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 3706 : 		{	// initialize buffer, deallocating any storage

$LN46:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1617 : 		return (_BUF_SIZE <= _Myres);

	mov	rax, QWORD PTR [rcx+24]

; 3706 : 		{	// initialize buffer, deallocating any storage

	mov	rbx, rcx

; 1617 : 		return (_BUF_SIZE <= _Myres);

	cmp	rax, 16

; 3707 : 		this->_Orphan_all();
; 3708 : 		auto& _My_data = this->_Get_data();
; 3709 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN25@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 941  : 		_Deallocate(_Ptr, _Count, sizeof(_Ty));

	mov	rcx, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3714 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	cmp	rax, 4096				; 00001000H
	jb	SHORT $LN28@Tidy_deall

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	cl, 31
	jne	SHORT $_Invalid_parameter$47

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rcx-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rcx
	jae	SHORT $_Invalid_parameter$47
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $_Invalid_parameter$47

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, rax
$LN28@Tidy_deall:

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	call	??3@YAXPEAX@Z				; operator delete
$LN25@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3717 : 		_My_data._Mysize = 0;

	mov	QWORD PTR [rbx+16], 0

; 3718 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	QWORD PTR [rbx+24], 15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3722 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$_Invalid_parameter$47:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN45@Tidy_deall:
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 3697 : 		auto& _My_data = this->_Get_data();
; 3698 : 		_My_data._Mysize = 0;

	mov	QWORD PTR [rcx+16], 0

; 3699 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	QWORD PTR [rcx+24], 15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3703 : 		}

	ret	0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3067 : 		const size_type _Alloc_max = _Alty_traits::max_size(this->_Getal());
; 3068 : 		const size_type _Storage_max = // can always store small string
; 3069 : 			_Max_value(_Alloc_max, static_cast<size_type>(this->_BUF_SIZE));
; 3070 : 		return (_Min_value(

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 3071 : 			static_cast<size_type>((numeric_limits<difference_type>::max)()),
; 3072 : 			_Storage_max - 1 // -1 is for null terminator and/or npos
; 3073 : 			));
; 3074 : 
; 3075 : 		}

	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\utility
;	COMDAT ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Max_value<unsigned __int64>, COMDAT

; 32   : 	return (_Left < _Right ? _Right : _Left);

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	cmovb	rcx, rdx
	mov	rax, rcx

; 33   : 	}

	ret	0
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Max_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 3062 : 		return (this->_Get_data()._Mysize);

	mov	rax, QWORD PTR [rcx+16]

; 3063 : 		}

	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$dead$ = 16
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2452 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

	mov	r8d, 14
	jmp	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$dead$ = 88
_Count$ = 96
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2433 : 		{	// assign [_Ptr, _Ptr + _Count)

$LN154:
	push	rbx
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 40					; 00000028H

; 2434 : 		auto& _My_data = this->_Get_data();
; 2435 : 		if (_Count <= _My_data._Myres)

	mov	r14, QWORD PTR [rcx+24]
	mov	rsi, r8
	mov	rbx, rcx
	cmp	r8, r14
	ja	SHORT $LN2@assign

; 1595 : 		value_type * _Result = _Bx._Buf;

	mov	rdi, rcx

; 1617 : 		return (_BUF_SIZE <= _Myres);

	cmp	r14, 16

; 1596 : 		if (_Large_string_engaged())

	jb	SHORT $LN11@assign
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstddef

; 265  : 	return (_Ptr);

	mov	rdi, QWORD PTR [rcx]
$LN11@assign:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 2438 : 			_My_data._Mysize = _Count;

	mov	QWORD PTR [rcx+16], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 506  : 		return ((_Elem *)_CSTD memmove(_First1, _First2, _Count));

	lea	rdx, OFFSET FLAT:??_C@_0P@PBMJDCHB@CPU?5Blocked?516?$AA@
	mov	rcx, rdi
	call	QWORD PTR __imp_memmove
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 2444 : 		return (_Reallocate_for(_Count, [](_Elem * const _New_ptr, const size_type _Count, const _Elem * const _Ptr) {

	mov	rax, rbx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR [rsi+rdi], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 2448 : 		}

	add	rsp, 40					; 00000028H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
$LN2@assign:

; 3611 : 		if (_New_size > max_size())

	mov	rdi, 9223372036854775807		; 7fffffffffffffffH
	cmp	rsi, rdi
	ja	$LN152@assign

; 3591 : 		const size_type _Masked = _Requested | this->_ALLOC_MASK;

	mov	rcx, rsi
	or	rcx, 15

; 3592 : 		if (_Masked > _Max)

	cmp	rcx, rdi
	ja	SHORT $LN55@assign

; 3593 : 			{	// the mask overflows, settle for max_size()
; 3594 : 			return (_Max);
; 3595 : 			}
; 3596 : 
; 3597 : 		const size_type _Old = _My_data._Myres;
; 3598 : 		if (_Old > _Max - _Old / 2)

	mov	rdx, r14
	mov	rax, rdi
	shr	rdx, 1
	sub	rax, rdx
	cmp	r14, rax
	ja	SHORT $LN55@assign

; 3599 : 			{	// similarly, geometric overflows
; 3600 : 			return (_Max);
; 3601 : 			}
; 3602 : 
; 3603 : 		return (_Max_value(_Masked, _Old + _Old / 2));

	lea	rax, QWORD PTR [rdx+r14]
	mov	rdi, rcx
	cmp	rcx, rax
	cmovb	rdi, rax
$LN55@assign:

; 3620 : 		const pointer _New_ptr = _Al.allocate(_New_capacity + 1); // throws

	mov	rcx, rdi
	mov	QWORD PTR [rsp+88], rbp
	add	rcx, 1
	mov	QWORD PTR [rsp+32], r15
	mov	rax, -1
	cmovb	rcx, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 54   : 		return (_Ptr);

	xor	r15d, r15d
	test	rcx, rcx
	jne	SHORT $LN98@assign
	mov	ebp, r15d
	jmp	SHORT $LN97@assign
$LN98@assign:

; 55   : 		}
; 56   : 
; 57   : 	// check overflow of multiply
; 58   : 	if (static_cast<size_t>(-1) / _Sz < _Count)

	test	r15b, r15b
	je	SHORT $LN99@assign

; 59   : 		{
; 60   : 		_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN99@assign:

; 61   : 		}
; 62   : 
; 63   : 	const size_t _User_size = _Count * _Sz;
; 64   : 
; 65   : #if defined(_M_IX86) || defined(_M_X64)
; 66   : 	if (_Try_aligned_allocation
; 67   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN100@assign

; 68   : 		{	// allocate large block
; 69   : 		static_assert(sizeof(void *) < _BIG_ALLOCATION_ALIGNMENT,
; 70   : 			"Big allocations should at least match vector register size");
; 71   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	rax, QWORD PTR [rcx+39]

; 72   : 		if (_Block_size <= _User_size)

	cmp	rax, rcx
	ja	SHORT $LN101@assign

; 73   : 			{
; 74   : 			_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN101@assign:

; 75   : 			}
; 76   : 
; 77   : 		const uintptr_t _Ptr_container =
; 78   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new

; 79   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 80   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	rbp, QWORD PTR [rax+39]
	and	rbp, -32				; ffffffffffffffe0H

; 81   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 82   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rbp-8], rax

; 83   : 
; 84   :  #ifdef _DEBUG
; 85   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 86   :  #endif /* _DEBUG */
; 87   :  		return (_Ptr);

	jmp	SHORT $LN97@assign
$LN100@assign:

; 88   : 		}
; 89   : #else /* ^^^ x86/x64 hardware ^^^ // vvv ARM hardware vvv */
; 90   : 	(void)_Try_aligned_allocation;
; 91   : #endif /* defined(_M_IX86) || defined(_M_X64) */
; 92   : 
; 93   : 	_Ptr = ::operator new(_User_size);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rbp, rax
$LN97@assign:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	mov	r8, rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3622 : 		_My_data._Mysize = _New_size;

	mov	QWORD PTR [rbx+16], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	lea	rdx, OFFSET FLAT:??_C@_0P@PBMJDCHB@CPU?5Blocked?516?$AA@
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3623 : 		_My_data._Myres = _New_capacity;

	mov	QWORD PTR [rbx+24], rdi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	mov	rcx, rbp
	call	memcpy

; 517  : 		_Left = _Right;

	mov	BYTE PTR [rsi+rbp], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3625 : 		if (this->_BUF_SIZE <= _Old_capacity)

	cmp	r14, 16
	jb	SHORT $LN25@assign
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 941  : 		_Deallocate(_Ptr, _Count, sizeof(_Ty));

	mov	rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3627 : 			_Al.deallocate(_My_data._Bx._Ptr, _Old_capacity + 1);

	inc	r14
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	test	r15b, r15b
	jne	SHORT $_Invalid_parameter$155

; 103  : 		{
; 104  : 		goto _Invalid_parameter; // TRANSITION, VSO#359498
; 105  : 		}
; 106  : 
; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	cmp	r14, 4096				; 00001000H
	jb	SHORT $LN125@assign

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	cl, 31
	jne	SHORT $_Invalid_parameter$155

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rcx-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rcx
	jae	SHORT $_Invalid_parameter$155
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $_Invalid_parameter$155

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, rax
$LN125@assign:

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	call	??3@YAXPEAX@Z				; operator delete
$LN25@assign:
	mov	r15, QWORD PTR [rsp+32]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 2444 : 		return (_Reallocate_for(_Count, [](_Elem * const _New_ptr, const size_type _Count, const _Elem * const _Ptr) {

	mov	rax, rbx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 855  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	QWORD PTR [rbx], rbp
	mov	rbp, QWORD PTR [rsp+88]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 2448 : 		}

	add	rsp, 40					; 00000028H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
$_Invalid_parameter$155:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN152@assign:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3613 : 			_Xlen();	// result too long

	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
	int	3
$LN150@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
_TEXT	SEGMENT
this$dead$ = 48
_New_ptr$ = 56
_Count$ = 64
_Ptr$dead$ = 72
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z PROC ; <lambda_66f57f934f28d61049862f64df852ff0>::operator(), COMDAT

; 2444 : 		return (_Reallocate_for(_Count, [](_Elem * const _New_ptr, const size_type _Count, const _Elem * const _Ptr) {

	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	mov	rcx, rbx
	lea	rdx, OFFSET FLAT:??_C@_0P@PBMJDCHB@CPU?5Blocked?516?$AA@
	call	memcpy

; 517  : 		_Left = _Right;

	mov	BYTE PTR [rbx+rdi], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 2447 : 			}, _Ptr));

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ENDP ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 945  : 		{	// allocate array of _Count elements

$LN14:
	sub	rsp, 40					; 00000028H

; 54   : 		return (_Ptr);

	xor	ecx, ecx
	test	rdx, rdx
	je	SHORT $LN3@allocate

; 55   : 		}
; 56   : 
; 57   : 	// check overflow of multiply
; 58   : 	if (static_cast<size_t>(-1) / _Sz < _Count)

	test	cl, cl
	je	SHORT $LN5@allocate

; 59   : 		{
; 60   : 		_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN5@allocate:

; 61   : 		}
; 62   : 
; 63   : 	const size_t _User_size = _Count * _Sz;
; 64   : 
; 65   : #if defined(_M_IX86) || defined(_M_X64)
; 66   : 	if (_Try_aligned_allocation
; 67   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 68   : 		{	// allocate large block
; 69   : 		static_assert(sizeof(void *) < _BIG_ALLOCATION_ALIGNMENT,
; 70   : 			"Big allocations should at least match vector register size");
; 71   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	rcx, QWORD PTR [rdx+39]

; 72   : 		if (_Block_size <= _User_size)

	cmp	rcx, rdx
	ja	SHORT $LN7@allocate

; 73   : 			{
; 74   : 			_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN7@allocate:

; 75   : 			}
; 76   : 
; 77   : 		const uintptr_t _Ptr_container =
; 78   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	call	??2@YAPEAX_K@Z				; operator new

; 79   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 80   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	rcx, QWORD PTR [rax+39]
	and	rcx, -32				; ffffffffffffffe0H

; 81   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 82   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rcx-8], rax

; 946  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof(_Ty))));

	mov	rax, rcx

; 947  : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN6@allocate:

; 93   : 	_Ptr = ::operator new(_User_size);

	mov	rcx, rdx
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax
$LN3@allocate:

; 946  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof(_Ty))));

	mov	rax, rcx

; 947  : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN13@allocate:
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 940  : 		{	// deallocate object at _Ptr

$LN20:
	sub	rsp, 40					; 00000028H

; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	cmp	r8, 4096				; 00001000H
	jb	SHORT $LN6@deallocate

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	dl, 31
	jne	SHORT $_Invalid_parameter$21

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rdx-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rdx
	jae	SHORT $_Invalid_parameter$21
	sub	rdx, rax
	sub	rdx, 8
	cmp	rdx, 31
	ja	SHORT $_Invalid_parameter$21

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rdx, rax
$LN6@deallocate:

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	mov	rcx, rdx

; 941  : 		_Deallocate(_Ptr, _Count, sizeof(_Ty));
; 942  : 		}

	add	rsp, 40					; 00000028H

; 151  : 	::operator delete(_Ptr);

	jmp	??3@YAXPEAX@Z				; operator delete
$_Invalid_parameter$21:

; 152  : 	return;
; 153  : 
; 154  : _Invalid_parameter:
; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN19@deallocate:
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 343  : 		return (_Myval2);

	mov	rax, rcx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 338  : 		return (_Myval2);

	mov	rax, rcx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 323  : 		return (*this);

	mov	rax, rcx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 318  : 		return (*this);

	mov	rax, rcx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 867  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

	or	rax, -1

; 868  : 		}

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>, COMDAT

; 110  : 			: _MyRep(static_cast<_Rep>(_Val))

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax

; 112  : 		}

	mov	rax, rcx
	ret	0
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\algorithm
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\algorithm
;	COMDAT ??$max@V?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@@std@@YAAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@0@AEBV120@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$max@V?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@@std@@YAAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@0@AEBV120@0@Z PROC ; std::max<std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono

; 482  : 	return (_CT(_Left).count() < _CT(_Right).count());

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\algorithm

; 3719 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	cmovl	rcx, rdx
	mov	rax, rcx

; 3720 : 	}

	ret	0
??$max@V?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@@std@@YAAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@0@AEBV120@0@Z ENDP ; std::max<std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\algorithm
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\algorithm
;	COMDAT ??$min@V?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@@std@@YAAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@0@AEBV120@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$min@V?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@@std@@YAAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@0@AEBV120@0@Z PROC ; std::min<std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono

; 482  : 	return (_CT(_Left).count() < _CT(_Right).count());

	mov	rax, QWORD PTR [rcx]
	cmp	QWORD PTR [rdx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\algorithm

; 3755 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	cmovl	rcx, rdx
	mov	rax, rcx

; 3756 : 	}

	ret	0
??$min@V?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@@std@@YAAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@0@AEBV120@0@Z ENDP ; std::min<std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
;	COMDAT ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Left$ = 16
_Right$ = 24
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 335  : 	return (_CD(_CD(_Left).count() - _CD(_Right).count()));

	mov	rax, QWORD PTR [rdx]
	sub	rax, QWORD PTR [r8]

; 110  : 			: _MyRep(static_cast<_Rep>(_Val))

	mov	QWORD PTR [rcx], rax

; 678  : 	return (_Left.time_since_epoch() - _Right.time_since_epoch());

	mov	rax, rcx

; 679  : 	}

	ret	0
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Dur$ = 16
??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000> >,__int64,std::ratio<1,1000000000>,void>, COMDAT

; 525  : 	using _CF = ratio_divide<_Period, typename _To::period>;
; 526  : 
; 527  : 	using _ToRep = typename _To::rep;
; 528  : 	using _CR = common_type_t<_ToRep, _Rep, intmax_t>;
; 529  : 
; 530  : #pragma warning(push)
; 531  : #pragma warning(disable: 6326)	// Potential comparison of a constant with another constant.
; 532  : 	return (_CF::num == 1 && _CF::den == 1

	mov	rax, 2361183241434822607		; 20c49ba5e353f7cfH
	imul	QWORD PTR [rdx]
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	mov	rax, rcx
	mov	QWORD PTR [rcx], rdx

; 533  : 			? static_cast<_To>(static_cast<_ToRep>(_Dur.count()))
; 534  : 		: _CF::num != 1 && _CF::den == 1
; 535  : 			? static_cast<_To>(static_cast<_ToRep>(
; 536  : 				static_cast<_CR>(
; 537  : 					_Dur.count()) * static_cast<_CR>(_CF::num)))
; 538  : 		: _CF::num == 1 && _CF::den != 1
; 539  : 			? static_cast<_To>(static_cast<_ToRep>(
; 540  : 				static_cast<_CR>(_Dur.count())
; 541  : 					/ static_cast<_CR>(_CF::den)))
; 542  : 		: static_cast<_To>(static_cast<_ToRep>(
; 543  : 			static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)
; 544  : 				/ static_cast<_CR>(_CF::den))));
; 545  : #pragma warning(pop)
; 546  : 	}

	ret	0
??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000> >,__int64,std::ratio<1,1000000000>,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 772  : 	{	// insert NTBS into char stream

$LN113:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR $T28[rsp], -2
	mov	QWORD PTR [rsp+120], rbx
	mov	r15, rdx
	mov	rsi, rcx

; 773  : 	typedef char _Elem;
; 774  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 775  : 	ios_base::iostate _State = ios_base::goodbit;

	xor	ebx, ebx
	mov	DWORD PTR _State$[rsp], ebx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 480  : 		return (_CSTD strlen(_First));

	or	r14, -1
$LL108@operator:
	inc	r14
	cmp	BYTE PTR [rdx+r14], bl
	jne	SHORT $LL108@operator
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 777  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

	mov	rax, QWORD PTR [rcx]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase

; 422  : 		return (_Wide);

	mov	rdi, QWORD PTR [rcx+rsi+40]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 777  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

	test	rdi, rdi
	jle	SHORT $LN17@operator
	cmp	rdi, r14
	jle	SHORT $LN17@operator
	sub	rdi, r14
	jmp	SHORT $LN18@operator
$LN17@operator:
	xor	edi, edi
$LN18@operator:

; 98   : 			: _Myostr(_Ostr)

	mov	r12, rsi
	mov	QWORD PTR _Ok$[rsp], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios

; 91   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 100  : 			if (_Myostr.rdbuf() != 0)

	test	rcx, rcx
	je	SHORT $LN38@operator

; 101  : 				_Myostr.rdbuf()->_Lock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN38@operator:

; 123  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase

; 338  : 		return (rdstate() == goodbit);

	cmp	DWORD PTR [rcx+rsi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 123  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

	jne	SHORT $LN34@operator
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios

; 79   : 		return (_Tiestr);

	mov	rcx, QWORD PTR [rcx+rsi+80]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 123  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

	test	rcx, rcx
	je	SHORT $LN34@operator
	cmp	rcx, rsi
	je	SHORT $LN34@operator

; 124  : 				_Ostr.tie()->flush();

	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
$LN34@operator:

; 125  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase

; 338  : 		return (rdstate() == goodbit);

	cmp	DWORD PTR [rcx+rsi+16], 0
	sete	al
	mov	BYTE PTR _Ok$[rsp+8], al
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 781  : 	if (!_Ok)

	test	al, al
	jne	SHORT $LN8@operator

; 782  : 		_State |= ios_base::badbit;

	mov	ebx, 4

; 783  : 	else

	jmp	$LN22@operator
$LN8@operator:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase

; 377  : 		return (_Fmtfl);

	mov	eax, DWORD PTR [rcx+rsi+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 786  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN104@operator
$LL4@operator:

; 787  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	test	rdi, rdi
	jle	SHORT $LN3@operator

; 788  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	movzx	edx, BYTE PTR [rcx+rsi+88]
	mov	rcx, QWORD PTR [rcx+rsi+72]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	cmp	eax, -1
	je	SHORT $LN111@operator

; 787  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	dec	rdi
	jmp	SHORT $LL4@operator
$LN3@operator:

; 792  : 					break;
; 793  : 					}
; 794  : 
; 795  : 		if (_State == ios_base::goodbit
; 796  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

	test	ebx, ebx
	jne	SHORT $LN6@operator
$LN104@operator:
	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	r8, r14
	mov	rdx, r15
	mov	rcx, QWORD PTR [rcx+rsi+72]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	cmp	rax, r14
	jne	SHORT $LN111@operator
	npad	6
$LL109@operator:

; 797  : 			_State |= ios_base::badbit;
; 798  : 
; 799  : 		if (_State == ios_base::goodbit)
; 800  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	test	rdi, rdi
	jle	SHORT $LN6@operator

; 801  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	movzx	edx, BYTE PTR [rcx+rsi+88]
	mov	rcx, QWORD PTR [rcx+rsi+72]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	cmp	eax, -1
	je	SHORT $LN111@operator

; 797  : 			_State |= ios_base::badbit;
; 798  : 
; 799  : 		if (_State == ios_base::goodbit)
; 800  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	dec	rdi
	jmp	SHORT $LL109@operator
$LN111@operator:

; 789  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 790  : 					{	// insertion failed, quit
; 791  : 					_State |= ios_base::badbit;

	mov	ebx, 4
	mov	DWORD PTR _State$[rsp], ebx
$LN6@operator:

; 802  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 803  : 					{	// insertion failed, quit
; 804  : 					_State |= ios_base::badbit;
; 805  : 					break;
; 806  : 					}
; 807  : 		_Ostr.width(0);

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase

; 428  : 		_Wide = _Newwidth;

	mov	QWORD PTR [rcx+rsi+40], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
	jmp	SHORT $LN22@operator
$LN23@operator:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios
	mov	rsi, QWORD PTR _Ostr$[rsp]
	mov	ebx, DWORD PTR _State$[rsp]
	mov	r12, QWORD PTR _Ok$[rsp]
$LN22@operator:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 811  : 	_Ostr.setstate(_State);

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rsi
	xor	r8d, r8d
	mov	edx, ebx
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1

; 131  : 			if (!_STD uncaught_exception())

	call	QWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	test	al, al
	jne	SHORT $LN87@operator

; 132  : 				this->_Myostr._Osfx();

	mov	rcx, r12
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	npad	1
$LN87@operator:

; 106  : 			if (_Myostr.rdbuf() != 0)

	mov	rax, QWORD PTR [r12]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios

; 91   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [rcx+r12+72]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 106  : 			if (_Myostr.rdbuf() != 0)

	test	rcx, rcx
	je	SHORT $LN91@operator

; 107  : 				_Myostr.rdbuf()->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN91@operator:

; 812  : 	return (_Ostr);

	mov	rax, rsi

; 813  : 	}

	mov	rbx, QWORD PTR [rsp+120]
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?dtor$2@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$2
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$2@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$2
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$9

; 808  : 		_CATCH_IO_(_Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$9
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$9
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?dtor$2@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$2
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$2@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T28 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$9

; 808  : 		_CATCH_IO_(_Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$9
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$9@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$9
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\string
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$invoke@$0CAA@@@YAXXZ
_TEXT	SEGMENT
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
??$invoke@$0CAA@@@YAXXZ PROC				; invoke<512>, COMDAT

; 196  : void invoke() {

$LN378:
	mov	rax, rsp
	push	rbp
	lea	rbp, QWORD PTR [rax-95]
	sub	rsp, 224				; 000000e0H
	mov	QWORD PTR $T71[rbp-137], -2
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rsi
	mov	QWORD PTR [rax+24], rdi
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-137], rax

; 197  :     using T = double;
; 198  :     using R = std::pair<std::vector<T>, double>;
; 199  : 
; 200  :     std::cout << "\nn = " << n << "\n\n";

	lea	rdx, OFFSET FLAT:??_C@_05NAKBEJEJ@?6n?5?$DN?5?$AA@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	edx, 512				; 00000200H
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_02PHMGELLB@?6?6?$AA@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	xor	eax, eax
	mov	QWORD PTR A$[rbp-137], rax
	mov	QWORD PTR A$[rbp-129], rax
	mov	QWORD PTR A$[rbp-121], rax

; 201  :     // Host vectors
; 202  :     std::vector<T> A(n*n);

	mov	edx, 262144				; 00040000H
	lea	rcx, QWORD PTR A$[rbp-137]
	call	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
	npad	1
	xor	eax, eax
	mov	QWORD PTR B$[rbp-137], rax
	mov	QWORD PTR B$[rbp-129], rax
	mov	QWORD PTR B$[rbp-121], rax

; 203  :     std::vector<T> B(n*n);

	mov	edx, 262144				; 00040000H
	lea	rcx, QWORD PTR B$[rbp-137]
	call	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
	npad	1

; 197  :     using T = double;
; 198  :     using R = std::pair<std::vector<T>, double>;
; 199  : 
; 200  :     std::cout << "\nn = " << n << "\n\n";

	xor	r8d, r8d
	mov	r9, QWORD PTR A$[rbp-137]
	mov	rdx, QWORD PTR B$[rbp-137]
	sub	r9, rdx
	movsd	xmm1, QWORD PTR __real@43f0000000000000
	movsd	xmm2, QWORD PTR __real@3ed0000000000000
	npad	7
$LL4@invoke:

; 207  :     {
; 208  :         for (size_t j = 0; j < n; j++)

	xor	ecx, ecx
	npad	14
$LL7@invoke:

; 209  :         {
; 210  :             A[i*n + j] = (T)((i + j + 1) / (1.*n*n));//(T)uniform_rnd(state);//(i+j+1) / (1.*n*n);

	lea	rax, QWORD PTR [r8+1]
	add	rax, rcx
	xorps	xmm0, xmm0
	cvtsi2sd xmm0, rax
	jns	SHORT $LN376@invoke
	addsd	xmm0, xmm1
$LN376@invoke:
	mulsd	xmm0, xmm2
	movsd	QWORD PTR [r9+rdx], xmm0

; 211  :             B[i*n + j] = (T)((i - j + 2) / (1.*n*n));//(T)uniform_rnd(state);//(i-j+2) / (1.*n*n);

	mov	rax, r8
	sub	rax, rcx
	add	rax, 2
	xorps	xmm0, xmm0
	cvtsi2sd xmm0, rax
	jns	SHORT $LN375@invoke
	addsd	xmm0, xmm1
$LN375@invoke:
	mulsd	xmm0, xmm2
	movsd	QWORD PTR [rdx], xmm0

; 207  :     {
; 208  :         for (size_t j = 0; j < n; j++)

	inc	rcx
	add	rdx, 8
	cmp	rcx, 512				; 00000200H
	jb	SHORT $LL7@invoke

; 204  : 
; 205  :     // Initialize vectors on host
; 206  :     for (size_t i = 0; i < n; i++)

	inc	r8
	cmp	r8, 512					; 00000200H
	jb	SHORT $LL4@invoke

; 226  :     summary("CPU Blocked 16", { /*ref, func_ref, blocked<16>(A, B),*/ view_blocked<n, 16>(A, B), functional_view_blocked<n, 16>(A, B) });

	lea	r8, QWORD PTR B$[rbp-137]
	lea	rdx, QWORD PTR A$[rbp-137]
	lea	rcx, QWORD PTR $T10[rbp-137]
	call	??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z ; view_blocked<512,16,double>
	npad	1
	lea	r8, QWORD PTR B$[rbp-137]
	lea	rdx, QWORD PTR A$[rbp-137]
	lea	rcx, QWORD PTR $T10[rbp-105]
	call	??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z ; functional_view_blocked<512,16,double>
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 434  : 		: _Myfirst(),

	mov	QWORD PTR $T15[rbp-137], 0
	xorps	xmm0, xmm0

; 435  : 		_Mylast(),

	movdqu	XMMWORD PTR $T15[rbp-129], xmm0

; 763  : 		_Range_construct_or_tidy(_Ilist.begin(), _Ilist.end(), random_access_iterator_tag{});

	lea	r8, QWORD PTR $T10[rbp-73]
	lea	rdx, QWORD PTR $T10[rbp-137]
	lea	rcx, QWORD PTR $T15[rbp-137]
	call	??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Range_construct_or_tidy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3698 : 		_My_data._Mysize = 0;

	mov	QWORD PTR $T19[rbp-121], 0

; 3699 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	QWORD PTR $T19[rbp-113], 15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR $T19[rbp-137], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 2452 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

	mov	r8d, 14
	lea	rcx, QWORD PTR $T19[rbp-137]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	npad	1

; 1606 : 		const value_type * _Result = _Bx._Buf;

	lea	rdx, QWORD PTR $T19[rbp-137]

; 1617 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR $T19[rbp-113], 16

; 1607 : 		if (_Large_string_engaged())

	cmovae	rdx, QWORD PTR $T19[rbp-137]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\string

; 169  : 	return (_Insert_string(_Ostr, _Str.data(), _Str.size()));

	mov	r8, QWORD PTR $T19[rbp-121]
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
	mov	rcx, rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 219  :         std::cout << title << ": ";

	lea	rdx, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5?$AA@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rdi, QWORD PTR $T15[rbp-137]
	mov	rbx, rdi

; 220  :         for (auto const& r : v) { std::cout << r.second << " ms (" /*<< (is_same(r.first, ref.first) ? '+' : '-') << */") "; }

	mov	rsi, QWORD PTR $T15[rbp-129]
	cmp	rdi, rsi
	je	SHORT $LN107@invoke
$LL108@invoke:
	movsd	xmm1, QWORD PTR [rbx+24]
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_07CCDOBJC@?5ms?5?$CI?$CJ?5?$AA@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	add	rbx, 32					; 00000020H
	cmp	rbx, rsi
	jne	SHORT $LL108@invoke
$LN107@invoke:

; 221  :         std::cout << "\n";

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 1617 : 		return (_BUF_SIZE <= _Myres);

	mov	rax, QWORD PTR $T19[rbp-113]
	cmp	rax, 16

; 3709 : 		if (_My_data._Large_string_engaged())

	jb	SHORT $LN188@invoke

; 3710 : 			{
; 3711 : 			const pointer _Ptr = _My_data._Bx._Ptr;
; 3712 : 			auto& _Al = this->_Getal();
; 3713 : 			_Alty_traits::destroy(_Al, _STD addressof(_My_data._Bx._Ptr));
; 3714 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 941  : 		_Deallocate(_Ptr, _Count, sizeof(_Ty));

	mov	rcx, QWORD PTR $T19[rbp-137]

; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	cmp	rax, 4096				; 00001000H
	jb	SHORT $LN191@invoke

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	cl, 31
	jne	SHORT $_Invalid_parameter$379

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rcx-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rcx
	jae	SHORT $_Invalid_parameter$379
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $_Invalid_parameter$379

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, rax
	jmp	SHORT $LN191@invoke
$_Invalid_parameter$379:

; 152  : 	return;
; 153  : 
; 154  : _Invalid_parameter:
; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN191@invoke:

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	call	??3@YAXPEAX@Z				; operator delete
$LN188@invoke:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3717 : 		_My_data._Mysize = 0;

	mov	QWORD PTR $T19[rbp-121], 0

; 3718 : 		_My_data._Myres = this->_BUF_SIZE - 1;

	mov	QWORD PTR $T19[rbp-113], 15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 517  : 		_Left = _Right;

	mov	BYTE PTR $T19[rbp-137], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 2004 : 		if (this->_Myfirst() != pointer())

	test	rdi, rdi
	je	SHORT $LN212@invoke
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 1116 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<

	mov	rbx, rdi

; 1092 : 	for (; _First != _Last; ++_First)

	cmp	rdi, rsi
	je	SHORT $LN253@invoke
$LL254@invoke:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 921  : 		_Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 1092 : 	for (; _First != _Last; ++_First)

	add	rbx, 32					; 00000020H
	cmp	rbx, rsi
	jne	SHORT $LL254@invoke
$LN253@invoke:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1776 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rax, QWORD PTR $T15[rbp-121]
	sub	rax, rdi
	sar	rax, 5
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	mov	rcx, 576460752303423487			; 07ffffffffffffffH
	cmp	rax, rcx
	ja	SHORT $_Invalid_parameter$380

; 103  : 		{
; 104  : 		goto _Invalid_parameter; // TRANSITION, VSO#359498
; 105  : 		}
; 106  : 
; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	shl	rax, 5
	cmp	rax, 4096				; 00001000H
	jb	SHORT $LN311@invoke

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	dil, 31
	jne	SHORT $_Invalid_parameter$380

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rdi-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rdi
	jae	SHORT $_Invalid_parameter$380
	sub	rdi, rax
	sub	rdi, 8
	cmp	rdi, 31
	ja	SHORT $_Invalid_parameter$380

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rdi, rax
$LN311@invoke:

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	mov	rcx, rdi
	call	??3@YAXPEAX@Z				; operator delete
	jmp	SHORT $LN212@invoke
$_Invalid_parameter$380:

; 152  : 	return;
; 153  : 
; 154  : _Invalid_parameter:
; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN212@invoke:
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 226  :     summary("CPU Blocked 16", { /*ref, func_ref, blocked<16>(A, B),*/ view_blocked<n, 16>(A, B), functional_view_blocked<n, 16>(A, B) });

	lea	r9, OFFSET FLAT:??1?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@XZ
	mov	edx, 32					; 00000020H
	lea	r8d, QWORD PTR [rdx-30]
	lea	rcx, QWORD PTR $T10[rbp-137]
	call	??_M@YAXPEAX_K1P6AX0@Z@Z
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 921  : 		_Tidy();

	lea	rcx, QWORD PTR B$[rbp-137]
	call	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
	npad	1
	lea	rcx, QWORD PTR A$[rbp-137]
	call	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 228  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-137]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+224]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	mov	rdi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rbp
	ret	0
$LN377@invoke:
??$invoke@$0CAA@@@YAXXZ ENDP				; invoke<512>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
?dtor$0@?0???$invoke@$0CAA@@@YAXXZ@4HA PROC		; `invoke<512>'::`1'::dtor$0
	lea	rcx, QWORD PTR A$[rdx]
	jmp	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
?dtor$0@?0???$invoke@$0CAA@@@YAXXZ@4HA ENDP		; `invoke<512>'::`1'::dtor$0
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
?dtor$1@?0???$invoke@$0CAA@@@YAXXZ@4HA PROC		; `invoke<512>'::`1'::dtor$1
	lea	rcx, QWORD PTR B$[rdx]
	jmp	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
?dtor$1@?0???$invoke@$0CAA@@@YAXXZ@4HA ENDP		; `invoke<512>'::`1'::dtor$1
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
?dtor$2@?0???$invoke@$0CAA@@@YAXXZ@4HA PROC		; `invoke<512>'::`1'::dtor$2
	lea	rcx, QWORD PTR $T10[rdx]
	jmp	??1?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@XZ
?dtor$2@?0???$invoke@$0CAA@@@YAXXZ@4HA ENDP		; `invoke<512>'::`1'::dtor$2
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
?dtor$4@?0???$invoke@$0CAA@@@YAXXZ@4HA PROC		; `invoke<512>'::`1'::dtor$4
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	r9, OFFSET FLAT:??1?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@XZ
	mov	r8d, 2
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR $T10[rbp]
	call	??_M@YAXPEAX_K1P6AX0@Z@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$4@?0???$invoke@$0CAA@@@YAXXZ@4HA ENDP		; `invoke<512>'::`1'::dtor$4
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
?dtor$5@?0???$invoke@$0CAA@@@YAXXZ@4HA PROC		; `invoke<512>'::`1'::dtor$5
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::~vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
?dtor$5@?0???$invoke@$0CAA@@@YAXXZ@4HA ENDP		; `invoke<512>'::`1'::dtor$5
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
?dtor$6@?0???$invoke@$0CAA@@@YAXXZ@4HA PROC		; `invoke<512>'::`1'::dtor$6
	lea	rcx, QWORD PTR $T19[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$6@?0???$invoke@$0CAA@@@YAXXZ@4HA ENDP		; `invoke<512>'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
?dtor$0@?0???$invoke@$0CAA@@@YAXXZ@4HA PROC		; `invoke<512>'::`1'::dtor$0
	lea	rcx, QWORD PTR A$[rdx]
	jmp	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
?dtor$0@?0???$invoke@$0CAA@@@YAXXZ@4HA ENDP		; `invoke<512>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
?dtor$1@?0???$invoke@$0CAA@@@YAXXZ@4HA PROC		; `invoke<512>'::`1'::dtor$1
	lea	rcx, QWORD PTR B$[rdx]
	jmp	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
?dtor$1@?0???$invoke@$0CAA@@@YAXXZ@4HA ENDP		; `invoke<512>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
?dtor$2@?0???$invoke@$0CAA@@@YAXXZ@4HA PROC		; `invoke<512>'::`1'::dtor$2
	lea	rcx, QWORD PTR $T10[rdx]
	jmp	??1?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@XZ
?dtor$2@?0???$invoke@$0CAA@@@YAXXZ@4HA ENDP		; `invoke<512>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
?dtor$4@?0???$invoke@$0CAA@@@YAXXZ@4HA PROC		; `invoke<512>'::`1'::dtor$4
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	r9, OFFSET FLAT:??1?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@XZ
	mov	r8d, 2
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR $T10[rbp]
	call	??_M@YAXPEAX_K1P6AX0@Z@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$4@?0???$invoke@$0CAA@@@YAXXZ@4HA ENDP		; `invoke<512>'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
?dtor$5@?0???$invoke@$0CAA@@@YAXXZ@4HA PROC		; `invoke<512>'::`1'::dtor$5
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::~vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
?dtor$5@?0???$invoke@$0CAA@@@YAXXZ@4HA ENDP		; `invoke<512>'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T19 = 32
$T15 = 64
$T71 = 88
$T10 = 96
B$ = 160
A$ = 184
__$ArrayPad$ = 208
?dtor$6@?0???$invoke@$0CAA@@@YAXXZ@4HA PROC		; `invoke<512>'::`1'::dtor$6
	lea	rcx, QWORD PTR $T19[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$6@?0???$invoke@$0CAA@@@YAXXZ@4HA ENDP		; `invoke<512>'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\string
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??R<lambda_c164751ea5715ae0ff95fdbf1eaa21f3>@@QEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@2@@Z
_TEXT	SEGMENT
this$dead$ = 48
title$ = 56
v$ = 64
??R<lambda_c164751ea5715ae0ff95fdbf1eaa21f3>@@QEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@2@@Z PROC ; <lambda_c164751ea5715ae0ff95fdbf1eaa21f3>::operator(), COMDAT

; 218  :     {

	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 1617 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rdx+24], 16
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 218  :     {

	mov	rbx, r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3062 : 		return (this->_Get_data()._Mysize);

	mov	r8, QWORD PTR [rdx+16]

; 1607 : 		if (_Large_string_engaged())

	jb	SHORT $LN27@operator
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstddef

; 265  : 	return (_Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN27@operator:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\string

; 169  : 	return (_Insert_string(_Ostr, _Str.data(), _Str.size()));

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
	mov	rcx, rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 219  :         std::cout << title << ": ";

	lea	rdx, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5?$AA@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1755 : 		return (this->_Mylast());

	mov	rdi, QWORD PTR [rbx+8]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 219  :         std::cout << title << ": ";

	mov	rbx, QWORD PTR [rbx]

; 220  :         for (auto const& r : v) { std::cout << r.second << " ms (" /*<< (is_same(r.first, ref.first) ? '+' : '-') << */") "; }

	cmp	rbx, rdi
	je	SHORT $LN3@operator
$LL4@operator:
	movsd	xmm1, QWORD PTR [rbx+24]
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_07CCDOBJC@?5ms?5?$CI?$CJ?5?$AA@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	add	rbx, 32					; 00000020H
	cmp	rbx, rdi
	jne	SHORT $LL4@operator
$LN3@operator:

; 221  :         std::cout << "\n";

	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@

; 222  :     };

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

; 221  :         std::cout << "\n";

	jmp	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
??R<lambda_c164751ea5715ae0ff95fdbf1eaa21f3>@@QEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@2@@Z ENDP ; <lambda_c164751ea5715ae0ff95fdbf1eaa21f3>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z
_TEXT	SEGMENT
tv3863 = 32
tv3869 = 40
tv3867 = 48
tv3865 = 56
tv3866 = 64
tv3862 = 72
tv3871 = 80
base$1$ = 88
tv3864 = 96
t0$1$ = 104
__$ReturnUdt$GSCopy$1$ = 112
C$ = 128
__$ArrayPad$ = 152
__$ReturnUdt$ = 224
A$ = 232
B$ = 240
??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z PROC ; view_blocked<512,16,double>, COMDAT

; 94   : {

$LN291:
	mov	r11, rsp
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 176				; 000000b0H
	mov	QWORD PTR [r11-96], -2
	mov	QWORD PTR [r11+16], rbx
	mov	QWORD PTR [r11+24], rbp
	mov	QWORD PTR [r11+32], rsi
	movaps	XMMWORD PTR [r11-56], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, r8
	mov	rbx, rdx
	mov	QWORD PTR __$ReturnUdt$GSCopy$1$[rsp], rcx
	xor	eax, eax
	mov	QWORD PTR [r11-88], rax
	mov	QWORD PTR [r11-80], rax
	mov	QWORD PTR [r11-72], rax

; 95   :     std::vector<T> C(n*n);

	mov	edx, 262144				; 00040000H
	lea	rcx, QWORD PTR [r11-88]
	call	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
	npad	1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	r13, QWORD PTR [rbx]
	mov	rdi, QWORD PTR [rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono

; 825  : 		const long long _Freq = _Query_perf_frequency();	// doesn't change after system boot

	call	QWORD PTR __imp__Query_perf_frequency
	mov	rbx, rax

; 826  : 		const long long _Ctr = _Query_perf_counter();

	call	QWORD PTR __imp__Query_perf_counter

; 827  : 		static_assert(period::num == 1, "This assumes period::num == 1.");
; 828  : 		const long long _Whole = (_Ctr / _Freq) * period::den;

	cdq
	idiv	rbx
	imul	rcx, rax, 1000000000			; 3b9aca00H

; 829  : 		const long long _Part = (_Ctr % _Freq) * period::den / _Freq;

	imul	rax, rdx, 1000000000			; 3b9aca00H
	cdq
	idiv	rbx

; 830  : 		return (time_point(duration(_Whole + _Part)));

	lea	rbx, QWORD PTR [rax+rcx]
	mov	QWORD PTR t0$1$[rsp], rbx
	lea	rcx, QWORD PTR [rdi+8192]
	mov	QWORD PTR tv3864[rsp], rcx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 95   :     std::vector<T> C(n*n);

	xor	edx, edx
	mov	QWORD PTR tv3863[rsp], rdx
	mov	QWORD PTR tv3871[rsp], 32		; 00000020H
	mov	r14, QWORD PTR C$[rsp]
$LL4@view_block:

; 101  :     { //block index 1
; 102  :         for (int bj = 0; bj < Bs; ++bj)

	xor	eax, eax
	mov	QWORD PTR tv3866[rsp], rax
	mov	r8, rcx
	mov	QWORD PTR tv3865[rsp], rcx
	mov	QWORD PTR tv3862[rsp], 32		; 00000020H
	npad	8
$LL7@view_block:
	lea	rcx, QWORD PTR [rdx+rax]
	mov	QWORD PTR base$1$[rsp], rcx

; 103  :         { //block index 2
; 104  :             for (int bk = 0; bk < Bs; ++bk)

	xor	eax, eax
	mov	QWORD PTR tv3869[rsp], rax
	mov	rbx, r8
	mov	QWORD PTR tv3867[rsp], 32		; 00000020H
	npad	4
$LL10@view_block:
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	lea	r15, QWORD PTR [rdx+rax]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 106  :                 auto bA = vA[bi][bk], bB = vB[bk][bj];

	mov	rdi, rcx
	lea	rbp, QWORD PTR [r13+16]
	lea	rbp, QWORD PTR [rbp+r15*8]

; 107  :                 auto bC = vC[bi][bj];
; 108  :                 for (int i = 0; i < b; ++i)

	sub	r15, rcx

; 106  :                 auto bA = vA[bi][bk], bB = vB[bk][bj];

	mov	r12d, 16
	npad	7
$LL13@view_block:

; 110  :                     for (int j = 0; j < b; ++j)

	xor	r9d, r9d
	mov	r8, rbx
	lea	esi, QWORD PTR [r9+16]
	npad	6
$LL16@view_block:
	xorps	xmm2, xmm2

; 111  :                     {
; 112  :                         T sum = T();

	mov	r10d, 7
	mov	rdx, rbp
	mov	rcx, r8
	lea	r11d, QWORD PTR [r10-5]
$LL19@view_block:

; 115  :                             sum += bA[i][k] * bB[k][j];

	movsd	xmm0, QWORD PTR [rdx-16]
	mulsd	xmm0, QWORD PTR [rcx-8192]
	addsd	xmm2, xmm0
	movsd	xmm1, QWORD PTR [rdx-8]
	mulsd	xmm1, QWORD PTR [rcx-4096]
	addsd	xmm2, xmm1
	movsd	xmm0, QWORD PTR [rcx]
	mulsd	xmm0, QWORD PTR [rdx]
	addsd	xmm2, xmm0
	movsd	xmm1, QWORD PTR [rdx+8]
	mulsd	xmm1, QWORD PTR [rcx+4096]
	addsd	xmm2, xmm1
	movsd	xmm0, QWORD PTR [rdx+16]
	mulsd	xmm0, QWORD PTR [rcx+8192]
	addsd	xmm2, xmm0
	movsd	xmm1, QWORD PTR [rdx+24]
	mulsd	xmm1, QWORD PTR [rcx+12288]
	addsd	xmm2, xmm1
	movsd	xmm0, QWORD PTR [rdx+32]
	mulsd	xmm0, QWORD PTR [rcx+16384]
	addsd	xmm2, xmm0
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	lea	rax, QWORD PTR [r15+r10]
	add	rax, rdi

; 82   :         return data[base];

	movsd	xmm0, QWORD PTR [rcx+20480]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 115  :                             sum += bA[i][k] * bB[k][j];

	mulsd	xmm0, QWORD PTR [r13+rax*8]
	addsd	xmm2, xmm0
	add	rdx, 64					; 00000040H
	add	rcx, 32768				; 00008000H
	add	r10, 8

; 113  :                         for (int k = 0; k < b; ++k)

	sub	r11, 1
	jne	$LL19@view_block
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	lea	rax, QWORD PTR [rdi+r9]

; 82   :         return data[base];

	movsd	xmm0, QWORD PTR [r14+rax*8]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 117  :                         bC[i][j] = bC[i][j] + sum;

	addsd	xmm0, xmm2
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movsd	QWORD PTR [r14+rax*8], xmm0
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 110  :                     for (int j = 0; j < b; ++j)

	inc	r9
	add	r8, 8
	sub	rsi, 1
	jne	$LL16@view_block

; 107  :                 auto bC = vC[bi][bj];
; 108  :                 for (int i = 0; i < b; ++i)

	add	rbp, 4096				; 00001000H
	add	rdi, 512				; 00000200H
	sub	r12, 1
	jne	$LL13@view_block

; 103  :         { //block index 2
; 104  :             for (int bk = 0; bk < Bs; ++bk)

	mov	rax, QWORD PTR tv3869[rsp]
	add	rax, 16
	mov	QWORD PTR tv3869[rsp], rax
	add	rbx, 65536				; 00010000H
	sub	QWORD PTR tv3867[rsp], 1
	mov	rcx, QWORD PTR base$1$[rsp]
	mov	rdx, QWORD PTR tv3863[rsp]
	jne	$LL10@view_block

; 101  :     { //block index 1
; 102  :         for (int bj = 0; bj < Bs; ++bj)

	mov	r8, QWORD PTR tv3865[rsp]
	sub	r8, -128				; ffffffffffffff80H
	mov	QWORD PTR tv3865[rsp], r8
	mov	rax, QWORD PTR tv3866[rsp]
	add	rax, 16
	mov	QWORD PTR tv3866[rsp], rax
	sub	QWORD PTR tv3862[rsp], 1
	jne	$LL7@view_block

; 96   :     constexpr auto Bs = n / b;
; 97   :     View<T const*, T, to_list_t<P<Bs, b*n>, P<Bs, b>, P<b, n>, P<b, 1>>> vA(A.data()), vB(B.data());
; 98   :     View<T*, T, to_list_t<P<Bs, b*n>, P<Bs, b>, P<b, n>, P<b, 1>>> vC(C.data());
; 99   :     auto t0 = std::chrono::high_resolution_clock::now();
; 100  :     for (int bi = 0; bi < Bs; ++bi)

	add	rdx, 8192				; 00002000H
	mov	QWORD PTR tv3863[rsp], rdx
	sub	QWORD PTR tv3871[rsp], 1
	mov	rcx, QWORD PTR tv3864[rsp]
	jne	$LL4@view_block
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono

; 825  : 		const long long _Freq = _Query_perf_frequency();	// doesn't change after system boot

	call	QWORD PTR __imp__Query_perf_frequency
	mov	rdi, rax

; 826  : 		const long long _Ctr = _Query_perf_counter();

	call	QWORD PTR __imp__Query_perf_counter

; 827  : 		static_assert(period::num == 1, "This assumes period::num == 1.");
; 828  : 		const long long _Whole = (_Ctr / _Freq) * period::den;

	cdq
	idiv	rdi
	imul	rcx, rax, 1000000000			; 3b9aca00H

; 829  : 		const long long _Part = (_Ctr % _Freq) * period::den / _Freq;

	imul	rax, rdx, 1000000000			; 3b9aca00H
	cdq
	idiv	rdi

; 830  : 		return (time_point(duration(_Whole + _Part)));

	lea	rdx, QWORD PTR [rax+rcx]

; 248  : 		return (_MyDur);

	mov	rax, rdx
	mov	rbx, QWORD PTR t0$1$[rsp]
	cmp	rbx, rdx
	cmovl	rax, rbx
	cmp	rdx, rbx
	cmovl	rdx, rbx

; 335  : 	return (_CD(_CD(_Left).count() - _CD(_Right).count()));

	sub	rdx, rax

; 532  : 	return (_CF::num == 1 && _CF::den == 1

	mov	rax, 2361183241434822607		; 20c49ba5e353f7cfH
	imul	rdx
	sar	rdx, 7
	mov	rcx, rdx
	shr	rcx, 63					; 0000003fH
	add	rdx, rcx
	xorps	xmm6, xmm6
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 15   : auto ms(Time const& t0, Time const& t1) { return std::chrono::duration_cast<std::chrono::microseconds>(std::max(t1, t0) - std::min(t1, t0)).count() / 1000.0; }

	cvtsi2sd xmm6, rdx
	divsd	xmm6, QWORD PTR __real@408f400000000000
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\utility

; 186  : 		: first(_STD forward<_Other1>(_Val1)),

	lea	rdx, QWORD PTR C$[rsp]
	mov	rbx, QWORD PTR __$ReturnUdt$GSCopy$1$[rsp]
	mov	rcx, rbx
	call	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >

; 187  : 				second(_STD forward<_Other2>(_Val2))

	movsd	QWORD PTR [rbx+24], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 921  : 		_Tidy();

	lea	rcx, QWORD PTR C$[rsp]
	call	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 124  :     return std::make_pair(C, ms(t0, t1));;

	mov	rax, rbx

; 125  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+176]
	mov	rbx, QWORD PTR [r11+56]
	mov	rbp, QWORD PTR [r11+64]
	mov	rsi, QWORD PTR [r11+72]
	movaps	xmm6, XMMWORD PTR [r11-16]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
??$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z ENDP ; view_blocked<512,16,double>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv3863 = 32
tv3869 = 40
tv3867 = 48
tv3865 = 56
tv3866 = 64
tv3862 = 72
tv3871 = 80
base$1$ = 88
tv3864 = 96
t0$1$ = 104
__$ReturnUdt$GSCopy$1$ = 112
C$ = 128
__$ArrayPad$ = 152
__$ReturnUdt$ = 224
A$ = 232
B$ = 240
?dtor$0@?0???$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z@4HA PROC ; `view_blocked<512,16,double>'::`1'::dtor$0
	lea	rcx, QWORD PTR C$[rdx]
	jmp	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
?dtor$0@?0???$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z@4HA ENDP ; `view_blocked<512,16,double>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv3863 = 32
tv3869 = 40
tv3867 = 48
tv3865 = 56
tv3866 = 64
tv3862 = 72
tv3871 = 80
base$1$ = 88
tv3864 = 96
t0$1$ = 104
__$ReturnUdt$GSCopy$1$ = 112
C$ = 128
__$ArrayPad$ = 152
__$ReturnUdt$ = 224
A$ = 232
B$ = 240
?dtor$0@?0???$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z@4HA PROC ; `view_blocked<512,16,double>'::`1'::dtor$0
	lea	rcx, QWORD PTR C$[rdx]
	jmp	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
?dtor$0@?0???$view_blocked@$0CAA@$0BA@N@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBV?$vector@NV?$allocator@N@std@@@1@0@Z@4HA ENDP ; `view_blocked<512,16,double>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@_K@Z PROC ; View<double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::operator[], COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	shl	r8, 13
	add	r8, QWORD PTR [rcx+8]

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx+8], r8

; 31   :     }

	ret	0
??A?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@_K@Z ENDP ; View<double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@_K@Z PROC ; View<double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >::operator[], COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	shl	r8, 4
	add	r8, QWORD PTR [rcx+8]

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx+8], r8

; 31   :     }

	ret	0
??A?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@_K@Z ENDP ; View<double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@_K@Z PROC ; View<double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::operator[], COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	shl	r8, 13
	add	r8, QWORD PTR [rcx+8]

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx+8], r8

; 31   :     }

	ret	0
??A?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@_K@Z ENDP ; View<double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@_K@Z PROC ; View<double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >::operator[], COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	shl	r8, 4
	add	r8, QWORD PTR [rcx+8]

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx+8], r8

; 31   :     }

	ret	0
??A?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@_K@Z ENDP ; View<double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@_K@Z PROC ; View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::operator[], COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	shl	r8, 9
	add	r8, QWORD PTR [rcx+8]

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx+8], r8

; 31   :     }

	ret	0
??A?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@_K@Z ENDP ; View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEBA?AV?$View@PEBNNUEmptyList@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEBA?AV?$View@PEBNNUEmptyList@@@@_K@Z PROC ; View<double const * __ptr64,double,List<P<16,1>,EmptyList> >::operator[], COMDAT

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rcx, QWORD PTR [rcx+8]
	add	rcx, r8

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax
	mov	QWORD PTR [rdx+8], rcx

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 31   :     }

	ret	0
??A?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEBA?AV?$View@PEBNNUEmptyList@@@@_K@Z ENDP ; View<double const * __ptr64,double,List<P<16,1>,EmptyList> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@_K@Z PROC ; View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::operator[], COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	shl	r8, 9
	add	r8, QWORD PTR [rcx+8]

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx+8], r8

; 31   :     }

	ret	0
??A?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@_K@Z ENDP ; View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEBA?AV?$View@PEANNUEmptyList@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEBA?AV?$View@PEANNUEmptyList@@@@_K@Z PROC ; View<double * __ptr64,double,List<P<16,1>,EmptyList> >::operator[], COMDAT

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rcx, QWORD PTR [rcx+8]
	add	rcx, r8

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax
	mov	QWORD PTR [rdx+8], rcx

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 31   :     }

	ret	0
??A?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEBA?AV?$View@PEANNUEmptyList@@@@_K@Z ENDP ; View<double * __ptr64,double,List<P<16,1>,EmptyList> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z
_TEXT	SEGMENT
$T34 = 48
$T42 = 64
$T44 = 80
$T100 = 96
$T47 = 112
$T48 = 128
$T49 = 144
$T50 = 160
$T35 = 176
vB$ = 192
vD$ = 208
tmp$ = 224
C$ = 240
D$ = 264
t$ = 288
__$ArrayPad$ = 296
__$ReturnUdt$ = 368
A$ = 376
B$ = 384
??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z PROC ; functional_view_blocked<512,16,double>, COMDAT

; 152  : {

$LN257:
	mov	rax, rsp
	push	rbp
	push	rdi
	push	r12
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rax-104]
	sub	rsp, 320				; 00000140H
	mov	QWORD PTR $T100[rsp], -2
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax+24], rsi
	movaps	XMMWORD PTR [rax-56], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	rdi, r8
	mov	rbx, rdx
	mov	r12, rcx
	xor	eax, eax
	mov	QWORD PTR C$[rbp-256], rax
	mov	QWORD PTR C$[rbp-248], rax
	mov	QWORD PTR C$[rbp-240], rax

; 153  :     std::vector<T> C(n*n);

	mov	edx, 262144				; 00040000H
	lea	rcx, QWORD PTR C$[rbp-256]
	call	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
	npad	1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rsi, QWORD PTR [rbx]
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR vB$[rbp-256], rax
	xor	r15d, r15d
	mov	QWORD PTR vB$[rbp-248], r15
	xor	eax, eax
	mov	QWORD PTR D$[rbp-256], rax
	mov	QWORD PTR D$[rbp-248], rax
	mov	QWORD PTR D$[rbp-240], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 158  :     std::vector<T> D(b*b);

	mov	edx, 256				; 00000100H
	lea	rcx, QWORD PTR D$[rbp-256]
	call	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
	npad	1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR D$[rbp-256]
	mov	QWORD PTR vD$[rbp-256], rax
	mov	QWORD PTR vD$[rbp-248], r15

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	lea	rax, QWORD PTR t$[rbp-256]
	mov	QWORD PTR tmp$[rbp-256], rax
	mov	QWORD PTR tmp$[rbp-248], r15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono

; 825  : 		const long long _Freq = _Query_perf_frequency();	// doesn't change after system boot

	call	QWORD PTR __imp__Query_perf_frequency
	mov	rbx, rax

; 826  : 		const long long _Ctr = _Query_perf_counter();

	call	QWORD PTR __imp__Query_perf_counter

; 827  : 		static_assert(period::num == 1, "This assumes period::num == 1.");
; 828  : 		const long long _Whole = (_Ctr / _Freq) * period::den;

	cdq
	idiv	rbx
	imul	rcx, rax, 1000000000			; 3b9aca00H

; 829  : 		const long long _Part = (_Ctr % _Freq) * period::den / _Freq;

	imul	rax, rdx, 1000000000			; 3b9aca00H
	cdq
	idiv	rbx

; 830  : 		return (time_point(duration(_Whole + _Part)));

	lea	rbx, QWORD PTR [rax+rcx]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T34[rsp], rsi
	mov	rax, QWORD PTR C$[rbp-256]
	mov	QWORD PTR $T44[rsp], rax
	npad	2
$LL112@functional:
	mov	QWORD PTR $T34[rsp+8], r15
; File d:\documents\dev\lambdagen\view\view\hof.h

; 10   :             f(result[i], v[i]);

	movaps	xmm1, XMMWORD PTR $T34[rsp]
	movaps	XMMWORD PTR $T35[rbp-256], xmm1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR vB$[rbp-256]
	mov	QWORD PTR $T42[rsp], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rdi, r15
	mov	rsi, QWORD PTR vB$[rbp-248]
	mov	r14d, 32				; 00000020H
	npad	12
$LL129@functional:

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T42[rsp+8], rsi
	mov	QWORD PTR $T44[rsp+8], rdi
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 165  :             rnz(result, vD,

	movaps	xmm0, XMMWORD PTR $T42[rsp]
	movdqa	XMMWORD PTR $T47[rsp], xmm0
	movdqa	XMMWORD PTR $T48[rbp-256], xmm1
	movaps	xmm0, XMMWORD PTR vD$[rbp-256]
	movdqa	XMMWORD PTR $T49[rbp-256], xmm0
	movaps	xmm1, XMMWORD PTR $T44[rsp]
	movdqa	XMMWORD PTR $T50[rbp-256], xmm1
	lea	rax, QWORD PTR $T47[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR $T48[rbp-256]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR tmp$[rbp-256]
	lea	rdx, QWORD PTR $T49[rbp-256]
	lea	rcx, QWORD PTR $T50[rbp-256]
	call	??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >,<lambda_82709c2af490acbaaecbe567606e69e8>,<lambda_7ef7f5917424a38ce3010ad89fbaf103>,double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	add	rsi, 16
	add	rdi, 16
	sub	r14, 1
	je	SHORT $LN256@functional
	movaps	xmm1, XMMWORD PTR $T35[rbp-256]
	jmp	SHORT $LL129@functional
$LN256@functional:
	add	r15, 8192				; 00002000H
	cmp	r15, 262144				; 00040000H
	jb	$LL112@functional
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono

; 825  : 		const long long _Freq = _Query_perf_frequency();	// doesn't change after system boot

	call	QWORD PTR __imp__Query_perf_frequency
	mov	rdi, rax

; 826  : 		const long long _Ctr = _Query_perf_counter();

	call	QWORD PTR __imp__Query_perf_counter

; 827  : 		static_assert(period::num == 1, "This assumes period::num == 1.");
; 828  : 		const long long _Whole = (_Ctr / _Freq) * period::den;

	cdq
	idiv	rdi
	imul	rcx, rax, 1000000000			; 3b9aca00H

; 829  : 		const long long _Part = (_Ctr % _Freq) * period::den / _Freq;

	imul	rax, rdx, 1000000000			; 3b9aca00H
	cdq
	idiv	rdi

; 830  : 		return (time_point(duration(_Whole + _Part)));

	lea	rdx, QWORD PTR [rax+rcx]

; 248  : 		return (_MyDur);

	mov	rax, rdx
	cmp	rbx, rdx
	cmovl	rax, rbx
	cmp	rdx, rbx
	cmovl	rdx, rbx

; 335  : 	return (_CD(_CD(_Left).count() - _CD(_Right).count()));

	sub	rdx, rax

; 532  : 	return (_CF::num == 1 && _CF::den == 1

	mov	rax, 2361183241434822607		; 20c49ba5e353f7cfH
	imul	rdx
	sar	rdx, 7
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	xorps	xmm6, xmm6
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 15   : auto ms(Time const& t0, Time const& t1) { return std::chrono::duration_cast<std::chrono::microseconds>(std::max(t1, t0) - std::min(t1, t0)).count() / 1000.0; }

	cvtsi2sd xmm6, rdx
	divsd	xmm6, QWORD PTR __real@408f400000000000
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\utility

; 186  : 		: first(_STD forward<_Other1>(_Val1)),

	lea	rdx, QWORD PTR C$[rbp-256]
	mov	rcx, r12
	call	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >

; 187  : 				second(_STD forward<_Other2>(_Val2))

	movsd	QWORD PTR [r12+24], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 921  : 		_Tidy();

	lea	rcx, QWORD PTR D$[rbp-256]
	call	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
	npad	1
	lea	rcx, QWORD PTR C$[rbp-256]
	call	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 180  :     return std::make_pair(C, ms(t0, t1));;

	mov	rax, r12

; 181  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+320]
	mov	rbx, QWORD PTR [r11+56]
	mov	rsi, QWORD PTR [r11+64]
	movaps	xmm6, XMMWORD PTR [r11-16]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rbp
	ret	0
??$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z ENDP ; functional_view_blocked<512,16,double>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T34 = 48
$T42 = 64
$T44 = 80
$T100 = 96
$T47 = 112
$T48 = 128
$T49 = 144
$T50 = 160
$T35 = 176
vB$ = 192
vD$ = 208
tmp$ = 224
C$ = 240
D$ = 264
t$ = 288
__$ArrayPad$ = 296
__$ReturnUdt$ = 368
A$ = 376
B$ = 384
?dtor$0@?0???$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z@4HA PROC ; `functional_view_blocked<512,16,double>'::`1'::dtor$0
	lea	rcx, QWORD PTR C$[rdx]
	jmp	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
?dtor$0@?0???$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z@4HA ENDP ; `functional_view_blocked<512,16,double>'::`1'::dtor$0
$T34 = 48
$T42 = 64
$T44 = 80
$T100 = 96
$T47 = 112
$T48 = 128
$T49 = 144
$T50 = 160
$T35 = 176
vB$ = 192
vD$ = 208
tmp$ = 224
C$ = 240
D$ = 264
t$ = 288
__$ArrayPad$ = 296
__$ReturnUdt$ = 368
A$ = 376
B$ = 384
?dtor$1@?0???$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z@4HA PROC ; `functional_view_blocked<512,16,double>'::`1'::dtor$1
	lea	rcx, QWORD PTR D$[rdx]
	jmp	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
?dtor$1@?0???$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z@4HA ENDP ; `functional_view_blocked<512,16,double>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T34 = 48
$T42 = 64
$T44 = 80
$T100 = 96
$T47 = 112
$T48 = 128
$T49 = 144
$T50 = 160
$T35 = 176
vB$ = 192
vD$ = 208
tmp$ = 224
C$ = 240
D$ = 264
t$ = 288
__$ArrayPad$ = 296
__$ReturnUdt$ = 368
A$ = 376
B$ = 384
?dtor$0@?0???$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z@4HA PROC ; `functional_view_blocked<512,16,double>'::`1'::dtor$0
	lea	rcx, QWORD PTR C$[rdx]
	jmp	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
?dtor$0@?0???$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z@4HA ENDP ; `functional_view_blocked<512,16,double>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T34 = 48
$T42 = 64
$T44 = 80
$T100 = 96
$T47 = 112
$T48 = 128
$T49 = 144
$T50 = 160
$T35 = 176
vB$ = 192
vD$ = 208
tmp$ = 224
C$ = 240
D$ = 264
t$ = 288
__$ArrayPad$ = 296
__$ReturnUdt$ = 368
A$ = 376
B$ = 384
?dtor$1@?0???$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z@4HA PROC ; `functional_view_blocked<512,16,double>'::`1'::dtor$1
	lea	rcx, QWORD PTR D$[rdx]
	jmp	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
?dtor$1@?0???$functional_view_blocked@$0CAA@$0BA@N@@YA@AEBV?$vector@NV?$allocator@N@std@@@std@@0@Z@4HA ENDP ; `functional_view_blocked<512,16,double>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??0<lambda_d96185b9da9a7d2086bd47349d2635dc>@@QEAA@AEAV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@@Z
_TEXT	SEGMENT
this$ = 8
<vD>$ = 16
<tmp>$ = 24
<vB>$ = 32
??0<lambda_d96185b9da9a7d2086bd47349d2635dc>@@QEAA@AEAV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@@Z PROC ; <lambda_d96185b9da9a7d2086bd47349d2635dc>::<lambda_d96185b9da9a7d2086bd47349d2635dc>, COMDAT

; 177  :             vB); },

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	mov	QWORD PTR [rcx+16], r9
	ret	0
??0<lambda_d96185b9da9a7d2086bd47349d2635dc>@@QEAA@AEAV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@@Z ENDP ; <lambda_d96185b9da9a7d2086bd47349d2635dc>::<lambda_d96185b9da9a7d2086bd47349d2635dc>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 23   : 	return (_Right < _Left ? _Right : _Left);

	mov	rax, QWORD PTR [rcx]
	cmp	QWORD PTR [rdx], rax
	cmovb	rcx, rdx
	mov	rax, rcx

; 24   : 	}

	ret	0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 265  : 	return (_Ptr);

	mov	rax, rcx

; 266  : 	}

	ret	0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 1576 : 		_Mysize(0),

	xor	eax, eax
	mov	QWORD PTR [rcx+16], rax

; 1577 : 		_Myres(0)

	mov	QWORD PTR [rcx+24], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility

; 304  : 		}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char * __ptr64>, COMDAT

; 249  : 	return (__builtin_addressof(_Val));

	mov	rax, rcx

; 250  : 	}

	ret	0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEAD@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$dead$ = 16
??$destroy@PEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEAD@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::destroy<char * __ptr64>, COMDAT

; 862  : 		_Ptr->~_Uty();
; 863  : 		}

	ret	0
??$destroy@PEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEAD@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
_TEXT	SEGMENT
this$ = 80
_New_size$ = 88
_Fn$dead$ = 96
<_Args_0>$dead$ = 104
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const * __ptr64>, COMDAT

; 3609 : 		{	// reallocate to store exactly _New_size elements, new buffer prepared by

	push	rbx
	push	rsi
	push	r15
	sub	rsp, 48					; 00000030H

; 3610 : 			// _Fn(_New_ptr, _New_size, _Args...)
; 3611 : 		if (_New_size > max_size())

	mov	rbx, 9223372036854775807		; 7fffffffffffffffH
	mov	r15, rdx
	mov	rsi, rcx
	cmp	rdx, rbx
	ja	$LN129@Reallocate

; 3614 : 			}
; 3615 : 
; 3616 : 		auto& _My_data = this->_Get_data();
; 3617 : 		const size_type _Old_capacity = _My_data._Myres;

	mov	QWORD PTR [rsp+32], r14
	mov	r14, QWORD PTR [rcx+24]

; 3591 : 		const size_type _Masked = _Requested | this->_ALLOC_MASK;

	mov	rcx, rdx
	or	rcx, 15

; 3592 : 		if (_Masked > _Max)

	cmp	rcx, rbx
	ja	SHORT $LN33@Reallocate

; 3593 : 			{	// the mask overflows, settle for max_size()
; 3594 : 			return (_Max);
; 3595 : 			}
; 3596 : 
; 3597 : 		const size_type _Old = _My_data._Myres;
; 3598 : 		if (_Old > _Max - _Old / 2)

	mov	rdx, r14
	mov	rax, rbx
	shr	rdx, 1
	sub	rax, rdx
	cmp	r14, rax
	ja	SHORT $LN33@Reallocate

; 3599 : 			{	// similarly, geometric overflows
; 3600 : 			return (_Max);
; 3601 : 			}
; 3602 : 
; 3603 : 		return (_Max_value(_Masked, _Old + _Old / 2));

	lea	rax, QWORD PTR [rdx+r14]
	mov	rbx, rcx
	cmp	rcx, rax
	cmovb	rbx, rax
$LN33@Reallocate:

; 3618 : 		const size_type _New_capacity = _Calculate_growth(_New_size);
; 3619 : 		auto& _Al = this->_Getal();
; 3620 : 		const pointer _New_ptr = _Al.allocate(_New_capacity + 1); // throws

	mov	QWORD PTR [rsp+96], rbp
	mov	rcx, rbx
	add	rcx, 1
	mov	QWORD PTR [rsp+40], rdi
	mov	rax, -1
	cmovb	rcx, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 54   : 		return (_Ptr);

	xor	ebp, ebp
	test	rcx, rcx
	jne	SHORT $LN76@Reallocate
	mov	edi, ebp
	jmp	SHORT $LN75@Reallocate
$LN76@Reallocate:

; 55   : 		}
; 56   : 
; 57   : 	// check overflow of multiply
; 58   : 	if (static_cast<size_t>(-1) / _Sz < _Count)

	test	bpl, bpl
	je	SHORT $LN77@Reallocate

; 59   : 		{
; 60   : 		_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN77@Reallocate:

; 61   : 		}
; 62   : 
; 63   : 	const size_t _User_size = _Count * _Sz;
; 64   : 
; 65   : #if defined(_M_IX86) || defined(_M_X64)
; 66   : 	if (_Try_aligned_allocation
; 67   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN78@Reallocate

; 68   : 		{	// allocate large block
; 69   : 		static_assert(sizeof(void *) < _BIG_ALLOCATION_ALIGNMENT,
; 70   : 			"Big allocations should at least match vector register size");
; 71   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	rax, QWORD PTR [rcx+39]

; 72   : 		if (_Block_size <= _User_size)

	cmp	rax, rcx
	ja	SHORT $LN79@Reallocate

; 73   : 			{
; 74   : 			_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN79@Reallocate:

; 75   : 			}
; 76   : 
; 77   : 		const uintptr_t _Ptr_container =
; 78   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new

; 79   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 80   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	rdi, QWORD PTR [rax+39]
	and	rdi, -32				; ffffffffffffffe0H

; 81   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 82   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rdi-8], rax

; 83   : 
; 84   :  #ifdef _DEBUG
; 85   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 86   :  #endif /* _DEBUG */
; 87   :  		return (_Ptr);

	jmp	SHORT $LN75@Reallocate
$LN78@Reallocate:

; 88   : 		}
; 89   : #else /* ^^^ x86/x64 hardware ^^^ // vvv ARM hardware vvv */
; 90   : 	(void)_Try_aligned_allocation;
; 91   : #endif /* defined(_M_IX86) || defined(_M_X64) */
; 92   : 
; 93   : 	_Ptr = ::operator new(_User_size);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax
$LN75@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	mov	r8, r15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3622 : 		_My_data._Mysize = _New_size;

	mov	QWORD PTR [rsi+16], r15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	lea	rdx, OFFSET FLAT:??_C@_0P@PBMJDCHB@CPU?5Blocked?516?$AA@
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3623 : 		_My_data._Myres = _New_capacity;

	mov	QWORD PTR [rsi+24], rbx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\iosfwd

; 486  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	mov	rcx, rdi
	call	memcpy

; 517  : 		_Left = _Right;

	mov	BYTE PTR [r15+rdi], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3625 : 		if (this->_BUF_SIZE <= _Old_capacity)

	cmp	r14, 16
	jb	SHORT $LN3@Reallocate
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 941  : 		_Deallocate(_Ptr, _Count, sizeof(_Ty));

	mov	rcx, QWORD PTR [rsi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3627 : 			_Al.deallocate(_My_data._Bx._Ptr, _Old_capacity + 1);

	inc	r14
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	test	bpl, bpl
	jne	SHORT $_Invalid_parameter$131

; 103  : 		{
; 104  : 		goto _Invalid_parameter; // TRANSITION, VSO#359498
; 105  : 		}
; 106  : 
; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	cmp	r14, 4096				; 00001000H
	jb	SHORT $LN103@Reallocate

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	cl, 31
	jne	SHORT $_Invalid_parameter$131

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rcx-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rcx
	jae	SHORT $_Invalid_parameter$131
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $_Invalid_parameter$131

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, rax
$LN103@Reallocate:

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	call	??3@YAXPEAX@Z				; operator delete
$LN3@Reallocate:
	mov	rbp, QWORD PTR [rsp+96]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3635 : 		return (*this);

	mov	rax, rsi
	mov	r14, QWORD PTR [rsp+32]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 855  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	QWORD PTR [rsi], rdi
	mov	rdi, QWORD PTR [rsp+40]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3636 : 		}

	add	rsp, 48					; 00000030H
	pop	r15
	pop	rsi
	pop	rbx
	ret	0
$_Invalid_parameter$131:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN129@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3613 : 			_Xlen();	// result too long

	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
	int	3
$LN128@Reallocate:
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ??$construct@PEADAEBQEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEADAEBQEAD@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEBQEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEADAEBQEAD@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 const & __ptr64>, COMDAT

; 855  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx], rax

; 856  : 			_Objty(_STD forward<_Types>(_Args)...);
; 857  : 		}

	ret	0
??$construct@PEADAEBQEAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAPEADAEBQEAD@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$vector@NV?$allocator@N@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$vector@NV?$allocator@N@std@@@std@@QEAAX_K@Z PROC ; std::vector<double,std::allocator<double> >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$vector@NV?$allocator@N@std@@@std@@QEAAX_K@Z ENDP ; std::vector<double,std::allocator<double> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAAX_K@Z PROC ; View<double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	ret	0
?__autoclassinit2@?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAAX_K@Z ENDP ; View<double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAAX_K@Z PROC ; View<double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	ret	0
?__autoclassinit2@?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAAX_K@Z ENDP ; View<double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAAX_K@Z PROC ; View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	ret	0
?__autoclassinit2@?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAAX_K@Z ENDP ; View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAAX_K@Z PROC ; View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	ret	0
?__autoclassinit2@?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAAX_K@Z ENDP ; View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??1?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@XZ PROC ; std::pair<std::vector<double,std::allocator<double> >,double>::~pair<std::vector<double,std::allocator<double> >,double>, COMDAT

; 921  : 		_Tidy();

	jmp	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
??1?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@XZ ENDP ; std::pair<std::vector<double,std::allocator<double> >,double>::~pair<std::vector<double,std::allocator<double> >,double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@QEAAX_K@Z PROC ; View<double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	ret	0
?__autoclassinit2@?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@QEAAX_K@Z ENDP ; View<double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAAX_K@Z PROC ; View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	ret	0
?__autoclassinit2@?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAAX_K@Z ENDP ; View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$View@PEANNUEmptyList@@@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$View@PEANNUEmptyList@@@@QEAAX_K@Z PROC ; View<double * __ptr64,double,EmptyList>::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	ret	0
?__autoclassinit2@?$View@PEANNUEmptyList@@@@QEAAX_K@Z ENDP ; View<double * __ptr64,double,EmptyList>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAA@AEBQEAN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$dead$ = 24
??0?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAA@AEBQEAN_K@Z PROC ; View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >::View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 0
	ret	0
??0?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAA@AEBQEAN_K@Z ENDP ; View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >::View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@QEAA@AEBQEBN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$dead$ = 24
??0?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@QEAA@AEBQEBN_K@Z PROC ; View<double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >::View<double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 0
	ret	0
??0?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@QEAA@AEBQEBN_K@Z ENDP ; View<double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >::View<double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??B?$View@PEANNUEmptyList@@@@QEBANXZ
_TEXT	SEGMENT
this$ = 8
??B?$View@PEANNUEmptyList@@@@QEBANXZ PROC		; View<double * __ptr64,double,EmptyList>::operator double, COMDAT

; 82   :         return data[base];

	mov	rdx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rcx]
	movsd	xmm0, QWORD PTR [rax+rdx*8]

; 83   :     }

	ret	0
??B?$View@PEANNUEmptyList@@@@QEBANXZ ENDP		; View<double * __ptr64,double,EmptyList>::operator double
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??4?$View@PEANNUEmptyList@@@@QEBAXN@Z
_TEXT	SEGMENT
this$ = 8
x$ = 16
??4?$View@PEANNUEmptyList@@@@QEBAXN@Z PROC		; View<double * __ptr64,double,EmptyList>::operator=, COMDAT

; 78   :         data[base] = x;

	mov	rdx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rcx]
	movsd	QWORD PTR [rax+rdx*8], xmm1

; 79   :     }

	ret	0
??4?$View@PEANNUEmptyList@@@@QEBAXN@Z ENDP		; View<double * __ptr64,double,EmptyList>::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEANNUEmptyList@@@@QEAA@PEAN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$ = 24
??0?$View@PEANNUEmptyList@@@@QEAA@PEAN_K@Z PROC		; View<double * __ptr64,double,EmptyList>::View<double * __ptr64,double,EmptyList>, COMDAT

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$View@PEANNUEmptyList@@@@QEAA@PEAN_K@Z ENDP		; View<double * __ptr64,double,EmptyList>::View<double * __ptr64,double,EmptyList>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEAA@AEBQEAN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$ = 24
??0?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEAA@AEBQEAN_K@Z PROC ; View<double * __ptr64,double,List<P<16,1>,EmptyList> >::View<double * __ptr64,double,List<P<16,1>,EmptyList> >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEAA@AEBQEAN_K@Z ENDP ; View<double * __ptr64,double,List<P<16,1>,EmptyList> >::View<double * __ptr64,double,List<P<16,1>,EmptyList> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??B?$View@PEBNNUEmptyList@@@@QEBANXZ
_TEXT	SEGMENT
this$ = 8
??B?$View@PEBNNUEmptyList@@@@QEBANXZ PROC		; View<double const * __ptr64,double,EmptyList>::operator double, COMDAT

; 82   :         return data[base];

	mov	rdx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rcx]
	movsd	xmm0, QWORD PTR [rax+rdx*8]

; 83   :     }

	ret	0
??B?$View@PEBNNUEmptyList@@@@QEBANXZ ENDP		; View<double const * __ptr64,double,EmptyList>::operator double
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEBNNUEmptyList@@@@QEAA@PEBN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$ = 24
??0?$View@PEBNNUEmptyList@@@@QEAA@PEBN_K@Z PROC		; View<double const * __ptr64,double,EmptyList>::View<double const * __ptr64,double,EmptyList>, COMDAT

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$View@PEBNNUEmptyList@@@@QEAA@PEBN_K@Z ENDP		; View<double const * __ptr64,double,EmptyList>::View<double const * __ptr64,double,EmptyList>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEAA@AEBQEBN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$ = 24
??0?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEAA@AEBQEBN_K@Z PROC ; View<double const * __ptr64,double,List<P<16,1>,EmptyList> >::View<double const * __ptr64,double,List<P<16,1>,EmptyList> >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@QEAA@AEBQEBN_K@Z ENDP ; View<double const * __ptr64,double,List<P<16,1>,EmptyList> >::View<double const * __ptr64,double,List<P<16,1>,EmptyList> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAA@AEBQEAN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$ = 24
??0?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAA@AEBQEAN_K@Z PROC ; View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAA@AEBQEAN_K@Z ENDP ; View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEAA@AEBQEAN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$ = 24
??0?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEAA@AEBQEAN_K@Z PROC ; View<double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >::View<double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEAA@AEBQEAN_K@Z ENDP ; View<double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >::View<double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAA@AEBQEBN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$ = 24
??0?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAA@AEBQEBN_K@Z PROC ; View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEAA@AEBQEBN_K@Z ENDP ; View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >::View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEAA@AEBQEBN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$ = 24
??0?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEAA@AEBQEBN_K@Z PROC ; View<double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >::View<double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@QEAA@AEBQEBN_K@Z ENDP ; View<double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >::View<double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAA@AEBQEAN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$dead$ = 24
??0?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAA@AEBQEAN_K@Z PROC ; View<double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::View<double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 0
	ret	0
??0?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAA@AEBQEAN_K@Z ENDP ; View<double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::View<double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAA@AEBQEBN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$dead$ = 24
??0?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAA@AEBQEBN_K@Z PROC ; View<double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::View<double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 0
	ret	0
??0?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@QEAA@AEBQEBN_K@Z ENDP ; View<double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >::View<double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\initializer_list
;	COMDAT ??0?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAA@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0@Z
_TEXT	SEGMENT
this$ = 8
_First_arg$ = 16
_Last_arg$ = 24
??0?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAA@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0@Z PROC ; std::initializer_list<std::pair<std::vector<double,std::allocator<double> >,double> >::initializer_list<std::pair<std::vector<double,std::allocator<double> >,double> >, COMDAT

; 35   : 		: _First(_First_arg), _Last(_Last_arg)

	mov	QWORD PTR [rcx], rdx

; 37   : 		}

	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAA@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0@Z ENDP ; std::initializer_list<std::pair<std::vector<double,std::allocator<double> >,double> >::initializer_list<std::pair<std::vector<double,std::allocator<double> >,double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Unchecked_end@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked_end@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ PROC ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Unchecked_end, COMDAT

; 1755 : 		return (this->_Mylast());

	mov	rax, QWORD PTR [rcx+8]

; 1756 : 		}

	ret	0
?_Unchecked_end@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ENDP ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked_begin@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ PROC ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Unchecked_begin, COMDAT

; 1745 : 		return (this->_Myfirst());

	mov	rax, QWORD PTR [rcx]

; 1746 : 		}

	ret	0
?_Unchecked_begin@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ENDP ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::~vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >, COMDAT

; 920  : 		{	// destroy the object

$LN150:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2004 : 		if (this->_Myfirst() != pointer())

	mov	rbx, QWORD PTR [rcx]

; 920  : 		{	// destroy the object

	mov	rdi, rcx

; 2004 : 		if (this->_Myfirst() != pointer())

	test	rbx, rbx
	je	SHORT $LN4@vector

; 2005 : 			{	// destroy and deallocate old array
; 2006 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	QWORD PTR [rsp+48], rsi
	mov	rsi, QWORD PTR [rcx+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 1092 : 	for (; _First != _Last; ++_First)

	cmp	rbx, rsi
	je	SHORT $LN45@vector
$LL46@vector:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 921  : 		_Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 1092 : 	for (; _First != _Last; ++_First)

	add	rbx, 32					; 00000020H
	cmp	rbx, rsi
	jne	SHORT $LL46@vector
$LN45@vector:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1776 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rcx, QWORD PTR [rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	mov	rdx, 576460752303423487			; 07ffffffffffffffH
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1776 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rax, QWORD PTR [rdi+16]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	mov	rsi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1776 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	sub	rax, rcx
	sar	rax, 5
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	cmp	rax, rdx
	ja	SHORT $_Invalid_parameter$151

; 103  : 		{
; 104  : 		goto _Invalid_parameter; // TRANSITION, VSO#359498
; 105  : 		}
; 106  : 
; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	shl	rax, 5
	cmp	rax, 4096				; 00001000H
	jb	SHORT $LN103@vector

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	cl, 31
	jne	SHORT $_Invalid_parameter$151

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rcx-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rcx
	jae	SHORT $_Invalid_parameter$151
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $_Invalid_parameter$151

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, rax
$LN103@vector:

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	call	??3@YAXPEAX@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 2009 : 			this->_Myfirst() = pointer();

	xor	eax, eax
	mov	QWORD PTR [rdi], rax

; 2010 : 			this->_Mylast() = pointer();

	mov	QWORD PTR [rdi+8], rax

; 2011 : 			this->_Myend() = pointer();

	mov	QWORD PTR [rdi+16], rax
$LN4@vector:

; 922  : 		}

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$_Invalid_parameter$151:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN149@vector:
??1?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::~vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??0?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Ilist$ = 56
_Al$dead$ = 64
??0?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z PROC ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >, COMDAT

; 762  : 		{	// construct from initializer_list, optional allocator

$LN22:
	push	rbx
	sub	rsp, 32					; 00000020H

; 434  : 		: _Myfirst(),

	xor	eax, eax

; 762  : 		{	// construct from initializer_list, optional allocator

	mov	rbx, rcx

; 434  : 		: _Myfirst(),

	mov	QWORD PTR [rcx], rax

; 435  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 436  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax

; 763  : 		_Range_construct_or_tidy(_Ilist.begin(), _Ilist.end(), random_access_iterator_tag{});

	mov	r8, QWORD PTR [rdx+8]
	mov	rdx, QWORD PTR [rdx]
	call	??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Range_construct_or_tidy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>

; 764  : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z ENDP ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ??0?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAA@XZ PROC ; std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >, COMDAT

; 930  : 		{	// construct default allocator (do nothing)
; 931  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
;	COMDAT ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch, COMDAT

; 248  : 		return (_MyDur);

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 249  : 		}

	ret	0
?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count, COMDAT

; 126  : 		return (_MyRep);

	mov	rax, QWORD PTR [rcx]

; 127  : 		}

	ret	0
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??A?$vector@NV?$allocator@N@std@@@std@@QEAAAEAN_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$vector@NV?$allocator@N@std@@@std@@QEAAAEAN_K@Z PROC ; std::vector<double,std::allocator<double> >::operator[], COMDAT

; 1793 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1794 : 		if (size() <= _Pos)
; 1795 : 			{	// report error
; 1796 : 			_DEBUG_ERROR("vector subscript out of range");
; 1797 : 			}
; 1798 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1799 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1800 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1801 : 
; 1802 : 		return (this->_Myfirst()[_Pos]);

	mov	rax, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rax+rdx*8]

; 1803 : 		}

	ret	0
??A?$vector@NV?$allocator@N@std@@@std@@QEAAAEAN_K@Z ENDP ; std::vector<double,std::allocator<double> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?data@?$vector@NV?$allocator@N@std@@@std@@QEBAPEBNXZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@NV?$allocator@N@std@@@std@@QEBAPEBNXZ PROC ; std::vector<double,std::allocator<double> >::data, COMDAT

; 1675 : 		return (_Unfancy_maybe_null(this->_Myfirst()));

	mov	rax, QWORD PTR [rcx]

; 1676 : 		}

	ret	0
?data@?$vector@NV?$allocator@N@std@@@std@@QEBAPEBNXZ ENDP ; std::vector<double,std::allocator<double> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?data@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANXZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANXZ PROC ; std::vector<double,std::allocator<double> >::data, COMDAT

; 1670 : 		return (_Unfancy_maybe_null(this->_Myfirst()));

	mov	rax, QWORD PTR [rcx]

; 1671 : 		}

	ret	0
?data@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANXZ ENDP ; std::vector<double,std::allocator<double> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ PROC	; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >, COMDAT

; 921  : 		_Tidy();

	jmp	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ENDP	; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
_Al$dead$ = 64
??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z PROC ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >, COMDAT

; 695  : 		{	// construct from _Count * _Ty(), optional allocator

$LN54:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 32					; 00000020H

; 434  : 		: _Myfirst(),

	xor	eax, eax

; 695  : 		{	// construct from _Count * _Ty(), optional allocator

	mov	rbx, rdx

; 434  : 		: _Myfirst(),

	mov	QWORD PTR [rcx], rax

; 695  : 		{	// construct from _Count * _Ty(), optional allocator

	mov	rsi, rcx

; 435  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 436  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax

; 696  : 		if (_Buy(_Count))

	call	?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z ; std::vector<double,std::allocator<double> >::_Buy
	test	al, al
	je	SHORT $LN5@vector

; 699  : 			this->_Mylast() = _Udefault(this->_Myfirst(), _Count);

	mov	QWORD PTR [rsp+48], rdi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory

; 263  : 	return (_Zero_range(_First, _First + _Count));

	lea	rbx, QWORD PTR [rbx*8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 699  : 			this->_Mylast() = _Udefault(this->_Myfirst(), _Count);

	mov	rdi, QWORD PTR [rsi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory

; 233  : 	_CSTD memset(_First_ch, 0, _Last_ch - _First_ch);

	mov	r8, rbx
	mov	rcx, rdi
	xor	edx, edx
	call	memset

; 263  : 	return (_Zero_range(_First, _First + _Count));

	lea	rax, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 699  : 			this->_Mylast() = _Udefault(this->_Myfirst(), _Count);

	mov	rdi, QWORD PTR [rsp+48]
	mov	QWORD PTR [rsi+8], rax
$LN5@vector:

; 700  : 			_CATCH_ALL
; 701  : 			_Tidy();
; 702  : 			_RERAISE;
; 703  : 			_CATCH_END
; 704  : 			}
; 705  : 		}

	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
??0?$vector@NV?$allocator@N@std@@@std@@QEAA@_KAEBV?$allocator@N@1@@Z ENDP ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ??0?$allocator@N@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@N@std@@QEAA@XZ PROC			; std::allocator<double>::allocator<double>, COMDAT

; 930  : 		{	// construct default allocator (do nothing)
; 931  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@N@std@@QEAA@XZ ENDP			; std::allocator<double>::allocator<double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 141  : 			return (_Ok);

	movzx	eax, BYTE PTR [rcx+8]

; 142  : 			}

	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T3 = 32
this$ = 64
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 129  : 			{	// destroy the object

$LN13:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T3[rsp], -2
	mov	rbx, rcx

; 130  :  #if _HAS_EXCEPTIONS
; 131  : 			if (!_STD uncaught_exception())

	call	QWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	npad	1
	test	al, al
	jne	SHORT $LN2@sentry

; 132  : 				this->_Myostr._Osfx();

	mov	rcx, QWORD PTR [rbx]
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	npad	1
$LN2@sentry:

; 106  : 			if (_Myostr.rdbuf() != 0)

	mov	rdx, QWORD PTR [rbx]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios

; 91   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [rcx+rdx+72]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 106  : 			if (_Myostr.rdbuf() != 0)

	test	rcx, rcx
	je	SHORT $LN12@sentry

; 107  : 				_Myostr.rdbuf()->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN12@sentry:

; 133  : 
; 134  :  #else /* _HAS_EXCEPTIONS */
; 135  : 			this->_Myostr._Osfx();
; 136  :  #endif /* _HAS_EXCEPTIONS */
; 137  : 			}

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
$T8 = 32
this$ = 64
_Ostr$ = 72
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 122  : 			{	// construct locking and testing stream

$LN26:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T8[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	rbx, rdx
	mov	rdi, rcx

; 98   : 			: _Myostr(_Ostr)

	mov	QWORD PTR [rcx], rdx

; 100  : 			if (_Myostr.rdbuf() != 0)

	mov	rax, QWORD PTR [rdx]
	movsxd	r8, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios

; 91   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [r8+rdx+72]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 100  : 			if (_Myostr.rdbuf() != 0)

	test	rcx, rcx
	je	SHORT $LN6@sentry

; 101  : 				_Myostr.rdbuf()->_Lock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN6@sentry:

; 123  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase

; 338  : 		return (rdstate() == goodbit);

	cmp	DWORD PTR [rcx+rbx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 123  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

	jne	SHORT $LN2@sentry
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios

; 79   : 		return (_Tiestr);

	mov	rcx, QWORD PTR [rcx+rbx+80]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 123  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

	test	rcx, rcx
	je	SHORT $LN2@sentry
	cmp	rcx, rbx
	je	SHORT $LN2@sentry

; 124  : 				_Ostr.tie()->flush();

	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
$LN2@sentry:

; 125  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase

; 338  : 		return (rdstate() == goodbit);

	cmp	DWORD PTR [rcx+rbx+16], 0
	sete	al
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 125  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	mov	BYTE PTR [rdi+8], al

; 126  : 			}

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 1576 : 		_Mysize(0),

	xor	eax, eax
	mov	QWORD PTR [rcx+16], rax

; 1577 : 		_Myres(0)

	mov	QWORD PTR [rcx+24], rax

; 1579 : 		}

	mov	rax, rcx
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 3725 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 3726 : 		_Xlength_error("string too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlen:
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Requested$ = 16
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 3070 : 		return (_Min_value(

	mov	r9, 9223372036854775807			; 7fffffffffffffffH

; 3589 : 		const size_type _Max = max_size();
; 3590 : 		auto& _My_data = this->_Get_data();
; 3591 : 		const size_type _Masked = _Requested | this->_ALLOC_MASK;

	or	rdx, 15

; 3592 : 		if (_Masked > _Max)
; 3593 : 			{	// the mask overflows, settle for max_size()
; 3594 : 			return (_Max);

	mov	rax, r9
	cmp	rdx, r9
	ja	SHORT $LN1@Calculate_

; 3595 : 			}
; 3596 : 
; 3597 : 		const size_type _Old = _My_data._Myres;

	mov	r8, QWORD PTR [rcx+24]

; 3598 : 		if (_Old > _Max - _Old / 2)

	mov	rcx, r8
	shr	rcx, 1
	sub	rax, rcx
	cmp	r8, rax
	jbe	SHORT $LN3@Calculate_

; 3599 : 			{	// similarly, geometric overflows
; 3600 : 			return (_Max);

	mov	rax, r9

; 3604 : 		}

	ret	0
$LN3@Calculate_:

; 3603 : 		return (_Max_value(_Masked, _Old + _Old / 2));

	lea	rax, QWORD PTR [rcx+r8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\utility

; 32   : 	return (_Left < _Right ? _Right : _Left);

	cmp	rdx, rax
	cmovb	rdx, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 3603 : 		return (_Max_value(_Masked, _Old + _Old / 2));

	mov	rax, rdx
$LN1@Calculate_:

; 3604 : 		}

	ret	0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 930  : 		{	// construct default allocator (do nothing)
; 931  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\initializer_list
;	COMDAT ?end@?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?end@?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ PROC ; std::initializer_list<std::pair<std::vector<double,std::allocator<double> >,double> >::end, COMDAT

; 46   : 		return (_Last);

	mov	rax, QWORD PTR [rcx+8]

; 47   : 		}

	ret	0
?end@?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ENDP ; std::initializer_list<std::pair<std::vector<double,std::allocator<double> >,double> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\initializer_list
;	COMDAT ?begin@?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?begin@?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ PROC ; std::initializer_list<std::pair<std::vector<double,std::allocator<double> >,double> >::begin, COMDAT

; 41   : 		return (_First);

	mov	rax, QWORD PTR [rcx]

; 42   : 		}

	ret	0
?begin@?$initializer_list@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEBAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ENDP ; std::initializer_list<std::pair<std::vector<double,std::allocator<double> >,double> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Mylast, COMDAT

; 625  : 		return (_Get_data()._Mylast);

	lea	rax, QWORD PTR [rcx+8]

; 626  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Myfirst, COMDAT

; 615  : 		return (_Get_data()._Myfirst);

	mov	rax, rcx

; 616  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Tidy, COMDAT

; 2001 : 		{	// free all storage

$LN147:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2002 : 		this->_Orphan_all();
; 2003 : 
; 2004 : 		if (this->_Myfirst() != pointer())

	mov	rbx, QWORD PTR [rcx]
	mov	rdi, rcx
	test	rbx, rbx
	je	SHORT $LN2@Tidy

; 2005 : 			{	// destroy and deallocate old array
; 2006 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	QWORD PTR [rsp+48], rsi
	mov	rsi, QWORD PTR [rcx+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 1092 : 	for (; _First != _Last; ++_First)

	cmp	rbx, rsi
	je	SHORT $LN43@Tidy
$LL44@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 921  : 		_Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 1092 : 	for (; _First != _Last; ++_First)

	add	rbx, 32					; 00000020H
	cmp	rbx, rsi
	jne	SHORT $LL44@Tidy
$LN43@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1776 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rcx, QWORD PTR [rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	mov	rdx, 576460752303423487			; 07ffffffffffffffH
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1776 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rax, QWORD PTR [rdi+16]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	mov	rsi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1776 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	sub	rax, rcx
	sar	rax, 5
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	cmp	rax, rdx
	ja	SHORT $_Invalid_parameter$148

; 103  : 		{
; 104  : 		goto _Invalid_parameter; // TRANSITION, VSO#359498
; 105  : 		}
; 106  : 
; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	shl	rax, 5
	cmp	rax, 4096				; 00001000H
	jb	SHORT $LN101@Tidy

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	cl, 31
	jne	SHORT $_Invalid_parameter$148

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rcx-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rcx
	jae	SHORT $_Invalid_parameter$148
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $_Invalid_parameter$148

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, rax
$LN101@Tidy:

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	call	??3@YAXPEAX@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 2009 : 			this->_Myfirst() = pointer();

	xor	eax, eax
	mov	QWORD PTR [rdi], rax

; 2010 : 			this->_Mylast() = pointer();

	mov	QWORD PTR [rdi+8], rax

; 2011 : 			this->_Myend() = pointer();

	mov	QWORD PTR [rdi+16], rax
$LN2@Tidy:

; 2013 : 		}

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$_Invalid_parameter$148:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN146@Tidy:
?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAPEANXZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAPEANXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Mylast, COMDAT

; 620  : 		return (_Get_data()._Mylast);

	lea	rax, QWORD PTR [rcx+8]

; 621  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAPEANXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBQEANXZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBQEANXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Myfirst, COMDAT

; 615  : 		return (_Get_data()._Myfirst);

	mov	rax, rcx

; 616  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBQEANXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAPEANXZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAPEANXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Myfirst, COMDAT

; 610  : 		return (_Get_data()._Myfirst);

	mov	rax, rcx

; 611  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAPEANXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ PROC	; std::vector<double,std::allocator<double> >::_Tidy, COMDAT

; 2001 : 		{	// free all storage

$LN114:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2002 : 		this->_Orphan_all();
; 2003 : 
; 2004 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 1776 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rax, QWORD PTR [rbx+16]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	mov	rdx, 2305843009213693951		; 1fffffffffffffffH
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1776 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	sub	rax, rcx
	sar	rax, 3
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	cmp	rax, rdx
	ja	SHORT $_Invalid_parameter$115

; 103  : 		{
; 104  : 		goto _Invalid_parameter; // TRANSITION, VSO#359498
; 105  : 		}
; 106  : 
; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	lea	rax, QWORD PTR [rax*8]
	cmp	rax, 4096				; 00001000H
	jb	SHORT $LN72@Tidy

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	cl, 31
	jne	SHORT $_Invalid_parameter$115

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rcx-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rcx
	jae	SHORT $_Invalid_parameter$115
	sub	rcx, rax
	sub	rcx, 8
	cmp	rcx, 31
	ja	SHORT $_Invalid_parameter$115

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rcx, rax
$LN72@Tidy:

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	call	??3@YAXPEAX@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 2009 : 			this->_Myfirst() = pointer();

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2010 : 			this->_Mylast() = pointer();

	mov	QWORD PTR [rbx+8], rax

; 2011 : 			this->_Myend() = pointer();

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2013 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$_Invalid_parameter$115:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN113@Tidy:
?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ENDP	; std::vector<double,std::allocator<double> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z PROC ; std::vector<double,std::allocator<double> >::_Buy, COMDAT

; 1963 : 		{	// allocate array with _Newcapacity elements

$LN117:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1964 : 		this->_Myfirst() = pointer();

	xor	eax, eax
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax

; 1965 : 		this->_Mylast() = pointer();

	mov	QWORD PTR [rcx+8], rax

; 1966 : 		this->_Myend() = pointer();

	mov	QWORD PTR [rcx+16], rax

; 1967 : 
; 1968 : 		if (_Newcapacity == 0)

	test	rdx, rdx
	je	SHORT $LN1@Buy

; 1969 : 			{
; 1970 : 			return (false);
; 1971 : 			}
; 1972 : 
; 1973 : 		if (_Newcapacity > max_size())

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	rdx, rax
	ja	SHORT $LN115@Buy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 63   : 	const size_t _User_size = _Count * _Sz;

	mov	QWORD PTR [rsp+48], rdi
	lea	rdi, QWORD PTR [rdx*8]

; 64   : 
; 65   : #if defined(_M_IX86) || defined(_M_X64)
; 66   : 	if (_Try_aligned_allocation
; 67   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	rdi, 4096				; 00001000H
	jb	SHORT $LN61@Buy

; 68   : 		{	// allocate large block
; 69   : 		static_assert(sizeof(void *) < _BIG_ALLOCATION_ALIGNMENT,
; 70   : 			"Big allocations should at least match vector register size");
; 71   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	rcx, QWORD PTR [rdi+39]

; 72   : 		if (_Block_size <= _User_size)

	cmp	rcx, rdi
	ja	SHORT $LN62@Buy

; 73   : 			{
; 74   : 			_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN62@Buy:

; 75   : 			}
; 76   : 
; 77   : 		const uintptr_t _Ptr_container =
; 78   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	call	??2@YAPEAX_K@Z				; operator new

; 79   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 80   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	rcx, QWORD PTR [rax+39]
	and	rcx, -32				; ffffffffffffffe0H

; 81   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 82   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rcx-8], rax

; 83   : 
; 84   :  #ifdef _DEBUG
; 85   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 86   :  #endif /* _DEBUG */
; 87   :  		return (_Ptr);

	jmp	SHORT $LN58@Buy
$LN61@Buy:

; 88   : 		}
; 89   : #else /* ^^^ x86/x64 hardware ^^^ // vvv ARM hardware vvv */
; 90   : 	(void)_Try_aligned_allocation;
; 91   : #endif /* defined(_M_IX86) || defined(_M_X64) */
; 92   : 
; 93   : 	_Ptr = ::operator new(_User_size);

	mov	rcx, rdi
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax
$LN58@Buy:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1978 : 		this->_Myfirst() = this->_Getal().allocate(_Newcapacity);

	mov	QWORD PTR [rbx], rcx

; 1979 : 		this->_Mylast() = this->_Myfirst();

	mov	QWORD PTR [rbx+8], rcx

; 1980 : 		this->_Myend() = this->_Myfirst() + _Newcapacity;

	mov	rax, QWORD PTR [rbx]
	lea	rcx, QWORD PTR [rdi+rax]
	mov	rdi, QWORD PTR [rsp+48]
	mov	QWORD PTR [rbx+16], rcx

; 1981 : 
; 1982 : 		return (true);

	mov	al, 1
$LN1@Buy:

; 1983 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN115@Buy:

; 1974 : 			{
; 1975 : 			_Xlength();

	call	?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ ; std::vector<double,std::allocator<double> >::_Xlength
	int	3
$LN114@Buy:
?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z ENDP ; std::vector<double,std::allocator<double> >::_Buy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Udefault@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Dest$ = 56
_Count$ = 64
?_Udefault@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN_K@Z PROC ; std::vector<double,std::allocator<double> >::_Udefault, COMDAT

; 1902 : 		{	// fill raw _Dest with _Count value-initialized objects, using allocator

$LN16:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory

; 263  : 	return (_Zero_range(_First, _First + _Count));

	lea	rbx, QWORD PTR [r8*8]

; 233  : 	_CSTD memset(_First_ch, 0, _Last_ch - _First_ch);

	mov	r8, rbx
	mov	rcx, rdi
	xor	edx, edx
	call	memset

; 263  : 	return (_Zero_range(_First, _First + _Count));

	lea	rax, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1904 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Udefault@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN_K@Z ENDP ; std::vector<double,std::allocator<double> >::_Udefault
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T3 = 32
this$ = 64
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 105  : 			{	// destroy after unlocking

$LN8:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T3[rsp], -2

; 106  : 			if (_Myostr.rdbuf() != 0)

	mov	rdx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+rdx+72]
	test	rcx, rcx
	je	SHORT $LN2@Sentry_bas

; 107  : 				_Myostr.rdbuf()->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN2@Sentry_bas:

; 108  : 			}

	add	rsp, 56					; 00000038H
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 99   : 			{	// lock the stream buffer, if there

$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H

; 98   : 			: _Myostr(_Ostr)

	mov	QWORD PTR [rcx], rdx

; 99   : 			{	// lock the stream buffer, if there

	mov	rbx, rcx

; 100  : 			if (_Myostr.rdbuf() != 0)

	mov	rax, QWORD PTR [rdx]
	movsxd	r8, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [r8+rdx+72]
	test	rcx, rcx
	je	SHORT $LN8@Sentry_bas

; 101  : 				_Myostr.rdbuf()->_Lock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN8@Sentry_bas:

; 102  : 			}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 1649 : 			{	// user-provided, for fancy pointers
; 1650 : 			}

	mov	rax, rcx
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Myend, COMDAT

; 630  : 		return (_Get_data()._Myend);

	lea	rax, QWORD PTR [rcx+16]

; 631  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Mylast, COMDAT

; 620  : 		return (_Get_data()._Mylast);

	lea	rax, QWORD PTR [rcx+8]

; 621  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Myfirst, COMDAT

; 610  : 		return (_Get_data()._Myfirst);

	mov	rax, rcx

; 611  : 		}

	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Get_data, COMDAT

; 605  : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 606  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Getal, COMDAT

; 590  : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 591  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Orphan_all, COMDAT

; 580  : 		_Get_data()._Orphan_all();
; 581  : 		}

	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Destroy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@0@Z
_TEXT	SEGMENT
this$dead$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@0@Z PROC ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Destroy, COMDAT

; 1939 : 		{	// destroy [_First, _Last) using allocator

$LN36:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 1092 : 	for (; _First != _Last; ++_First)

	cmp	rdx, r8
	je	SHORT $LN34@Destroy
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1939 : 		{	// destroy [_First, _Last) using allocator

	mov	rdi, r8
	mov	rbx, rdx
$LL14@Destroy:

; 921  : 		_Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 1092 : 	for (; _First != _Last; ++_First)

	add	rbx, 32					; 00000020H
	cmp	rbx, rdi
	jne	SHORT $LL14@Destroy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1941 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN34@Destroy:
	ret	0
?_Destroy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@0@Z ENDP ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?capacity@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::capacity, COMDAT

; 1776 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 5

; 1777 : 		}

	ret	0
?capacity@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAXQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAXQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z PROC ; std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >::deallocate, COMDAT

; 940  : 		{	// deallocate object at _Ptr

$LN20:
	sub	rsp, 40					; 00000028H

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	mov	rax, 576460752303423487			; 07ffffffffffffffH
	cmp	r8, rax
	ja	SHORT $_Invalid_parameter$21

; 103  : 		{
; 104  : 		goto _Invalid_parameter; // TRANSITION, VSO#359498
; 105  : 		}
; 106  : 
; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	shl	r8, 5
	cmp	r8, 4096				; 00001000H
	jb	SHORT $LN6@deallocate

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	dl, 31
	jne	SHORT $_Invalid_parameter$21

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rdx-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rdx
	jae	SHORT $_Invalid_parameter$21
	sub	rdx, rax
	sub	rdx, 8
	cmp	rdx, 31
	ja	SHORT $_Invalid_parameter$21

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rdx, rax
$LN6@deallocate:

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	mov	rcx, rdx

; 941  : 		_Deallocate(_Ptr, _Count, sizeof(_Ty));
; 942  : 		}

	add	rsp, 40					; 00000028H

; 151  : 	::operator delete(_Ptr);

	jmp	??3@YAXPEAX@Z				; operator delete
$_Invalid_parameter$21:

; 152  : 	return;
; 153  : 
; 154  : _Invalid_parameter:
; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN19@deallocate:
?deallocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAXQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z ENDP ; std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAPEANXZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAPEANXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Myend, COMDAT

; 630  : 		return (_Get_data()._Myend);

	lea	rax, QWORD PTR [rcx+16]

; 631  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAPEANXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Get_data, COMDAT

; 605  : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 606  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Get_data, COMDAT

; 600  : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 601  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAV?$allocator@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAV?$allocator@N@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Getal, COMDAT

; 590  : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 591  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAAEAV?$allocator@N@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Orphan_all, COMDAT

; 580  : 		_Get_data()._Orphan_all();
; 581  : 		}

	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ PROC ; std::vector<double,std::allocator<double> >::_Xlength, COMDAT

; 2016 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 2017 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ ENDP ; std::vector<double,std::allocator<double> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z
_TEXT	SEGMENT
this$dead$ = 8
_First$dead$ = 16
_Last$dead$ = 24
?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z PROC ; std::vector<double,std::allocator<double> >::_Destroy, COMDAT

; 1940 : 		_Destroy_range(_First, _Last, this->_Getal());
; 1941 : 		}

	ret	0
?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z ENDP ; std::vector<double,std::allocator<double> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?capacity@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ PROC ; std::vector<double,std::allocator<double> >::capacity, COMDAT

; 1776 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 1777 : 		}

	ret	0
?capacity@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ENDP ; std::vector<double,std::allocator<double> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ PROC ; std::vector<double,std::allocator<double> >::max_size, COMDAT

; 1770 : 		return (_Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 1771 : 			_Alty_traits::max_size(this->_Getal())));
; 1772 : 		}

	ret	0
?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ENDP ; std::vector<double,std::allocator<double> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ?allocate@?$allocator@N@std@@QEAAPEAN_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@N@std@@QEAAPEAN_K@Z PROC		; std::allocator<double>::allocate, COMDAT

; 945  : 		{	// allocate array of _Count elements

$LN14:
	sub	rsp, 40					; 00000028H

; 52   : 	if (_Count == 0)

	test	rdx, rdx
	jne	SHORT $LN4@allocate

; 53   : 		{
; 54   : 		return (_Ptr);

	xor	ecx, ecx

; 946  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof(_Ty))));

	mov	eax, ecx

; 947  : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN4@allocate:

; 58   : 	if (static_cast<size_t>(-1) / _Sz < _Count)

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	rdx, rax
	jbe	SHORT $LN5@allocate

; 59   : 		{
; 60   : 		_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN5@allocate:

; 61   : 		}
; 62   : 
; 63   : 	const size_t _User_size = _Count * _Sz;

	lea	rcx, QWORD PTR [rdx*8]

; 64   : 
; 65   : #if defined(_M_IX86) || defined(_M_X64)
; 66   : 	if (_Try_aligned_allocation
; 67   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 68   : 		{	// allocate large block
; 69   : 		static_assert(sizeof(void *) < _BIG_ALLOCATION_ALIGNMENT,
; 70   : 			"Big allocations should at least match vector register size");
; 71   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	rax, QWORD PTR [rcx+39]

; 72   : 		if (_Block_size <= _User_size)

	cmp	rax, rcx
	ja	SHORT $LN7@allocate

; 73   : 			{
; 74   : 			_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN7@allocate:

; 75   : 			}
; 76   : 
; 77   : 		const uintptr_t _Ptr_container =
; 78   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new

; 79   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 80   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	rcx, QWORD PTR [rax+39]
	and	rcx, -32				; ffffffffffffffe0H

; 81   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 82   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rcx-8], rax

; 946  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof(_Ty))));

	mov	rax, rcx

; 947  : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN6@allocate:

; 93   : 	_Ptr = ::operator new(_User_size);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 947  : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN13@allocate:
?allocate@?$allocator@N@std@@QEAAPEAN_K@Z ENDP		; std::allocator<double>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z PROC	; std::allocator<double>::deallocate, COMDAT

; 940  : 		{	// deallocate object at _Ptr

$LN20:
	sub	rsp, 40					; 00000028H

; 102  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	r8, rax
	ja	SHORT $_Invalid_parameter$21

; 103  : 		{
; 104  : 		goto _Invalid_parameter; // TRANSITION, VSO#359498
; 105  : 		}
; 106  : 
; 107  : 	if (_BIG_ALLOCATION_THRESHOLD <= _Count * _Sz)

	lea	rax, QWORD PTR [r8*8]
	cmp	rax, 4096				; 00001000H
	jb	SHORT $LN6@deallocate

; 108  : 		{	// deallocate large block
; 109  : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 110  : 		if ((_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) != 0)

	test	dl, 31
	jne	SHORT $_Invalid_parameter$21

; 111  : 			{
; 112  : 			goto _Invalid_parameter;
; 113  : 			}
; 114  : 
; 115  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 116  : 		const uintptr_t _Ptr_container =
; 117  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR [rdx-8]

; 118  : 
; 119  :  #ifdef _DEBUG
; 120  : 		// If the following asserts, it likely means that we are performing
; 121  : 		// an aligned delete on memory coming from an unaligned allocation.
; 122  : 		if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _BIG_ALLOCATION_SENTINEL)
; 123  : 			{
; 124  : 			goto _Invalid_parameter;
; 125  : 			}
; 126  :  #endif /* _DEBUG */
; 127  : 
; 128  : 		// Extra paranoia on aligned allocation/deallocation
; 129  : 		if (_Ptr_container >= _Ptr_user)

	cmp	rax, rdx
	jae	SHORT $_Invalid_parameter$21
	sub	rdx, rax
	sub	rdx, 8
	cmp	rdx, 31
	ja	SHORT $_Invalid_parameter$21

; 130  : 			{
; 131  : 			goto _Invalid_parameter;
; 132  : 			}
; 133  : 
; 134  :  #ifdef _DEBUG
; 135  : 		if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)
; 136  :  #else /* _DEBUG */
; 137  : 		if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 138  :  #endif /* _DEBUG */
; 139  : 			{
; 140  : 			goto _Invalid_parameter;
; 141  : 			}
; 142  : 
; 143  : 		if (_Ptr_user - _Ptr_container > _NON_USER_SIZE)
; 144  : 			{
; 145  : 			goto _Invalid_parameter;
; 146  : 			}
; 147  : 
; 148  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rdx, rax
$LN6@deallocate:

; 149  : 		}
; 150  : 
; 151  : 	::operator delete(_Ptr);

	mov	rcx, rdx

; 941  : 		_Deallocate(_Ptr, _Count, sizeof(_Ty));
; 942  : 		}

	add	rsp, 40					; 00000028H

; 151  : 	::operator delete(_Ptr);

	jmp	??3@YAXPEAX@Z				; operator delete
$_Invalid_parameter$21:

; 152  : 	return;
; 153  : 
; 154  : _Invalid_parameter:
; 155  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN19@deallocate:
?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z ENDP	; std::allocator<double>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Get_second, COMDAT

; 343  : 		return (_Myval2);

	mov	rax, rcx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Get_first, COMDAT

; 318  : 		return (*this);

	mov	rax, rcx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Myend, COMDAT

; 635  : 		return (_Get_data()._Myend);

	lea	rax, QWORD PTR [rcx+16]

; 636  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBQEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Get_data, COMDAT

; 600  : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 601  : 		}

	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_second, COMDAT

; 343  : 		return (_Myval2);

	mov	rax, rcx

; 344  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_second, COMDAT

; 338  : 		return (_Myval2);

	mov	rax, rcx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@N@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ PROC ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first, COMDAT

; 318  : 		return (*this);

	mov	rax, rcx

; 319  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ ENDP ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA_KAEBV?$allocator@N@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA_KAEBV?$allocator@N@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<double> >::max_size, COMDAT

; 867  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 868  : 		}

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA_KAEBV?$allocator@N@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<double> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBQEANXZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBQEANXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Myend, COMDAT

; 635  : 		return (_Get_data()._Myend);

	lea	rax, QWORD PTR [rcx+16]

; 636  : 		}

	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBQEANXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBV?$allocator@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBV?$allocator@N@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Getal, COMDAT

; 595  : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 596  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBV?$allocator@N@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Get_second, COMDAT

; 338  : 		return (_Myval2);

	mov	rax, rcx

; 339  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$allocator@N@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$allocator@N@2@XZ PROC ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first, COMDAT

; 323  : 		return (*this);

	mov	rax, rcx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$allocator@N@2@XZ ENDP ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
;	COMDAT ??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 709  : 	return (_Left.time_since_epoch() < _Right.time_since_epoch());

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	setl	al

; 710  : 	}

	ret	0
??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
;	COMDAT ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Left$ = 16
_Right$ = 24
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z PROC ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >, COMDAT

; 334  : 	using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 335  : 	return (_CD(_CD(_Left).count() - _CD(_Right).count()));

	mov	rax, QWORD PTR [rdx]
	sub	rax, QWORD PTR [r8]

; 110  : 			: _MyRep(static_cast<_Rep>(_Val))

	mov	QWORD PTR [rcx], rax

; 334  : 	using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 335  : 	return (_CD(_CD(_Left).count() - _CD(_Right).count()));

	mov	rax, rcx

; 336  : 	}

	ret	0
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ENDP ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>, COMDAT

; 110  : 			: _MyRep(static_cast<_Rep>(_Val))

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax

; 112  : 		}

	mov	rax, rcx
	ret	0
??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\string
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstddef
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\string
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
_Ostr$ = 8
_Str$ = 16
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring

; 1617 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rdx+24], 16

; 3062 : 		return (this->_Get_data()._Mysize);

	mov	r8, QWORD PTR [rdx+16]

; 1607 : 		if (_Large_string_engaged())

	jb	SHORT $LN22@operator
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstddef

; 265  : 	return (_Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN22@operator:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\string

; 169  : 	return (_Insert_string(_Ostr, _Str.data(), _Str.size()));

	jmp	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\utility
;	COMDAT ??$make_pair@AEAV?$vector@NV?$allocator@N@std@@@std@@N@std@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEAV?$vector@NV?$allocator@N@std@@@0@$$QEAN@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Val1$ = 56
_Val2$ = 64
??$make_pair@AEAV?$vector@NV?$allocator@N@std@@@std@@N@std@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEAV?$vector@NV?$allocator@N@std@@@0@$$QEAN@Z PROC ; std::make_pair<std::vector<double,std::allocator<double> > & __ptr64,double>, COMDAT

; 338  : 	{	// return pair composed from arguments

$LN21:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	rdi, rcx

; 186  : 		: first(_STD forward<_Other1>(_Val1)),

	call	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >

; 187  : 				second(_STD forward<_Other2>(_Val2))

	mov	rax, QWORD PTR [rbx]

; 341  : 	}

	mov	rbx, QWORD PTR [rsp+48]

; 187  : 				second(_STD forward<_Other2>(_Val2))

	mov	QWORD PTR [rdi+24], rax

; 339  : 	using _Mypair = pair<typename _Unrefwrap<_Ty1>::type, typename _Unrefwrap<_Ty2>::type>;
; 340  : 	return (_Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2)));

	mov	rax, rdi

; 341  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$make_pair@AEAV?$vector@NV?$allocator@N@std@@@std@@N@std@@YA?AU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEAV?$vector@NV?$allocator@N@std@@@0@$$QEAN@Z ENDP ; std::make_pair<std::vector<double,std::allocator<double> > & __ptr64,double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
;	COMDAT ??$map@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@@Z
_TEXT	SEGMENT
$T1 = 48
$T9 = 64
$T11 = 80
$T14 = 96
$T15 = 112
$T16 = 128
$T17 = 144
$T2 = 160
result$ = 224
f$ = 232
v$ = 240
??$map@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@@Z PROC ; hof::map<<lambda_d96185b9da9a7d2086bd47349d2635dc>,double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >,double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >, COMDAT

; 7    :     void map(View<PB, B, DB> result, F f, View<PA, A, DA> v) {

	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 176				; 000000b0H
	mov	r12, rdx
	mov	r13, r8
	mov	rdx, rcx

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	xor	edi, edi
	npad	1
$LL4@map:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [r13]
	mov	esi, 32					; 00000020H

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rcx, QWORD PTR [r13+8]
	mov	rbx, QWORD PTR [rdx+8]
	add	rcx, rdi
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 176  :                         br, bc); },

	mov	rbp, QWORD PTR [r12]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rbx, rdi
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 176  :                         br, bc); },

	mov	r15, QWORD PTR [r12+8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T1[rsp], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 164  :         map(result, [&](auto result, auto bc) {

	mov	rax, QWORD PTR [r12+16]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	QWORD PTR $T1[rsp+8], rcx
; File d:\documents\dev\lambdagen\view\view\hof.h

; 10   :             f(result[i], v[i]);

	movaps	xmm1, XMMWORD PTR $T1[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rcx, QWORD PTR [rdx]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 10   :             f(result[i], v[i]);

	movaps	XMMWORD PTR $T2[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 164  :         map(result, [&](auto result, auto bc) {

	movups	xmm0, XMMWORD PTR [rax]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T11[rsp], rcx
	movq	QWORD PTR $T9[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	psrldq	xmm0, 8
	movq	r14, xmm0
	sub	r14, rbx
	npad	6
$LL21@map:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	lea	rax, QWORD PTR [r14+rbx]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 165  :             rnz(result, vD,

	movdqa	XMMWORD PTR $T15[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T9[rsp+8], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 165  :             rnz(result, vD,

	lea	rdx, QWORD PTR $T16[rsp]
	movaps	xmm0, XMMWORD PTR $T9[rsp]
	lea	rax, QWORD PTR $T14[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rcx, QWORD PTR $T17[rsp]
	movdqa	XMMWORD PTR $T14[rsp], xmm0
	lea	rax, QWORD PTR $T15[rsp]
	movups	xmm0, XMMWORD PTR [rbp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T11[rsp+8], rbx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 165  :             rnz(result, vD,

	mov	r9, r15
	movaps	xmm1, XMMWORD PTR $T11[rsp]
	movaps	XMMWORD PTR $T16[rsp], xmm0
	movdqa	XMMWORD PTR $T17[rsp], xmm1
	mov	QWORD PTR [rsp+32], rax
	call	??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >,<lambda_82709c2af490acbaaecbe567606e69e8>,<lambda_7ef7f5917424a38ce3010ad89fbaf103>,double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	add	rbx, 16
	sub	rsi, 1
	je	SHORT $LN46@map
	movaps	xmm1, XMMWORD PTR $T2[rsp]
	jmp	SHORT $LL21@map
$LN46@map:
	mov	rdx, QWORD PTR result$[rsp]
	add	rdi, 8192				; 00002000H
	cmp	rdi, 262144				; 00040000H
	jb	$LL4@map

; 11   :         }
; 12   :     }

	lea	r11, QWORD PTR [rsp+176]
	mov	rbx, QWORD PTR [r11+56]
	mov	rbp, QWORD PTR [r11+64]
	mov	rsi, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
??$map@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@V<lambda_d96185b9da9a7d2086bd47349d2635dc>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@@@Z ENDP ; hof::map<<lambda_d96185b9da9a7d2086bd47349d2635dc>,double const * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >,double * __ptr64,double,List<P<32,8192>,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$?RV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@<lambda_d96185b9da9a7d2086bd47349d2635dc>@@QEBAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@Z
_TEXT	SEGMENT
$T5 = 48
$T7 = 64
$T10 = 80
$T11 = 96
$T12 = 112
$T13 = 128
this$ = 176
result$ = 184
br$ = 192
??$?RV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@<lambda_d96185b9da9a7d2086bd47349d2635dc>@@QEBAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@Z PROC ; <lambda_d96185b9da9a7d2086bd47349d2635dc>::operator()<View<double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >,View<double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >, COMDAT

; 163  :     map(vC, [&](auto result, auto br) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 144				; 00000090H

; 164  :         map(result, [&](auto result, auto bc) {

	movups	xmm0, XMMWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx+16]
	mov	rbp, r8

; 176  :                         br, bc); },

	mov	r14, QWORD PTR [rcx]

; 164  :         map(result, [&](auto result, auto bc) {

	mov	edi, 32					; 00000020H

; 176  :                         br, bc); },

	mov	r15, QWORD PTR [rcx+8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T7[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 164  :         map(result, [&](auto result, auto bc) {

	movups	xmm1, XMMWORD PTR [rax]
	psrldq	xmm0, 8
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T5[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 164  :         map(result, [&](auto result, auto bc) {

	movq	rbx, xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	psrldq	xmm1, 8
	movq	rsi, xmm1
	sub	rsi, rbx
	npad	9
$LL8@operator:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	lea	rax, QWORD PTR [rsi+rbx]
	mov	QWORD PTR $T7[rsp+8], rbx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 165  :             rnz(result, vD,

	movaps	xmm1, XMMWORD PTR $T7[rsp]
	lea	rdx, QWORD PTR $T12[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T5[rsp+8], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 165  :             rnz(result, vD,

	lea	rcx, QWORD PTR $T13[rsp]
	movaps	xmm0, XMMWORD PTR $T5[rsp]
	lea	rax, QWORD PTR $T10[rsp]
	movdqa	XMMWORD PTR $T10[rsp], xmm0
	mov	r9, r15
	movups	xmm0, XMMWORD PTR [rbp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR $T11[rsp]
	movdqa	XMMWORD PTR $T13[rsp], xmm1
	movaps	XMMWORD PTR $T11[rsp], xmm0
	movups	xmm0, XMMWORD PTR [r14]
	mov	QWORD PTR [rsp+32], rax
	movaps	XMMWORD PTR $T12[rsp], xmm0
	call	??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >,<lambda_82709c2af490acbaaecbe567606e69e8>,<lambda_7ef7f5917424a38ce3010ad89fbaf103>,double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	add	rbx, 16
	sub	rdi, 1
	jne	SHORT $LL8@operator
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 177  :             vB); },

	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
	ret	0
??$?RV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@<lambda_d96185b9da9a7d2086bd47349d2635dc>@@QEBAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@Z ENDP ; <lambda_d96185b9da9a7d2086bd47349d2635dc>::operator()<View<double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >,View<double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??0<lambda_7e04991c64d89450a9afdec7af8092d1>@@QEAA@AEAV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@Z
_TEXT	SEGMENT
this$ = 8
<vD>$ = 16
<tmp>$ = 24
<br>$ = 32
??0<lambda_7e04991c64d89450a9afdec7af8092d1>@@QEAA@AEAV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@Z PROC ; <lambda_7e04991c64d89450a9afdec7af8092d1>::<lambda_7e04991c64d89450a9afdec7af8092d1>, COMDAT

; 176  :                         br, bc); },

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	mov	QWORD PTR [rcx+16], r9
	ret	0
??0<lambda_7e04991c64d89450a9afdec7af8092d1>@@QEAA@AEAV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@@Z ENDP ; <lambda_7e04991c64d89450a9afdec7af8092d1>::<lambda_7e04991c64d89450a9afdec7af8092d1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * __ptr64 const & __ptr64>, COMDAT

; 1592 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1593 : 	}

	ret	0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * __ptr64 const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??$?0AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$dead$ = 16
??$?0AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > ><std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > const & __ptr64,void>, COMDAT

; 434  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 435  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 436  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax

; 476  : 		}

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > ><std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > const & __ptr64,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
this$GSCopy$ = 48
$T50 = 56
this$ = 96
_First$ = 104
_Last$ = 112
__formal$dead$ = 120
??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z PROC ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Range_construct_or_tidy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>, COMDAT

; 738  : 		{	// initialize with [_First, _Last), avoid leaking, forward iterators

$LN171:
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR $T50[rsp], -2
	mov	QWORD PTR [rsp+120], rbx
	mov	r14, r8
	mov	rsi, rdx
	mov	rdi, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility

; 1100 : 	return (_Last - _First);

	mov	rbx, r8
	sub	rbx, rdx
	sar	rbx, 5
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1964 : 		this->_Myfirst() = pointer();

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 1965 : 		this->_Mylast() = pointer();

	mov	QWORD PTR [rcx+8], rax

; 1966 : 		this->_Myend() = pointer();

	mov	QWORD PTR [rcx+16], rax

; 1967 : 
; 1968 : 		if (_Newcapacity == 0)

	test	rbx, rbx
	je	SHORT $LN7@Range_cons

; 1969 : 			{
; 1970 : 			return (false);
; 1971 : 			}
; 1972 : 
; 1973 : 		if (_Newcapacity > max_size())

	mov	rax, 576460752303423487			; 07ffffffffffffffH
	cmp	rbx, rax
	jbe	SHORT $LN74@Range_cons

; 1974 : 			{
; 1975 : 			_Xlength();

	call	?_Xlength@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@CAXXZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Xlength
	int	3
$LN74@Range_cons:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 63   : 	const size_t _User_size = _Count * _Sz;

	shl	rbx, 5

; 64   : 
; 65   : #if defined(_M_IX86) || defined(_M_X64)
; 66   : 	if (_Try_aligned_allocation
; 67   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	rbx, 4096				; 00001000H
	jb	SHORT $LN75@Range_cons

; 68   : 		{	// allocate large block
; 69   : 		static_assert(sizeof(void *) < _BIG_ALLOCATION_ALIGNMENT,
; 70   : 			"Big allocations should at least match vector register size");
; 71   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	rcx, QWORD PTR [rbx+39]

; 72   : 		if (_Block_size <= _User_size)

	cmp	rcx, rbx
	ja	SHORT $LN76@Range_cons

; 73   : 			{
; 74   : 			_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN76@Range_cons:

; 75   : 			}
; 76   : 
; 77   : 		const uintptr_t _Ptr_container =
; 78   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	call	??2@YAPEAX_K@Z				; operator new

; 79   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 80   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	rcx, QWORD PTR [rax+39]
	and	rcx, -32				; ffffffffffffffe0H

; 81   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 82   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rcx-8], rax

; 83   : 
; 84   :  #ifdef _DEBUG
; 85   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 86   :  #endif /* _DEBUG */
; 87   :  		return (_Ptr);

	jmp	SHORT $LN72@Range_cons
$LN75@Range_cons:

; 88   : 		}
; 89   : #else /* ^^^ x86/x64 hardware ^^^ // vvv ARM hardware vvv */
; 90   : 	(void)_Try_aligned_allocation;
; 91   : #endif /* defined(_M_IX86) || defined(_M_X64) */
; 92   : 
; 93   : 	_Ptr = ::operator new(_User_size);

	mov	rcx, rbx
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax
$LN72@Range_cons:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1978 : 		this->_Myfirst() = this->_Getal().allocate(_Newcapacity);

	mov	QWORD PTR [rdi], rcx

; 1979 : 		this->_Mylast() = this->_Myfirst();

	mov	QWORD PTR [rdi+8], rcx

; 1980 : 		this->_Myend() = this->_Myfirst() + _Newcapacity;

	mov	r8, QWORD PTR [rdi]
	add	r8, rbx
	mov	QWORD PTR [rdi+16], r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory

; 122  : 	return (_Rechecked(_Dest,

	mov	r8, rcx
	mov	rdx, r14
	mov	rcx, rsi
	call	??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z ; std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 742  : 			this->_Mylast() = _Ucopy(_First, _Last, this->_Myfirst());

	mov	QWORD PTR [rdi+8], rax
$LN7@Range_cons:

; 743  : 			_CATCH_ALL
; 744  : 			_Tidy();
; 745  : 			_RERAISE;
; 746  : 			_CATCH_END
; 747  : 			}
; 748  : 		}

	mov	rbx, QWORD PTR [rsp+120]
	add	rsp, 64					; 00000040H
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
$LN170@Range_cons:
??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z ENDP ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Range_construct_or_tidy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 48
$T50 = 56
this$ = 96
_First$ = 104
_Last$ = 112
__formal$dead$ = 120
?catch$41@?0???$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Range_construct_or_tidy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>'::`1'::catch$41

; 743  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 48					; 00000030H
	mov	rbp, rdx
__catch$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z$0:

; 743  : 			_CATCH_ALL
; 744  : 			_Tidy();

	mov	rcx, QWORD PTR this$GSCopy$[rbp]
	call	?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Tidy

; 743  : 			_CATCH_ALL
; 744  : 			_Tidy();
; 745  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$41@?0???$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Range_construct_or_tidy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>'::`1'::catch$41
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 48
$T50 = 56
this$ = 96
_First$ = 104
_Last$ = 112
__formal$dead$ = 120
?catch$41@?0???$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Range_construct_or_tidy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>'::`1'::catch$41

; 743  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 48					; 00000030H
	mov	rbp, rdx
__catch$??$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z$0:

; 744  : 			_Tidy();

	mov	rcx, QWORD PTR this$GSCopy$[rbp]
	call	?_Tidy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Tidy

; 745  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$41@?0???$_Range_construct_or_tidy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAXPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Range_construct_or_tidy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>'::`1'::catch$41
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??$_Unfancy_maybe_null@N@std@@YAPEANPEAN@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy_maybe_null@N@std@@YAPEANPEAN@Z PROC		; std::_Unfancy_maybe_null<double>, COMDAT

; 652  : 	return (_Ptr);

	mov	rax, rcx

; 653  : 	}

	ret	0
??$_Unfancy_maybe_null@N@std@@YAPEANPEAN@Z ENDP		; std::_Unfancy_maybe_null<double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??$?0AEBV?$allocator@N@std@@X@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$dead$ = 16
??$?0AEBV?$allocator@N@std@@X@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > ><std::allocator<double> const & __ptr64,void>, COMDAT

; 434  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 435  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 436  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax

; 476  : 		}

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@N@std@@X@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > ><std::allocator<double> const & __ptr64,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@@Z PROC ; std::_Uninitialized_value_construct_n<double * __ptr64,unsigned __int64,std::allocator<double> >, COMDAT

; 270  : 	{	// value-initialize _Count objects to raw _First, using _Al

$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 263  : 	return (_Zero_range(_First, _First + _Count));

	lea	rbx, QWORD PTR [rdx*8]

; 270  : 	{	// value-initialize _Count objects to raw _First, using _Al

	mov	rdi, rcx

; 233  : 	_CSTD memset(_First_ch, 0, _Last_ch - _First_ch);

	mov	r8, rbx
	xor	edx, edx
	call	memset

; 263  : 	return (_Zero_range(_First, _First + _Count));

	lea	rax, QWORD PTR [rbx+rdi]

; 271  : 	return (_Uninitialized_value_construct_n1(_First, _Count, _Al,
; 272  : 		_Conjunction_t<_Use_memset_value_construct_t<_FwdIt>,
; 273  : 			_Uses_default_construct<_Alloc, decltype(_Unfancy(_First))>>()));
; 274  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@@Z ENDP ; std::_Uninitialized_value_construct_n<double * __ptr64,unsigned __int64,std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >, COMDAT

; 1112 : 	{	// destroy [_First, _Last), choose optimization

$LN28:

; 1092 : 	for (; _First != _Last; ++_First)

	cmp	rcx, rdx
	je	SHORT $LN26@Destroy_ra
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1112 : 	{	// destroy [_First, _Last), choose optimization

	mov	rdi, rdx
	mov	rbx, rcx
$LL6@Destroy_ra:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 921  : 		_Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 1092 : 	for (; _First != _Last; ++_First)

	add	rbx, 32					; 00000020H
	cmp	rbx, rdi
	jne	SHORT $LL6@Destroy_ra

; 1113 : 		// note that this is an optimization for debug mode codegen;
; 1114 : 		// in release mode the BE removes all of this
; 1115 : 	using _Val = typename _Alloc::value_type;
; 1116 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<
; 1117 : 		is_trivially_destructible<_Val>,
; 1118 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1119 : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN26@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEAN0AEAV?$allocator@N@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEAN0AEAV?$allocator@N@0@@Z PROC ; std::_Destroy_range<std::allocator<double> >, COMDAT

; 1113 : 		// note that this is an optimization for debug mode codegen;
; 1114 : 		// in release mode the BE removes all of this
; 1115 : 	using _Val = typename _Alloc::value_type;
; 1116 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<
; 1117 : 		is_trivially_destructible<_Val>,
; 1118 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1119 : 	}

	ret	0
??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEAN0AEAV?$allocator@N@0@@Z ENDP ; std::_Destroy_range<std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Buy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAA_N_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAA_N_K@Z PROC ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Buy, COMDAT

; 1963 : 		{	// allocate array with _Newcapacity elements

$LN116:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1964 : 		this->_Myfirst() = pointer();

	xor	eax, eax
	mov	rbx, rdx
	mov	QWORD PTR [rcx], rax
	mov	rdi, rcx

; 1965 : 		this->_Mylast() = pointer();

	mov	QWORD PTR [rcx+8], rax

; 1966 : 		this->_Myend() = pointer();

	mov	QWORD PTR [rcx+16], rax

; 1967 : 
; 1968 : 		if (_Newcapacity == 0)

	test	rdx, rdx
	je	SHORT $LN1@Buy

; 1969 : 			{
; 1970 : 			return (false);
; 1971 : 			}
; 1972 : 
; 1973 : 		if (_Newcapacity > max_size())

	mov	rax, 576460752303423487			; 07ffffffffffffffH
	cmp	rdx, rax
	ja	SHORT $LN114@Buy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 63   : 	const size_t _User_size = _Count * _Sz;

	shl	rbx, 5

; 64   : 
; 65   : #if defined(_M_IX86) || defined(_M_X64)
; 66   : 	if (_Try_aligned_allocation
; 67   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	rbx, 4096				; 00001000H
	jb	SHORT $LN61@Buy

; 68   : 		{	// allocate large block
; 69   : 		static_assert(sizeof(void *) < _BIG_ALLOCATION_ALIGNMENT,
; 70   : 			"Big allocations should at least match vector register size");
; 71   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	rcx, QWORD PTR [rbx+39]

; 72   : 		if (_Block_size <= _User_size)

	cmp	rcx, rbx
	ja	SHORT $LN62@Buy

; 73   : 			{
; 74   : 			_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN62@Buy:

; 75   : 			}
; 76   : 
; 77   : 		const uintptr_t _Ptr_container =
; 78   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	call	??2@YAPEAX_K@Z				; operator new

; 79   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 80   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	rcx, QWORD PTR [rax+39]
	and	rcx, -32				; ffffffffffffffe0H

; 81   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 82   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rcx-8], rax

; 83   : 
; 84   :  #ifdef _DEBUG
; 85   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 86   :  #endif /* _DEBUG */
; 87   :  		return (_Ptr);

	jmp	SHORT $LN58@Buy
$LN61@Buy:

; 88   : 		}
; 89   : #else /* ^^^ x86/x64 hardware ^^^ // vvv ARM hardware vvv */
; 90   : 	(void)_Try_aligned_allocation;
; 91   : #endif /* defined(_M_IX86) || defined(_M_X64) */
; 92   : 
; 93   : 	_Ptr = ::operator new(_User_size);

	mov	rcx, rbx
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax
$LN58@Buy:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1978 : 		this->_Myfirst() = this->_Getal().allocate(_Newcapacity);

	mov	QWORD PTR [rdi], rcx

; 1979 : 		this->_Mylast() = this->_Myfirst();

	mov	QWORD PTR [rdi+8], rcx

; 1980 : 		this->_Myend() = this->_Myfirst() + _Newcapacity;

	mov	rax, QWORD PTR [rdi]
	lea	rcx, QWORD PTR [rbx+rax]

; 1981 : 
; 1982 : 		return (true);

	mov	al, 1
	mov	QWORD PTR [rdi+16], rcx
$LN1@Buy:

; 1983 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN114@Buy:

; 1974 : 			{
; 1975 : 			_Xlength();

	call	?_Xlength@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@CAXXZ ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Xlength
	int	3
$LN113@Buy:
?_Buy@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAA_N_K@Z ENDP ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Buy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT

; 1617 : 		return (_BUF_SIZE <= _Myres);

	cmp	QWORD PTR [rcx+24], 16

; 1607 : 		if (_Large_string_engaged())

	jb	SHORT $LN16@data

; 3045 : 		return (this->_Get_data()._Myptr());

	mov	rax, QWORD PTR [rcx]

; 3046 : 		}

	ret	0
$LN16@data:

; 3045 : 		return (this->_Get_data()._Myptr());

	mov	rax, rcx

; 3046 : 		}

	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Xlength@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@CAXXZ PROC ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Xlength, COMDAT

; 2016 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 2017 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?max_size@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::max_size, COMDAT

; 1770 : 		return (_Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

	mov	rax, 576460752303423487			; 07ffffffffffffffH

; 1771 : 			_Alty_traits::max_size(this->_Getal())));
; 1772 : 		}

	ret	0
?max_size@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z PROC ; std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >::allocate, COMDAT

; 945  : 		{	// allocate array of _Count elements

$LN14:
	sub	rsp, 40					; 00000028H

; 52   : 	if (_Count == 0)

	test	rdx, rdx
	jne	SHORT $LN4@allocate

; 53   : 		{
; 54   : 		return (_Ptr);

	xor	ecx, ecx

; 946  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof(_Ty))));

	mov	eax, ecx

; 947  : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN4@allocate:

; 58   : 	if (static_cast<size_t>(-1) / _Sz < _Count)

	mov	rax, 576460752303423487			; 07ffffffffffffffH
	cmp	rdx, rax
	jbe	SHORT $LN5@allocate

; 59   : 		{
; 60   : 		_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN5@allocate:

; 61   : 		}
; 62   : 
; 63   : 	const size_t _User_size = _Count * _Sz;

	shl	rdx, 5

; 64   : 
; 65   : #if defined(_M_IX86) || defined(_M_X64)
; 66   : 	if (_Try_aligned_allocation
; 67   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN6@allocate

; 68   : 		{	// allocate large block
; 69   : 		static_assert(sizeof(void *) < _BIG_ALLOCATION_ALIGNMENT,
; 70   : 			"Big allocations should at least match vector register size");
; 71   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	lea	rcx, QWORD PTR [rdx+39]

; 72   : 		if (_Block_size <= _User_size)

	cmp	rcx, rdx
	ja	SHORT $LN7@allocate

; 73   : 			{
; 74   : 			_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN7@allocate:

; 75   : 			}
; 76   : 
; 77   : 		const uintptr_t _Ptr_container =
; 78   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	call	??2@YAPEAX_K@Z				; operator new

; 79   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 80   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	lea	rcx, QWORD PTR [rax+39]
	and	rcx, -32				; ffffffffffffffe0H

; 81   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 82   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rcx-8], rax

; 946  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof(_Ty))));

	mov	rax, rcx

; 947  : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN6@allocate:

; 93   : 	_Ptr = ::operator new(_User_size);

	mov	rcx, rdx
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 947  : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN13@allocate:
?allocate@?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@QEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@2@_K@Z ENDP ; std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::max_size, COMDAT

; 867  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

	mov	rax, 576460752303423487			; 07ffffffffffffffH

; 868  : 		}

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Getal, COMDAT

; 595  : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 596  : 		}

	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@@std@@QEBAAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Get_first, COMDAT

; 323  : 		return (*this);

	mov	rax, rcx

; 324  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\chrono
;	COMDAT ??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z PROC ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >, COMDAT

; 481  : 	using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 482  : 	return (_CT(_Left).count() < _CT(_Right).count());

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	setl	al

; 483  : 	}

	ret	0
??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z ENDP ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring_insert.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring_insert.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring_insert.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring_insert.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring_insert.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring_insert.h
;	COMDAT ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
_TEXT	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z PROC ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>, COMDAT

; 24   : 	{	// insert a character-type sequence into _Ostr as if through a basic_string copy

$LN111:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR $T27[rsp], -2
	mov	QWORD PTR [rsp+120], rbx
	mov	r15, r8
	mov	r12, rdx
	mov	rsi, rcx

; 25   : 	ios_base::iostate _State = ios_base::goodbit;

	xor	ebx, ebx
	mov	DWORD PTR _State$[rsp], ebx

; 26   : 	_SizeT _Pad = _Ostr.width() <= 0 || static_cast<_SizeT>(_Ostr.width()) <= _Size

	mov	rax, QWORD PTR [rcx]
	movsxd	r9, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase

; 422  : 		return (_Wide);

	mov	rdi, QWORD PTR [r9+rcx+40]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring_insert.h

; 26   : 	_SizeT _Pad = _Ostr.width() <= 0 || static_cast<_SizeT>(_Ostr.width()) <= _Size

	test	rdi, rdi
	jle	SHORT $LN17@Insert_str
	cmp	rdi, r8
	jbe	SHORT $LN17@Insert_str
	sub	rdi, r8
	jmp	SHORT $LN18@Insert_str
$LN17@Insert_str:
	xor	edi, edi
$LN18@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 98   : 			: _Myostr(_Ostr)

	mov	r14, rsi
	mov	QWORD PTR _Ok$[rsp], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios

; 91   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [r9+rcx+72]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 100  : 			if (_Myostr.rdbuf() != 0)

	test	rcx, rcx
	je	SHORT $LN35@Insert_str

; 101  : 				_Myostr.rdbuf()->_Lock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN35@Insert_str:

; 123  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase

; 338  : 		return (rdstate() == goodbit);

	cmp	DWORD PTR [rcx+rsi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 123  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

	jne	SHORT $LN31@Insert_str
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios

; 79   : 		return (_Tiestr);

	mov	rcx, QWORD PTR [rcx+rsi+80]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 123  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

	test	rcx, rcx
	je	SHORT $LN31@Insert_str
	cmp	rcx, rsi
	je	SHORT $LN31@Insert_str

; 124  : 				_Ostr.tie()->flush();

	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
$LN31@Insert_str:

; 125  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase

; 338  : 		return (rdstate() == goodbit);

	cmp	DWORD PTR [rcx+rsi+16], 0
	sete	al
	mov	BYTE PTR _Ok$[rsp+8], al
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring_insert.h

; 30   : 	if (!_Ok)

	test	al, al
	jne	SHORT $LN8@Insert_str

; 31   : 		_State |= ios_base::badbit;

	mov	ebx, 4

; 32   : 	else

	jmp	$LN22@Insert_str
$LN8@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase

; 377  : 		return (_Fmtfl);

	mov	eax, DWORD PTR [rcx+rsi+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring_insert.h

; 35   : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN103@Insert_str
	npad	7
$LL4@Insert_str:

; 36   : 			for (; 0 < _Pad; --_Pad)	// pad on left

	test	rdi, rdi
	je	SHORT $LN3@Insert_str

; 37   : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	movzx	edx, BYTE PTR [rcx+rsi+88]
	mov	rcx, QWORD PTR [rcx+rsi+72]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	cmp	eax, -1
	jne	SHORT $LN2@Insert_str

; 38   : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 39   : 					{	// insertion failed, quit
; 40   : 					_State |= ios_base::badbit;

	mov	ebx, 4
	mov	DWORD PTR _State$[rsp], ebx

; 41   : 					break;

	jmp	SHORT $LL107@Insert_str
$LN2@Insert_str:

; 36   : 			for (; 0 < _Pad; --_Pad)	// pad on left

	dec	rdi
	jmp	SHORT $LL4@Insert_str
$LN3@Insert_str:

; 42   : 					}
; 43   : 
; 44   : 		if (_State == ios_base::goodbit
; 45   : 			&& _Ostr.rdbuf()->sputn(_Data, (streamsize)_Size)

	test	ebx, ebx
	jne	SHORT $LL107@Insert_str
$LN103@Insert_str:
	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	r8, r15
	mov	rdx, r12
	mov	rcx, QWORD PTR [rcx+rsi+72]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	cmp	rax, r15
	je	SHORT $LL107@Insert_str

; 46   : 				!= (streamsize)_Size)
; 47   : 				_State |= ios_base::badbit;

	mov	ebx, 4

; 48   : 		else

	jmp	SHORT $LN109@Insert_str
	npad	4
$LL107@Insert_str:

; 49   : 			for (; 0 < _Pad; --_Pad)	// pad on right

	test	rdi, rdi
	je	SHORT $LN6@Insert_str

; 50   : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	movzx	edx, BYTE PTR [rcx+rsi+88]
	mov	rcx, QWORD PTR [rcx+rsi+72]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	cmp	eax, -1
	jne	SHORT $LN5@Insert_str

; 51   : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 52   : 					{	// insertion failed, quit
; 53   : 					_State |= ios_base::badbit;

	or	ebx, 4

; 54   : 					break;

	jmp	SHORT $LN109@Insert_str
$LN5@Insert_str:

; 49   : 			for (; 0 < _Pad; --_Pad)	// pad on right

	dec	rdi
	jmp	SHORT $LL107@Insert_str
$LN109@Insert_str:

; 46   : 				!= (streamsize)_Size)
; 47   : 				_State |= ios_base::badbit;

	mov	DWORD PTR _State$[rsp], ebx
$LN6@Insert_str:

; 55   : 					}
; 56   : 		_Ostr.width(0);

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xiosbase

; 428  : 		_Wide = _Newwidth;

	mov	QWORD PTR [rcx+rsi+40], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring_insert.h
	jmp	SHORT $LN22@Insert_str
$LN23@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios
	mov	rsi, QWORD PTR _Ostr$[rsp]
	mov	ebx, DWORD PTR _State$[rsp]
	mov	r14, QWORD PTR _Ok$[rsp]
$LN22@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring_insert.h

; 60   : 	_Ostr.setstate(_State);

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rsi
	xor	r8d, r8d
	mov	edx, ebx
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 131  : 			if (!_STD uncaught_exception())

	call	QWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	test	al, al
	jne	SHORT $LN84@Insert_str

; 132  : 				this->_Myostr._Osfx();

	mov	rcx, r14
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	npad	1
$LN84@Insert_str:

; 106  : 			if (_Myostr.rdbuf() != 0)

	mov	rax, QWORD PTR [r14]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ios

; 91   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [rcx+r14+72]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\ostream

; 106  : 			if (_Myostr.rdbuf() != 0)

	test	rcx, rcx
	je	SHORT $LN88@Insert_str

; 107  : 				_Myostr.rdbuf()->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN88@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstring_insert.h

; 61   : 	return (_Ostr);

	mov	rax, rsi

; 62   : 	}

	mov	rbx, QWORD PTR [rsp+120]
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ENDP ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
?dtor$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$1
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$1
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$8

; 57   : 		_CATCH_IO_(_Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$8
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
?dtor$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$1
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$8

; 57   : 		_CATCH_IO_(_Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$8
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$8@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$8
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\type_traits
;	COMDAT ??$forward@AEAV?$vector@NV?$allocator@N@std@@@std@@@std@@YAAEAV?$vector@NV?$allocator@N@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAV?$vector@NV?$allocator@N@std@@@std@@@std@@YAAEAV?$vector@NV?$allocator@N@std@@@0@AEAV10@@Z PROC ; std::forward<std::vector<double,std::allocator<double> > & __ptr64>, COMDAT

; 1592 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1593 : 	}

	ret	0
??$forward@AEAV?$vector@NV?$allocator@N@std@@@std@@@std@@YAAEAV?$vector@NV?$allocator@N@std@@@0@AEAV10@@Z ENDP ; std::forward<std::vector<double,std::allocator<double> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\type_traits
;	COMDAT ??$forward@N@std@@YA$$QEANAEAN@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@N@std@@YA$$QEANAEAN@Z PROC			; std::forward<double>, COMDAT

; 1592 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1593 : 	}

	ret	0
??$forward@N@std@@YA$$QEANAEAN@Z ENDP			; std::forward<double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\utility
;	COMDAT ??$?0AEAV?$vector@NV?$allocator@N@std@@@std@@NX$0A@@?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEAV?$vector@NV?$allocator@N@std@@@1@$$QEAN@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0AEAV?$vector@NV?$allocator@N@std@@@std@@NX$0A@@?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEAV?$vector@NV?$allocator@N@std@@@1@$$QEAN@Z PROC ; std::pair<std::vector<double,std::allocator<double> >,double>::pair<std::vector<double,std::allocator<double> >,double><std::vector<double,std::allocator<double> > & __ptr64,double,void,0>, COMDAT

; 188  : 		{	// construct from moved values

$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	rdi, rcx
	call	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
	mov	rax, QWORD PTR [rbx]

; 189  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+24], rax
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEAV?$vector@NV?$allocator@N@std@@@std@@NX$0A@@?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEAV?$vector@NV?$allocator@N@std@@@1@$$QEAN@Z ENDP ; std::pair<std::vector<double,std::allocator<double> >,double>::pair<std::vector<double,std::allocator<double> >,double><std::vector<double,std::allocator<double> > & __ptr64,double,void,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
;	COMDAT ??$map@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@@Z
_TEXT	SEGMENT
$T1 = 48
$T3 = 64
$T6 = 80
$T7 = 96
$T8 = 112
$T9 = 128
result$ = 160
f$ = 168
v$ = 176
??$map@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@@Z PROC ; hof::map<<lambda_7e04991c64d89450a9afdec7af8092d1>,double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > >,double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >, COMDAT

; 7    :     void map(View<PB, B, DB> result, F f, View<PA, A, DA> v) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	r14
	sub	rsp, 144				; 00000090H
	mov	rsi, r8
	mov	rdi, rdx
	mov	r14, rcx

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	xor	ebx, ebx
	npad	13
$LL4@map:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rsi]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rdx, QWORD PTR [rsi+8]
	mov	rcx, QWORD PTR [r14+8]
	add	rdx, rbx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 165  :             rnz(result, vD,

	mov	r9, QWORD PTR [rdi+8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rbx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR [r14]
	mov	QWORD PTR $T3[rsp], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 165  :             rnz(result, vD,

	mov	rax, QWORD PTR [rdi+16]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	QWORD PTR $T1[rsp+8], rdx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 165  :             rnz(result, vD,

	lea	rdx, QWORD PTR $T8[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movdqa	XMMWORD PTR $T6[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rax]
	mov	rax, QWORD PTR [rdi]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	QWORD PTR $T3[rsp+8], rcx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 165  :             rnz(result, vD,

	lea	rcx, QWORD PTR $T9[rsp]
	movaps	xmm1, XMMWORD PTR $T3[rsp]
	movaps	XMMWORD PTR $T7[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rax]
	lea	rax, QWORD PTR $T6[rsp]
	movdqa	XMMWORD PTR $T9[rsp], xmm1
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR $T7[rsp]
	mov	QWORD PTR [rsp+32], rax
	movaps	XMMWORD PTR $T8[rsp], xmm0
	call	??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >,<lambda_82709c2af490acbaaecbe567606e69e8>,<lambda_7ef7f5917424a38ce3010ad89fbaf103>,double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	add	rbx, 16
	cmp	rbx, 512				; 00000200H
	jb	$LL4@map

; 10   :             f(result[i], v[i]);
; 11   :         }
; 12   :     }

	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	mov	rdi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	r14
	ret	0
??$map@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V<lambda_7e04991c64d89450a9afdec7af8092d1>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@@Z ENDP ; hof::map<<lambda_7e04991c64d89450a9afdec7af8092d1>,double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > >,double * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@_K@Z PROC ; View<double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >::operator[], COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	shl	r8, 4
	add	r8, QWORD PTR [rcx+8]

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx+8], r8

; 31   :     }

	ret	0
??A?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@_K@Z ENDP ; View<double const * __ptr64,double,List<P<32,16>,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@<lambda_7e04991c64d89450a9afdec7af8092d1>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z
_TEXT	SEGMENT
$T2 = 48
$T3 = 64
$T4 = 80
$T5 = 96
this$ = 128
result$ = 136
bc$ = 144
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@<lambda_7e04991c64d89450a9afdec7af8092d1>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z PROC ; <lambda_7e04991c64d89450a9afdec7af8092d1>::operator()<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >, COMDAT

; 164  :         map(result, [&](auto result, auto bc) {

	sub	rsp, 120				; 00000078H

; 165  :             rnz(result, vD,

	mov	rax, QWORD PTR [rcx+16]
	movups	xmm0, XMMWORD PTR [r8]
	mov	r9, QWORD PTR [rcx+8]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	lea	rcx, QWORD PTR $T5[rsp]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rax]
	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR $T3[rsp]
	movaps	XMMWORD PTR $T4[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rdx]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	QWORD PTR [rsp+32], rax
	movaps	XMMWORD PTR $T5[rsp], xmm0
	call	??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >,<lambda_82709c2af490acbaaecbe567606e69e8>,<lambda_7ef7f5917424a38ce3010ad89fbaf103>,double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >

; 166  :                 [&](auto result, auto b1, auto b2) {
; 167  :                 zip(result, [&](auto result, auto r1, auto r2) {
; 168  :                     zip(result, add, r1, r2); },
; 169  :                     b1, b2); },
; 170  :                 [&](auto result, auto bA, auto bB) {
; 171  :                         map(result, [&](auto result, auto r) {
; 172  :                             map(result, [&](auto result, auto c) {
; 173  :                                 rnz(result, tmp, add, mul, r, c); },
; 174  :                                 bB); },
; 175  :                             bA); },
; 176  :                         br, bc); },

	add	rsp, 120				; 00000078H
	ret	0
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@<lambda_7e04991c64d89450a9afdec7af8092d1>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z ENDP ; <lambda_7e04991c64d89450a9afdec7af8092d1>::operator()<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??0<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@@Z
_TEXT	SEGMENT
this$ = 8
<tmp>$ = 16
??0<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@@Z PROC ; <lambda_7ef7f5917424a38ce3010ad89fbaf103>::<lambda_7ef7f5917424a38ce3010ad89fbaf103>, COMDAT

; 175  :                             bA); },

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@@Z ENDP ; <lambda_7ef7f5917424a38ce3010ad89fbaf103>::<lambda_7ef7f5917424a38ce3010ad89fbaf103>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > const & __ptr64>, COMDAT

; 1592 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1593 : 	}

	ret	0
??$forward@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$?0AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1><std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > const & __ptr64>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 434  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 435  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 436  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility

; 313  : 		}

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1>::_Compressed_pair<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >,1><std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$distance@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YA_JPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$distance@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YA_JPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0@Z PROC ; std::distance<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>, COMDAT

; 1100 : 	return (_Last - _First);

	sub	rdx, rcx
	sar	rdx, 5

; 1106 : 	return (_Distance1(_First, _Last, _Iter_cat_t<_InIt>()));

	mov	rax, rdx

; 1107 : 	}

	ret	0
??$distance@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YA_JPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0@Z ENDP ; std::distance<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??$_Ucopy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@PEBU21@0PEAU21@@Z
_TEXT	SEGMENT
this$dead$ = 64
_First$ = 72
_Last$ = 80
_Dest$ = 88
??$_Ucopy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@PEBU21@0PEAU21@@Z PROC ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Ucopy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>, COMDAT

; 1913 : 		{	// copy [_First, _Last) to raw _Dest, using allocator

$LN25:
	sub	rsp, 56					; 00000038H
	mov	rax, r8
	mov	rcx, rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory

; 122  : 	return (_Rechecked(_Dest,

	mov	rdx, rax
	mov	r8, r9
	call	??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z ; std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1915 : 		}

	add	rsp, 56					; 00000038H
	ret	0
??$_Ucopy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$vector@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@AEAAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@PEBU21@0PEAU21@@Z ENDP ; std::vector<std::pair<std::vector<double,std::allocator<double> >,double>,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Ucopy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@N@std@@@std@@YAAEBV?$allocator@N@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBV?$allocator@N@std@@@std@@YAAEBV?$allocator@N@0@AEBV10@@Z PROC ; std::forward<std::allocator<double> const & __ptr64>, COMDAT

; 1592 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1593 : 	}

	ret	0
??$forward@AEBV?$allocator@N@std@@@std@@YAAEBV?$allocator@N@0@AEBV10@@Z ENDP ; std::forward<std::allocator<double> const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$?0AEBV?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@N@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0AEBV?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@N@1@@Z PROC ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><std::allocator<double> const & __ptr64>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 434  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 435  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 436  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility

; 313  : 		}

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@N@1@@Z ENDP ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><std::allocator<double> const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n1@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
__formal$dead$ = 64
__formal$dead$ = 72
??$_Uninitialized_value_construct_n1@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_value_construct_n1<double * __ptr64,unsigned __int64,std::allocator<double> >, COMDAT

; 262  : 	{	// value-initialize _Count objects to raw _First, using default _Alloc construct, all-bits-zero type

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 263  : 	return (_Zero_range(_First, _First + _Count));

	lea	rbx, QWORD PTR [rdx*8]
	mov	rdi, rcx

; 233  : 	_CSTD memset(_First_ch, 0, _Last_ch - _First_ch);

	mov	r8, rbx
	xor	edx, edx
	call	memset

; 263  : 	return (_Zero_range(_First, _First + _Count));

	lea	rax, QWORD PTR [rbx+rdi]

; 264  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n1@PEAN_KV?$allocator@N@std@@@std@@YAPEANPEAN_KAEAV?$allocator@N@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_value_construct_n1<double * __ptr64,unsigned __int64,std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
__formal$dead$ = 72
??$_Destroy_range1@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Destroy_range1<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >, COMDAT

; 1091 : 	{	// destroy [_First, _Last), no special optimization

$LN26:

; 1092 : 	for (; _First != _Last; ++_First)

	cmp	rcx, rdx
	je	SHORT $LN24@Destroy_ra
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1091 : 	{	// destroy [_First, _Last), no special optimization

	mov	rdi, rdx
	mov	rbx, rcx
$LL4@Destroy_ra:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 921  : 		_Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 1092 : 	for (; _First != _Last; ++_First)

	add	rbx, 32					; 00000020H
	cmp	rbx, rdi
	jne	SHORT $LL4@Destroy_ra

; 1093 : 		{
; 1094 : 		allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1095 : 		}
; 1096 : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN24@Destroy_ra:
	ret	0
??$_Destroy_range1@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Destroy_range1<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@N@std@@@std@@YAXPEAN0AEAV?$allocator@N@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
__formal$dead$ = 32
??$_Destroy_range1@V?$allocator@N@std@@@std@@YAXPEAN0AEAV?$allocator@N@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<double> >, COMDAT

; 1104 : 		// nothing to do
; 1105 : 	}

	ret	0
??$_Destroy_range1@V?$allocator@N@std@@@std@@YAXPEAN0AEAV?$allocator@N@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@QEAA@AEBQEBN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$ = 24
??0?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@QEAA@AEBQEBN_K@Z PROC ; View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > >::View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@QEAA@AEBQEBN_K@Z ENDP ; View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > >::View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >, COMDAT

; 434  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 435  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 436  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax

; 438  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >::_Vector_val<std::_Simple_types<std::pair<std::vector<double,std::allocator<double> >,double> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<double> >::_Vector_val<std::_Simple_types<double> >, COMDAT

; 434  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 435  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 436  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax

; 438  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<double> >::_Vector_val<std::_Simple_types<double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >, COMDAT

; 768  : 		{	// construct by copying _Right

$LN111:
	mov	QWORD PTR [rsp+32], rbx
	push	rsi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 434  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 768  : 		{	// construct by copying _Right

	mov	rsi, rcx

; 435  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 436  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax

; 1765 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

	mov	rdx, QWORD PTR [rdx+8]
	sub	rdx, QWORD PTR [rbx]
	sar	rdx, 3

; 769  : 		if (_Buy(_Right.size()))

	call	?_Buy@?$vector@NV?$allocator@N@std@@@std@@AEAA_N_K@Z ; std::vector<double,std::allocator<double> >::_Buy
	test	al, al
	je	SHORT $LN5@vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility

; 2240 : 	const char * const _First_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_First));

	mov	rdx, QWORD PTR [rbx]

; 2241 : 	const char * const _Last_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_Last));
; 2242 : 	char * const _Dest_ch = const_cast<char *>(reinterpret_cast<volatile char *>(_Dest));
; 2243 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	rbx, QWORD PTR [rbx+8]
	sub	rbx, rdx
	mov	QWORD PTR [rsp+64], rdi
	mov	rdi, QWORD PTR [rsi]

; 2244 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, rbx
	mov	rcx, rdi
	call	QWORD PTR __imp_memmove

; 2245 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rcx, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 772  : 			this->_Mylast() = _Ucopy(_Right._Myfirst(), _Right._Mylast(), this->_Myfirst());

	mov	rdi, QWORD PTR [rsp+64]
	mov	QWORD PTR [rsi+8], rcx
$LN5@vector:

; 773  : 			_CATCH_ALL
; 774  : 			_Tidy();
; 775  : 			_RERAISE;
; 776  : 			_CATCH_END
; 777  : 			}
; 778  : 		}

	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA?AV?$allocator@N@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Al$dead$ = 16
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA?AV?$allocator@N@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<double> >::select_on_container_copy_construction, COMDAT

; 872  : 		return (_Al);

	mov	rax, rcx

; 873  : 		}

	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA?AV?$allocator@N@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<double> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBQEANXZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBQEANXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Mylast, COMDAT

; 625  : 		return (_Get_data()._Mylast);

	lea	rax, QWORD PTR [rcx+8]

; 626  : 		}

	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEBAAEBQEANXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ?size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ PROC	; std::vector<double,std::allocator<double> >::size, COMDAT

; 1765 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 1766 : 		}

	ret	0
?size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ENDP	; std::vector<double,std::allocator<double> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
;	COMDAT ??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z
_TEXT	SEGMENT
tv747 = 48
$T10 = 48
$T1 = 48
$T27 = 64
$T2 = 64
$T35 = 80
$T18 = 80
$T20 = 96
$T26 = 96
$T43 = 112
$T11 = 112
$T45 = 128
$T25 = 128
$T58 = 144
$T24 = 144
$T60 = 160
$T23 = 160
$T62 = 176
$T22 = 176
$T66 = 192
$T49 = 192
$T65 = 208
$T50 = 208
$T64 = 224
$T36 = 224
$T47 = 240
$T48 = 256
result$ = 336
tmp$ = 344
f$dead$ = 352
tv746 = 360
g$ = 360
v1$ = 368
<v_0>$ = 376
??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z PROC ; hof::rnz<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >,<lambda_82709c2af490acbaaecbe567606e69e8>,<lambda_7ef7f5917424a38ce3010ad89fbaf103>,double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >, COMDAT

; 30   :     void rnz(R result, T tmp, F f, G g, View<P, A, D> v1, V... v) {

	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-16]
	sub	rsp, 272				; 00000110H
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	r8, QWORD PTR <v_0>$[rbp-256]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 30   :     void rnz(R result, T tmp, F f, G g, View<P, A, D> v1, V... v) {

	mov	rbx, r9
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	r13, QWORD PTR v1$[rbp-256]
	mov	r12d, 16
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR [r8+8]
	mov	QWORD PTR $T1[rsp+8], rax
; File d:\documents\dev\lambdagen\view\view\hof.h

; 31   :         g(result, v1[0], v[0]...);

	movaps	xmm0, XMMWORD PTR $T1[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [r13]
	mov	r13, QWORD PTR [r13+8]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 31   :         g(result, v1[0], v[0]...);

	movdqa	XMMWORD PTR $T2[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 171  :                         map(result, [&](auto result, auto r) {

	movups	xmm0, XMMWORD PTR [rcx]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T10[rsp], rax

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T20[rsp], xmm0

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	psrldq	xmm0, 8
	movq	r15, xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	sub	r13, r15
	npad	10
$LL21@rnz:
	mov	r14, QWORD PTR $T2[rsp+8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	lea	rax, QWORD PTR [r15+r13]
	mov	QWORD PTR $T10[rsp+8], rax
	mov	rdi, r15
; File d:\documents\dev\lambdagen\view\view\hof.h

; 10   :             f(result[i], v[i]);

	movaps	xmm1, XMMWORD PTR $T10[rsp]

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	sub	r14, r15
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR $T2[rsp]
	mov	esi, 16
; File d:\documents\dev\lambdagen\view\view\hof.h

; 10   :             f(result[i], v[i]);

	movaps	XMMWORD PTR $T11[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T18[rsp], rax
	npad	3
$LL38@rnz:
	lea	rax, QWORD PTR [r14+rdi]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movdqa	XMMWORD PTR $T23[rbp-256], xmm1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T18[rsp+8], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	lea	rdx, QWORD PTR $T24[rbp-256]
	movaps	xmm0, XMMWORD PTR $T18[rsp]
	lea	rax, QWORD PTR $T22[rbp-256]
	mov	QWORD PTR [rsp+40], rax
	lea	rcx, QWORD PTR $T25[rbp-256]
	movdqa	XMMWORD PTR $T22[rbp-256], xmm0
	lea	rax, QWORD PTR $T23[rbp-256]
	movups	xmm0, XMMWORD PTR [rbx]
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T20[rsp+8], rdi
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movaps	xmm1, XMMWORD PTR $T20[rsp]
	movaps	XMMWORD PTR $T24[rbp-256], xmm0
	movdqa	XMMWORD PTR $T25[rbp-256], xmm1
	mov	QWORD PTR [rsp+32], rax
	call	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	inc	rdi
	sub	rsi, 1
	je	SHORT $LN148@rnz
	movaps	xmm1, XMMWORD PTR $T11[rsp]
	jmp	SHORT $LL38@rnz
$LN148@rnz:
	add	r15, 512				; 00000200H
	sub	r12, 1
	jne	$LL21@rnz

; 32   :         for (size_t i = 1; i < D::head::dim; ++i) {

	mov	edx, 16
	mov	ecx, 8192				; 00002000H
	mov	QWORD PTR tv747[rsp], rdx
	mov	QWORD PTR tv746[rbp-256], rcx
$LL4@rnz:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	r8, QWORD PTR <v_0>$[rbp-256]
	mov	r13d, 16

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, QWORD PTR [r8+8]

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR $T26[rsp], rax
	mov	rax, QWORD PTR v1$[rbp-256]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	QWORD PTR $T26[rsp+8], rcx
; File d:\documents\dev\lambdagen\view\view\hof.h

; 33   :             g(tmp, v1[i], v[i]...);

	movaps	xmm0, XMMWORD PTR $T26[rsp]
	movdqa	XMMWORD PTR $T27[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rcx, QWORD PTR [rax]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	r12, QWORD PTR [rax+8]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 171  :                         map(result, [&](auto result, auto r) {

	mov	rax, QWORD PTR tmp$[rbp-256]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	r12, rdx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T35[rsp], rcx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 171  :                         map(result, [&](auto result, auto r) {

	movups	xmm0, XMMWORD PTR [rax]
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T45[rbp-256], xmm0

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	psrldq	xmm0, 8
	movq	r15, xmm0
$LL65@rnz:
	mov	rax, QWORD PTR $T27[rsp]
	mov	rdi, r15
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	mov	r14, QWORD PTR $T27[rsp+8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	esi, 16
	mov	QWORD PTR $T35[rsp+8], r12
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	sub	r14, r15

; 10   :             f(result[i], v[i]);

	movaps	xmm1, XMMWORD PTR $T35[rsp]
	movaps	XMMWORD PTR $T36[rbp-256], xmm1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T43[rsp], rax
	npad	8
$LL82@rnz:
	lea	rax, QWORD PTR [r14+rdi]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movdqa	XMMWORD PTR $T48[rbp-256], xmm1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T43[rsp+8], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	lea	rdx, QWORD PTR $T49[rbp-256]
	movaps	xmm0, XMMWORD PTR $T43[rsp]
	lea	rax, QWORD PTR $T47[rbp-256]
	mov	QWORD PTR [rsp+40], rax
	lea	rcx, QWORD PTR $T50[rbp-256]
	movdqa	XMMWORD PTR $T47[rbp-256], xmm0
	lea	rax, QWORD PTR $T48[rbp-256]
	movups	xmm0, XMMWORD PTR [rbx]
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T45[rbp-248], rdi
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movaps	xmm1, XMMWORD PTR $T45[rbp-256]
	movaps	XMMWORD PTR $T49[rbp-256], xmm0
	movdqa	XMMWORD PTR $T50[rbp-256], xmm1
	mov	QWORD PTR [rsp+32], rax
	call	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	inc	rdi
	sub	rsi, 1
	je	SHORT $LN149@rnz
	movaps	xmm1, XMMWORD PTR $T36[rbp-256]
	jmp	SHORT $LL82@rnz
$LN149@rnz:
	add	r12, 512				; 00000200H
	add	r15, 16
	sub	r13, 1
	jne	$LL65@rnz
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 167  :                 zip(result, [&](auto result, auto r1, auto r2) {

	mov	rax, QWORD PTR tmp$[rbp-256]
	lea	r14d, QWORD PTR [r13+16]
	movups	xmm1, XMMWORD PTR [rax]
	mov	rax, QWORD PTR result$[rbp-256]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T58[rbp-256], xmm1
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 167  :                 zip(result, [&](auto result, auto r1, auto r2) {

	psrldq	xmm1, 8
	movups	xmm2, XMMWORD PTR [rax]
	movq	rsi, xmm1
	movups	xmm0, xmm2
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T60[rbp-256], xmm2
	movq	QWORD PTR $T62[rbp-256], xmm0
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 167  :                 zip(result, [&](auto result, auto r1, auto r2) {

	psrldq	xmm0, 8
; File d:\documents\dev\lambdagen\view\view\hof.h

; 24   :         for (size_t i = 0; i < D::head::dim; ++i) {

	psrldq	xmm2, 8
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 167  :                 zip(result, [&](auto result, auto r1, auto r2) {

	movq	rdi, xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 24   :         for (size_t i = 0; i < D::head::dim; ++i) {

	movq	r15, xmm2
	sub	r15, rdi
	npad	12
$LL99@rnz:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T58[rbp-248], rsi
	lea	rax, QWORD PTR [r15+rdi]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 168  :                     zip(result, add, r1, r2); },

	movaps	xmm0, XMMWORD PTR $T58[rbp-256]
	lea	r9, QWORD PTR $T64[rbp-256]
	movdqa	XMMWORD PTR $T64[rbp-256], xmm0
	lea	r8, QWORD PTR $T65[rbp-256]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T60[rbp-248], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 168  :                     zip(result, add, r1, r2); },

	lea	rcx, QWORD PTR $T66[rbp-256]
	movaps	xmm1, XMMWORD PTR $T60[rbp-256]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T62[rbp-248], rdi
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 168  :                     zip(result, add, r1, r2); },

	movaps	xmm0, XMMWORD PTR $T62[rbp-256]
	movdqa	XMMWORD PTR $T66[rbp-256], xmm0
	movdqa	XMMWORD PTR $T65[rbp-256], xmm1
	call	??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V1@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@00@Z ; hof::zip<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,double * __ptr64,double,List<P<16,1>,EmptyList>,View<double * __ptr64,double,List<P<16,1>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 24   :         for (size_t i = 0; i < D::head::dim; ++i) {

	add	rsi, 16
	add	rdi, 512				; 00000200H
	sub	r14, 1
	jne	SHORT $LL99@rnz

; 32   :         for (size_t i = 1; i < D::head::dim; ++i) {

	mov	rcx, QWORD PTR tv746[rbp-256]
	mov	rdx, QWORD PTR tv747[rsp]
	add	rcx, 8192				; 00002000H
	add	rdx, 16
	mov	QWORD PTR tv746[rbp-256], rcx
	mov	QWORD PTR tv747[rsp], rdx
	cmp	rcx, 262144				; 00040000H
	jb	$LL4@rnz

; 34   :             f(result, result, tmp);
; 35   :         }
; 36   :     }

	mov	rbx, QWORD PTR [rsp+352]
	add	rsp, 272				; 00000110H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??$rnz@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_82709c2af490acbaaecbe567606e69e8>@@V<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@V?$View@PEBNNU?$List@U?$P@$0CA@$0BA@@@U?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@@Z ENDP ; hof::rnz<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >,<lambda_82709c2af490acbaaecbe567606e69e8>,<lambda_7ef7f5917424a38ce3010ad89fbaf103>,double const * __ptr64,double,List<P<32,16>,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@_K@Z PROC ; View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > >::operator[], COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	shl	r8, 13
	add	r8, QWORD PTR [rcx+8]

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx+8], r8

; 31   :     }

	ret	0
??A?$View@PEBNNU?$List@U?$P@$0CA@$0CAAA@@@U?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@_K@Z ENDP ; View<double const * __ptr64,double,List<P<32,8192>,List<P<16,1>,List<P<16,512>,EmptyList> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
_TEXT	SEGMENT
$T5 = 48
$T13 = 64
$T15 = 80
$T17 = 96
$T18 = 112
$T19 = 128
$T20 = 144
$T6 = 160
this$ = 224
result$ = 232
bA$ = 240
bB$ = 248
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z PROC ; <lambda_7ef7f5917424a38ce3010ad89fbaf103>::operator()<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > > >, COMDAT

; 170  :                 [&](auto result, auto bA, auto bB) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 176				; 000000b0H

; 171  :                         map(result, [&](auto result, auto r) {

	movups	xmm1, XMMWORD PTR [r8]

; 174  :                                 bB); },

	mov	r14, QWORD PTR [rcx]

; 170  :                 [&](auto result, auto bA, auto bB) {

	mov	r13, r9

; 171  :                         map(result, [&](auto result, auto r) {

	movups	xmm0, XMMWORD PTR [rdx]
	mov	r15d, 16
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T5[rsp], xmm1

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T15[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 171  :                         map(result, [&](auto result, auto r) {

	psrldq	xmm0, 8
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	psrldq	xmm1, 8
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 171  :                         map(result, [&](auto result, auto r) {

	movq	rbp, xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	movq	r12, xmm1
	sub	r12, rbp
	npad	11
$LL8@operator:
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 172  :                             map(result, [&](auto result, auto c) {

	movups	xmm0, XMMWORD PTR [r13]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	lea	rax, QWORD PTR [r12+rbp]
	mov	rbx, rbp
	mov	QWORD PTR $T5[rsp+8], rax
	mov	edi, 16
; File d:\documents\dev\lambdagen\view\view\hof.h

; 10   :             f(result[i], v[i]);

	movaps	xmm1, XMMWORD PTR $T5[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T13[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	psrldq	xmm0, 8
	movq	rsi, xmm0

; 10   :             f(result[i], v[i]);

	movaps	XMMWORD PTR $T6[rsp], xmm1

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	sub	rsi, rbp
	npad	10
$LL25@operator:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	lea	rax, QWORD PTR [rsi+rbx]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movdqa	XMMWORD PTR $T18[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T13[rsp+8], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	lea	rdx, QWORD PTR $T19[rsp]
	movaps	xmm0, XMMWORD PTR $T13[rsp]
	lea	rax, QWORD PTR $T17[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rcx, QWORD PTR $T20[rsp]
	movdqa	XMMWORD PTR $T17[rsp], xmm0
	lea	rax, QWORD PTR $T18[rsp]
	movups	xmm0, XMMWORD PTR [r14]
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T15[rsp+8], rbx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movaps	xmm1, XMMWORD PTR $T15[rsp]
	movaps	XMMWORD PTR $T19[rsp], xmm0
	movdqa	XMMWORD PTR $T20[rsp], xmm1
	mov	QWORD PTR [rsp+32], rax
	call	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	inc	rbx
	sub	rdi, 1
	je	SHORT $LN48@operator
	movaps	xmm1, XMMWORD PTR $T6[rsp]
	jmp	SHORT $LL25@operator
$LN48@operator:
	add	rbp, 512				; 00000200H
	sub	r15, 1
	jne	$LL8@operator
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 175  :                             bA); },

	lea	r11, QWORD PTR [rsp+176]
	mov	rbx, QWORD PTR [r11+48]
	mov	rbp, QWORD PTR [r11+56]
	mov	rsi, QWORD PTR [r11+64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z ENDP ; <lambda_7ef7f5917424a38ce3010ad89fbaf103>::operator()<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??0<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
_TEXT	SEGMENT
this$ = 8
<tmp>$ = 16
<bB>$ = 24
??0<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z PROC ; <lambda_eb40f87bcb40b8de81a9cd57a38429ae>::<lambda_eb40f87bcb40b8de81a9cd57a38429ae>, COMDAT

; 174  :                                 bB); },

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z ENDP ; <lambda_eb40f87bcb40b8de81a9cd57a38429ae>::<lambda_eb40f87bcb40b8de81a9cd57a38429ae>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
_TEXT	SEGMENT
$T5 = 48
$T13 = 64
$T15 = 80
$T17 = 96
$T18 = 112
$T19 = 128
$T20 = 144
$T6 = 160
this$ = 224
result$ = 232
bA$ = 240
bB$ = 248
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z PROC ; <lambda_7ef7f5917424a38ce3010ad89fbaf103>::operator()<View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > > >, COMDAT

; 170  :                 [&](auto result, auto bA, auto bB) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 176				; 000000b0H

; 171  :                         map(result, [&](auto result, auto r) {

	movups	xmm1, XMMWORD PTR [r8]

; 174  :                                 bB); },

	mov	r15, QWORD PTR [rcx]

; 170  :                 [&](auto result, auto bA, auto bB) {

	mov	r13, r9

; 171  :                         map(result, [&](auto result, auto r) {

	movups	xmm0, XMMWORD PTR [rdx]
	mov	r12d, 16
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T5[rsp], xmm1

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T15[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 171  :                         map(result, [&](auto result, auto r) {

	psrldq	xmm0, 8
	psrldq	xmm1, 8
	movq	rbp, xmm0
	movq	r14, xmm1
$LL8@operator:

; 172  :                             map(result, [&](auto result, auto c) {

	movups	xmm0, XMMWORD PTR [r13]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T5[rsp+8], r14
	mov	rbx, rbp
; File d:\documents\dev\lambdagen\view\view\hof.h

; 10   :             f(result[i], v[i]);

	movaps	xmm1, XMMWORD PTR $T5[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	edi, 16
	movq	QWORD PTR $T13[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	psrldq	xmm0, 8
	movq	rsi, xmm0

; 10   :             f(result[i], v[i]);

	movaps	XMMWORD PTR $T6[rsp], xmm1

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	sub	rsi, rbp
	npad	12
$LL25@operator:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	lea	rax, QWORD PTR [rsi+rbx]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movdqa	XMMWORD PTR $T18[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T13[rsp+8], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	lea	rdx, QWORD PTR $T19[rsp]
	movaps	xmm0, XMMWORD PTR $T13[rsp]
	lea	rax, QWORD PTR $T17[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rcx, QWORD PTR $T20[rsp]
	movdqa	XMMWORD PTR $T17[rsp], xmm0
	lea	rax, QWORD PTR $T18[rsp]
	movups	xmm0, XMMWORD PTR [r15]
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T15[rsp+8], rbx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movaps	xmm1, XMMWORD PTR $T15[rsp]
	movaps	XMMWORD PTR $T19[rsp], xmm0
	movdqa	XMMWORD PTR $T20[rsp], xmm1
	mov	QWORD PTR [rsp+32], rax
	call	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	inc	rbx
	sub	rdi, 1
	je	SHORT $LN48@operator
	movaps	xmm1, XMMWORD PTR $T6[rsp]
	jmp	SHORT $LL25@operator
$LN48@operator:
	add	r14, 512				; 00000200H
	add	rbp, 16
	sub	r12, 1
	jne	$LL8@operator
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 175  :                             bA); },

	lea	r11, QWORD PTR [rsp+176]
	mov	rbx, QWORD PTR [r11+48]
	mov	rbp, QWORD PTR [r11+56]
	mov	rsi, QWORD PTR [r11+64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@<lambda_7ef7f5917424a38ce3010ad89fbaf103>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z ENDP ; <lambda_7ef7f5917424a38ce3010ad89fbaf103>::operator()<View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??0<lambda_34aff3510488d97e7cf1c072c51f11e0>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
_TEXT	SEGMENT
this$ = 8
<tmp>$ = 16
<bB>$ = 24
??0<lambda_34aff3510488d97e7cf1c072c51f11e0>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z PROC ; <lambda_34aff3510488d97e7cf1c072c51f11e0>::<lambda_34aff3510488d97e7cf1c072c51f11e0>, COMDAT

; 174  :                                 bB); },

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0<lambda_34aff3510488d97e7cf1c072c51f11e0>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z ENDP ; <lambda_34aff3510488d97e7cf1c072c51f11e0>::<lambda_34aff3510488d97e7cf1c072c51f11e0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V0@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@<lambda_82709c2af490acbaaecbe567606e69e8>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z
_TEXT	SEGMENT
$T5 = 32
$T7 = 48
$T9 = 64
$T11 = 80
$T12 = 96
$T13 = 112
this$dead$ = 144
result$ = 152
b1$ = 160
b2$ = 168
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V0@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@<lambda_82709c2af490acbaaecbe567606e69e8>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z PROC ; <lambda_82709c2af490acbaaecbe567606e69e8>::operator()<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > > >, COMDAT

; 166  :                 [&](auto result, auto b1, auto b2) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 128				; 00000080H

; 167  :                 zip(result, [&](auto result, auto r1, auto r2) {

	movups	xmm2, XMMWORD PTR [r8]
	mov	eax, 16
	movups	xmm0, XMMWORD PTR [rdx]
	movups	xmm1, XMMWORD PTR [r9]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T7[rsp], xmm2
	movq	QWORD PTR $T9[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 167  :                 zip(result, [&](auto result, auto r1, auto r2) {

	psrldq	xmm0, 8
; File d:\documents\dev\lambdagen\view\view\hof.h

; 24   :         for (size_t i = 0; i < D::head::dim; ++i) {

	psrldq	xmm2, 8
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 167  :                 zip(result, [&](auto result, auto r1, auto r2) {

	movq	rbx, xmm0
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T5[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\hof.h

; 24   :         for (size_t i = 0; i < D::head::dim; ++i) {

	movq	rsi, xmm2
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 167  :                 zip(result, [&](auto result, auto r1, auto r2) {

	psrldq	xmm1, 8
; File d:\documents\dev\lambdagen\view\view\hof.h

; 24   :         for (size_t i = 0; i < D::head::dim; ++i) {

	sub	rsi, rbx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 167  :                 zip(result, [&](auto result, auto r1, auto r2) {

	movq	rdi, xmm1
	npad	11
$LL6@operator:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	lea	rcx, QWORD PTR [rsi+rbx]
	mov	QWORD PTR $T5[rsp+8], rdi
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 168  :                     zip(result, add, r1, r2); },

	movaps	xmm0, XMMWORD PTR $T5[rsp]
	lea	r9, QWORD PTR $T11[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T7[rsp+8], rcx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 168  :                     zip(result, add, r1, r2); },

	lea	r8, QWORD PTR $T12[rsp]
	movaps	xmm1, XMMWORD PTR $T7[rsp]
	lea	rcx, QWORD PTR $T13[rsp]
	movdqa	XMMWORD PTR $T11[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T9[rsp+8], rbx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 168  :                     zip(result, add, r1, r2); },

	movaps	xmm0, XMMWORD PTR $T9[rsp]
	movdqa	XMMWORD PTR $T13[rsp], xmm0
	movdqa	XMMWORD PTR $T12[rsp], xmm1
	call	??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V1@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@00@Z ; hof::zip<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,double * __ptr64,double,List<P<16,1>,EmptyList>,View<double * __ptr64,double,List<P<16,1>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 24   :         for (size_t i = 0; i < D::head::dim; ++i) {

	add	rdi, 16
	add	rbx, 512				; 00000200H
	sub	rax, 1
	jne	SHORT $LL6@operator
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 169  :                     b1, b2); },

	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	mov	rsp, r11
	pop	rdi
	ret	0
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V0@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@<lambda_82709c2af490acbaaecbe567606e69e8>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z ENDP ; <lambda_82709c2af490acbaaecbe567606e69e8>::operator()<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$_Distance1@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YA_JPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
__formal$dead$ = 24
??$_Distance1@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YA_JPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0Urandom_access_iterator_tag@0@@Z PROC ; std::_Distance1<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>, COMDAT

; 1100 : 	return (_Last - _First);

	sub	rdx, rcx
	sar	rdx, 5
	mov	rax, rdx

; 1101 : 	}

	ret	0
??$_Distance1@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YA_JPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0Urandom_access_iterator_tag@0@@Z ENDP ; std::_Distance1<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z
_TEXT	SEGMENT
__$ArrayPad$ = 48
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
??$_Uninitialized_copy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >, COMDAT

; 116  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

$LN17:
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 117  : 		// note: only called internally from elsewhere in the STL, debug checks
; 118  : 		// and deprecation warnings omitted
; 119  : 	const auto _UFirst = _Unchecked(_First);
; 120  : 	const auto _ULast = _Unchecked(_Last);
; 121  : 	const auto _UDest = _Unchecked(_Dest);
; 122  : 	return (_Rechecked(_Dest,

	call	??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z ; std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >

; 123  : 		_Uninitialized_copy_al_unchecked(_UFirst, _ULast, _UDest, _Al,
; 124  : 			_Ptr_copy_cat(_UFirst, _UDest),
; 125  : 			_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_UDest)), decltype(*_UFirst)>())));
; 126  : 	}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
??$_Uninitialized_copy@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
;	COMDAT ??$_Zero_range@PEAN@std@@YAPEANPEAN0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Zero_range@PEAN@std@@YAPEANPEAN0@Z PROC		; std::_Zero_range<double * __ptr64>, COMDAT

; 230  : 	{	// fill [_First, _Last) with zeroes

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 231  : 	char * const _First_ch = reinterpret_cast<char *>(_First);
; 232  : 	char * const _Last_ch = reinterpret_cast<char *>(_Last);
; 233  : 	_CSTD memset(_First_ch, 0, _Last_ch - _First_ch);

	mov	r8, rdx
	mov	rbx, rdx
	sub	r8, rcx
	xor	edx, edx
	call	memset

; 234  : 	return (_Last);

	mov	rax, rbx

; 235  : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Zero_range@PEAN@std@@YAPEANPEAN0@Z ENDP		; std::_Zero_range<double * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xstddef
;	COMDAT ??$_Unfancy@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEAU10@@Z PROC ; std::_Unfancy<std::pair<std::vector<double,std::allocator<double> >,double> >, COMDAT

; 265  : 	return (_Ptr);

	mov	rax, rcx

; 266  : 	}

	ret	0
??$_Unfancy@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEAU10@@Z ENDP ; std::_Unfancy<std::pair<std::vector<double,std::allocator<double> >,double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ??$destroy@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$destroy@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::destroy<std::pair<std::vector<double,std::allocator<double> >,double> >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 921  : 		_Tidy();

	mov	rcx, rdx
	jmp	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
??$destroy@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::destroy<std::pair<std::vector<double,std::allocator<double> >,double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??$?0V?$allocator@N@std@@X@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAA@$$QEAV?$allocator@N@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$dead$ = 16
??$?0V?$allocator@N@std@@X@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAA@$$QEAV?$allocator@N@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > ><std::allocator<double>,void>, COMDAT

; 434  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 435  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 436  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax

; 476  : 		}

	mov	rax, rcx
	ret	0
??$?0V?$allocator@N@std@@X@?$_Vector_alloc@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QEAA@$$QEAV?$allocator@N@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > >::_Vector_alloc<std::_Vec_base_types<double,std::allocator<double> > ><std::allocator<double>,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??$_Ucopy@PEAN@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z
_TEXT	SEGMENT
this$dead$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Ucopy@PEAN@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z PROC ; std::vector<double,std::allocator<double> >::_Ucopy<double * __ptr64>, COMDAT

; 1913 : 		{	// copy [_First, _Last) to raw _Dest, using allocator

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility

; 2244 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, r9
	sub	rbx, rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1913 : 		{	// copy [_First, _Last) to raw _Dest, using allocator

	mov	rdi, r9
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility

; 2244 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, rbx
	call	QWORD PTR __imp_memmove

; 2245 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 1915 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Ucopy@PEAN@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z ENDP ; std::vector<double,std::allocator<double> >::_Ucopy<double * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
;	COMDAT ??_G?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAAPEAXI@Z PROC ; std::pair<std::vector<double,std::allocator<double> >,double>::`scalar deleting destructor', COMDAT
$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 921  : 		_Tidy();

	call	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAAPEAXI@Z ENDP ; std::pair<std::vector<double,std::allocator<double> >,double>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@QEAA@AEBQEBN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$ = 24
??0?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@QEAA@AEBQEBN_K@Z PROC ; View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > >::View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@QEAA@AEBQEBN_K@Z ENDP ; View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > >::View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
;	COMDAT ??$map@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z
_TEXT	SEGMENT
$T1 = 48
$T9 = 64
$T11 = 80
$T13 = 96
$T14 = 112
$T15 = 128
$T16 = 144
$T2 = 160
result$ = 224
f$ = 232
v$ = 240
??$map@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z PROC ; hof::map<<lambda_eb40f87bcb40b8de81a9cd57a38429ae>,double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> >,double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >, COMDAT

; 7    :     void map(View<PB, B, DB> result, F f, View<PA, A, DA> v) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 176				; 000000b0H
	mov	r15, r8
	mov	r12, rdx
	mov	r13, rcx

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	xor	esi, esi
	npad	6
$LL4@map:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [r15]
	mov	edi, 16

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rcx, QWORD PTR [r15+8]
	mov	rbx, QWORD PTR [r13+8]
	add	rcx, rsi
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	mov	rbp, QWORD PTR [r12]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rbx, rsi

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T1[rsp], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 172  :                             map(result, [&](auto result, auto c) {

	mov	rax, QWORD PTR [r12+8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	QWORD PTR $T1[rsp+8], rcx
; File d:\documents\dev\lambdagen\view\view\hof.h

; 10   :             f(result[i], v[i]);

	movaps	xmm1, XMMWORD PTR $T1[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rcx, QWORD PTR [r13]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 10   :             f(result[i], v[i]);

	movaps	XMMWORD PTR $T2[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 172  :                             map(result, [&](auto result, auto c) {

	movups	xmm0, XMMWORD PTR [rax]
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T11[rsp], rcx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T9[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	psrldq	xmm0, 8
	movq	r14, xmm0
	sub	r14, rbx
	npad	11
$LL21@map:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	lea	rax, QWORD PTR [r14+rbx]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movdqa	XMMWORD PTR $T14[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T9[rsp+8], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	lea	rdx, QWORD PTR $T15[rsp]
	movaps	xmm0, XMMWORD PTR $T9[rsp]
	lea	rax, QWORD PTR $T13[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rcx, QWORD PTR $T16[rsp]
	movdqa	XMMWORD PTR $T13[rsp], xmm0
	lea	rax, QWORD PTR $T14[rsp]
	movups	xmm0, XMMWORD PTR [rbp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T11[rsp+8], rbx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movaps	xmm1, XMMWORD PTR $T11[rsp]
	movaps	XMMWORD PTR $T15[rsp], xmm0
	movdqa	XMMWORD PTR $T16[rsp], xmm1
	mov	QWORD PTR [rsp+32], rax
	call	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	inc	rbx
	sub	rdi, 1
	je	SHORT $LN44@map
	movaps	xmm1, XMMWORD PTR $T2[rsp]
	jmp	SHORT $LL21@map
$LN44@map:
	add	rsi, 512				; 00000200H
	cmp	rsi, 8192				; 00002000H
	jb	$LL4@map

; 11   :         }
; 12   :     }

	lea	r11, QWORD PTR [rsp+176]
	mov	rbx, QWORD PTR [r11+48]
	mov	rbp, QWORD PTR [r11+56]
	mov	rsi, QWORD PTR [r11+64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
??$map@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU2@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z ENDP ; hof::map<<lambda_eb40f87bcb40b8de81a9cd57a38429ae>,double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> >,double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z
_TEXT	SEGMENT
$T5 = 48
$T7 = 64
$T9 = 80
$T10 = 96
$T11 = 112
$T12 = 128
this$ = 160
result$ = 168
r$ = 176
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z PROC ; <lambda_eb40f87bcb40b8de81a9cd57a38429ae>::operator()<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,View<double const * __ptr64,double,List<P<16,1>,EmptyList> > >, COMDAT

; 171  :                         map(result, [&](auto result, auto r) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 144				; 00000090H

; 172  :                             map(result, [&](auto result, auto c) {

	movups	xmm0, XMMWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx+8]
	mov	rbp, r8

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	mov	r14, QWORD PTR [rcx]

; 172  :                             map(result, [&](auto result, auto c) {

	mov	edi, 16
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T7[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 172  :                             map(result, [&](auto result, auto c) {

	psrldq	xmm0, 8
	movups	xmm1, XMMWORD PTR [rax]
	movq	rbx, xmm0
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T5[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	psrldq	xmm1, 8
	movq	rsi, xmm1
	sub	rsi, rbx
	npad	11
$LL8@operator:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	lea	rax, QWORD PTR [rsi+rbx]

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T7[rsp+8], rbx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movaps	xmm1, XMMWORD PTR $T7[rsp]
	lea	rdx, QWORD PTR $T11[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T5[rsp+8], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	lea	rcx, QWORD PTR $T12[rsp]
	movaps	xmm0, XMMWORD PTR $T5[rsp]
	lea	rax, QWORD PTR $T9[rsp]
	movdqa	XMMWORD PTR $T9[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rbp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR $T10[rsp]
	movdqa	XMMWORD PTR $T12[rsp], xmm1
	movaps	XMMWORD PTR $T10[rsp], xmm0
	movups	xmm0, XMMWORD PTR [r14]
	mov	QWORD PTR [rsp+32], rax
	movaps	XMMWORD PTR $T11[rsp], xmm0
	call	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	inc	rbx
	sub	rdi, 1
	jne	SHORT $LL8@operator
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 174  :                                 bB); },

	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rdi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	r14
	ret	0
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_eb40f87bcb40b8de81a9cd57a38429ae>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z ENDP ; <lambda_eb40f87bcb40b8de81a9cd57a38429ae>::operator()<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,View<double const * __ptr64,double,List<P<16,1>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??0<lambda_87ccf09596cd73ff58e95777441719b2>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z
_TEXT	SEGMENT
this$ = 8
<tmp>$ = 16
<r>$ = 24
??0<lambda_87ccf09596cd73ff58e95777441719b2>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z PROC ; <lambda_87ccf09596cd73ff58e95777441719b2>::<lambda_87ccf09596cd73ff58e95777441719b2>, COMDAT

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0<lambda_87ccf09596cd73ff58e95777441719b2>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z ENDP ; <lambda_87ccf09596cd73ff58e95777441719b2>::<lambda_87ccf09596cd73ff58e95777441719b2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
;	COMDAT ??$map@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z
_TEXT	SEGMENT
$T1 = 48
$T9 = 64
$T11 = 80
$T13 = 96
$T14 = 112
$T15 = 128
$T16 = 144
$T2 = 160
result$ = 224
f$ = 232
v$ = 240
??$map@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z PROC ; hof::map<<lambda_34aff3510488d97e7cf1c072c51f11e0>,double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> >,double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >, COMDAT

; 7    :     void map(View<PB, B, DB> result, F f, View<PA, A, DA> v) {

	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 176				; 000000b0H

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	xor	r14d, r14d
	mov	r13, rdx
	mov	esi, r14d
	mov	r12, r8
	mov	rdx, rcx
	npad	13
$LL4@map:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [r12]
	mov	edi, 16

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rcx, QWORD PTR [r12+8]
	mov	rbx, QWORD PTR [rdx+8]
	add	rcx, rsi
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	mov	rbp, QWORD PTR [r13]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rbx, r14

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T1[rsp], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 172  :                             map(result, [&](auto result, auto c) {

	mov	rax, QWORD PTR [r13+8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	QWORD PTR $T1[rsp+8], rcx
; File d:\documents\dev\lambdagen\view\view\hof.h

; 10   :             f(result[i], v[i]);

	movaps	xmm1, XMMWORD PTR $T1[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rcx, QWORD PTR [rdx]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 10   :             f(result[i], v[i]);

	movaps	XMMWORD PTR $T2[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 172  :                             map(result, [&](auto result, auto c) {

	movups	xmm0, XMMWORD PTR [rax]
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T11[rsp], rcx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T9[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	psrldq	xmm0, 8
	movq	r15, xmm0
	sub	r15, rbx
	npad	11
$LL21@map:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	lea	rax, QWORD PTR [r15+rbx]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movdqa	XMMWORD PTR $T14[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T9[rsp+8], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	lea	rdx, QWORD PTR $T15[rsp]
	movaps	xmm0, XMMWORD PTR $T9[rsp]
	lea	rax, QWORD PTR $T13[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rcx, QWORD PTR $T16[rsp]
	movdqa	XMMWORD PTR $T13[rsp], xmm0
	lea	rax, QWORD PTR $T14[rsp]
	movups	xmm0, XMMWORD PTR [rbp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T11[rsp+8], rbx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movaps	xmm1, XMMWORD PTR $T11[rsp]
	movaps	XMMWORD PTR $T15[rsp], xmm0
	movdqa	XMMWORD PTR $T16[rsp], xmm1
	mov	QWORD PTR [rsp+32], rax
	call	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	inc	rbx
	sub	rdi, 1
	je	SHORT $LN44@map
	movaps	xmm1, XMMWORD PTR $T2[rsp]
	jmp	SHORT $LL21@map
$LN44@map:
	mov	rdx, QWORD PTR result$[rsp]
	add	rsi, 512				; 00000200H
	add	r14, 16
	cmp	rsi, 8192				; 00002000H
	jb	$LL4@map

; 11   :         }
; 12   :     }

	lea	r11, QWORD PTR [rsp+176]
	mov	rbx, QWORD PTR [r11+56]
	mov	rbp, QWORD PTR [r11+64]
	mov	rsi, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
??$map@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_34aff3510488d97e7cf1c072c51f11e0>@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z ENDP ; hof::map<<lambda_34aff3510488d97e7cf1c072c51f11e0>,double const * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> >,double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@_K@Z PROC ; View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >::operator[], COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	shl	r8, 4
	add	r8, QWORD PTR [rcx+8]

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx+8], r8

; 31   :     }

	ret	0
??A?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@QEBA?AV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@_K@Z ENDP ; View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_34aff3510488d97e7cf1c072c51f11e0>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z
_TEXT	SEGMENT
$T5 = 48
$T7 = 64
$T9 = 80
$T10 = 96
$T11 = 112
$T12 = 128
this$ = 160
result$ = 168
r$ = 176
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_34aff3510488d97e7cf1c072c51f11e0>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z PROC ; <lambda_34aff3510488d97e7cf1c072c51f11e0>::operator()<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,View<double const * __ptr64,double,List<P<16,1>,EmptyList> > >, COMDAT

; 171  :                         map(result, [&](auto result, auto r) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 144				; 00000090H

; 172  :                             map(result, [&](auto result, auto c) {

	movups	xmm0, XMMWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx+8]
	mov	rbp, r8

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	mov	r14, QWORD PTR [rcx]

; 172  :                             map(result, [&](auto result, auto c) {

	mov	edi, 16
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T7[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 172  :                             map(result, [&](auto result, auto c) {

	psrldq	xmm0, 8
	movups	xmm1, XMMWORD PTR [rax]
	movq	rbx, xmm0
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	movq	QWORD PTR $T5[rsp], xmm1
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	psrldq	xmm1, 8
	movq	rsi, xmm1
	sub	rsi, rbx
	npad	11
$LL8@operator:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	lea	rax, QWORD PTR [rsi+rbx]

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T7[rsp+8], rbx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movaps	xmm1, XMMWORD PTR $T7[rsp]
	lea	rdx, QWORD PTR $T11[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T5[rsp+8], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	lea	rcx, QWORD PTR $T12[rsp]
	movaps	xmm0, XMMWORD PTR $T5[rsp]
	lea	rax, QWORD PTR $T9[rsp]
	movdqa	XMMWORD PTR $T9[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rbp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR $T10[rsp]
	movdqa	XMMWORD PTR $T12[rsp], xmm1
	movaps	XMMWORD PTR $T10[rsp], xmm0
	movups	xmm0, XMMWORD PTR [r14]
	mov	QWORD PTR [rsp+32], rax
	movaps	XMMWORD PTR $T11[rsp], xmm0
	call	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	inc	rbx
	sub	rdi, 1
	jne	SHORT $LL8@operator
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 174  :                                 bB); },

	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rdi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	r14
	ret	0
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@<lambda_34aff3510488d97e7cf1c072c51f11e0>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z ENDP ; <lambda_34aff3510488d97e7cf1c072c51f11e0>::operator()<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,View<double const * __ptr64,double,List<P<16,1>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??0<lambda_1273283c9775fef46ee1404488bda320>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z
_TEXT	SEGMENT
this$ = 8
<tmp>$ = 16
<r>$ = 24
??0<lambda_1273283c9775fef46ee1404488bda320>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z PROC ; <lambda_1273283c9775fef46ee1404488bda320>::<lambda_1273283c9775fef46ee1404488bda320>, COMDAT

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0<lambda_1273283c9775fef46ee1404488bda320>@@QEAA@AEAV?$View@PEANNUEmptyList@@@@AEAV?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@Z ENDP ; <lambda_1273283c9775fef46ee1404488bda320>::<lambda_1273283c9775fef46ee1404488bda320>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
;	COMDAT ??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z
_TEXT	SEGMENT
$T1 = 32
$T3 = 48
$T5 = 64
$T7 = 80
$T8 = 96
$T9 = 112
result$ = 144
f$dead$ = 152
v1$ = 160
<v_0>$ = 168
??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z PROC ; hof::zip<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,<lambda_b1116c9adf3516ba3c36d924ce54a452>,double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> >,View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > > >, COMDAT

; 23   :     void zip(R result, F f, View<P, A, D> v1, V... v) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	mov	QWORD PTR [rsp+32], r14
	push	r15
	sub	rsp, 128				; 00000080H

; 24   :         for (size_t i = 0; i < D::head::dim; ++i) {

	xor	ebx, ebx
	mov	rsi, r9
	mov	edi, ebx
	mov	r14, r8
	mov	r15, rcx
	npad	6
$LL4@zip:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rsi]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 168  :                     zip(result, add, r1, r2); },

	lea	r9, QWORD PTR $T7[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rcx, QWORD PTR [rsi+8]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 168  :                     zip(result, add, r1, r2); },

	lea	r8, QWORD PTR $T8[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rdi

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR [r14]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	QWORD PTR $T1[rsp+8], rcx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 168  :                     zip(result, add, r1, r2); },

	movaps	xmm0, XMMWORD PTR $T1[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rcx, QWORD PTR [r14+8]
	add	rcx, rbx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T3[rsp], rax
	mov	rax, QWORD PTR [r15]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	QWORD PTR $T3[rsp+8], rcx
	mov	rcx, QWORD PTR [r15+8]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 168  :                     zip(result, add, r1, r2); },

	movaps	xmm1, XMMWORD PTR $T3[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rbx
	mov	QWORD PTR $T5[rsp+8], rcx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 168  :                     zip(result, add, r1, r2); },

	lea	rcx, QWORD PTR $T9[rsp]
	movdqa	XMMWORD PTR $T7[rsp], xmm0
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T5[rsp], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 168  :                     zip(result, add, r1, r2); },

	movaps	xmm0, XMMWORD PTR $T5[rsp]
	movdqa	XMMWORD PTR $T9[rsp], xmm0
	movdqa	XMMWORD PTR $T8[rsp], xmm1
	call	??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V1@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@00@Z ; hof::zip<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,double * __ptr64,double,List<P<16,1>,EmptyList>,View<double * __ptr64,double,List<P<16,1>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 24   :         for (size_t i = 0; i < D::head::dim; ++i) {

	add	rdi, 16
	add	rbx, 512				; 00000200H
	cmp	rdi, 256				; 00000100H
	jb	$LL4@zip

; 25   :             f(result[i], v1[i], v[i]...);
; 26   :         }
; 27   :     }

	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	mov	rdi, QWORD PTR [r11+32]
	mov	r14, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	r15
	ret	0
??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$0CAA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@V<lambda_b1116c9adf3516ba3c36d924ce54a452>@@0V?$View@PEANNU?$List@U?$P@$0BA@$0BA@@@U?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@@@@Z ENDP ; hof::zip<View<double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> > >,<lambda_b1116c9adf3516ba3c36d924ce54a452>,double * __ptr64,double,List<P<16,512>,List<P<16,1>,EmptyList> >,View<double * __ptr64,double,List<P<16,16>,List<P<16,1>,EmptyList> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V0@V0@@<lambda_b1116c9adf3516ba3c36d924ce54a452>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@00@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
this$dead$ = 96
result$ = 104
r1$ = 112
r2$ = 120
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V0@V0@@<lambda_b1116c9adf3516ba3c36d924ce54a452>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@00@Z PROC ; <lambda_b1116c9adf3516ba3c36d924ce54a452>::operator()<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,View<double * __ptr64,double,List<P<16,1>,EmptyList> >,View<double * __ptr64,double,List<P<16,1>,EmptyList> > >, COMDAT

; 167  :                 zip(result, [&](auto result, auto r1, auto r2) {

	sub	rsp, 88					; 00000058H

; 168  :                     zip(result, add, r1, r2); },

	movups	xmm0, XMMWORD PTR [r9]
	lea	r9, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	movups	xmm0, XMMWORD PTR [r8]
	lea	r8, QWORD PTR $T2[rsp]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rdx]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	call	??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V1@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@00@Z ; hof::zip<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,double * __ptr64,double,List<P<16,1>,EmptyList>,View<double * __ptr64,double,List<P<16,1>,EmptyList> > >
	add	rsp, 88					; 00000058H
	ret	0
??$?RV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V0@V0@@<lambda_b1116c9adf3516ba3c36d924ce54a452>@@QEBAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@00@Z ENDP ; <lambda_b1116c9adf3516ba3c36d924ce54a452>::operator()<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,View<double * __ptr64,double,List<P<16,1>,EmptyList> >,View<double * __ptr64,double,List<P<16,1>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$_Unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@@Z
_TEXT	SEGMENT
_Src$ = 8
??$_Unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@@Z PROC ; std::_Unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>, COMDAT

; 450  : 	return (_Src);

	mov	rax, rcx

; 451  : 	}

	ret	0
??$_Unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAPEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@@Z ENDP ; std::_Unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$_Unchecked@PEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEAU10@@Z
_TEXT	SEGMENT
_Src$ = 8
??$_Unchecked@PEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEAU10@@Z PROC ; std::_Unchecked<std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64>, COMDAT

; 450  : 	return (_Src);

	mov	rax, rcx

; 451  : 	}

	ret	0
??$_Unchecked@PEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEAU10@@Z ENDP ; std::_Unchecked<std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$_Ptr_copy_cat@$$CBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@U12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEBQEAU20@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
??$_Ptr_copy_cat@$$CBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@U12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEBQEAU20@@Z PROC ; std::_Ptr_copy_cat<std::pair<std::vector<double,std::allocator<double> >,double> const ,std::pair<std::vector<double,std::allocator<double> >,double> >, COMDAT

; 872  : 	return {};

	xor	eax, eax

; 873  : 	}

	ret	0
??$_Ptr_copy_cat@$$CBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@U12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEBQEAU20@@Z ENDP ; std::_Ptr_copy_cat<std::pair<std::vector<double,std::allocator<double> >,double> const ,std::pair<std::vector<double,std::allocator<double> >,double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
_TEXT	SEGMENT
$T4 = 32
$T1 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
__formal$dead$ = 120
??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >, COMDAT

; 86   : 	{	// copy [_First, _Last) to raw _Dest, using _Al, no special optimization

$LN28:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T4[rsp], -2
	mov	rbx, r8
	mov	rsi, rdx
	mov	rdi, rcx

; 87   : 	_FwdIt _Next = _Dest;

	mov	QWORD PTR _Next$[rsp], rbx
$LL4@Uninitiali:

; 90   : 	for (; _First != _Last; ++_Dest, (void)++_First)

	cmp	rdi, rsi
	je	SHORT $LN3@Uninitiali
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 855  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	QWORD PTR $T1[rsp], rbx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 256  : }

	mov	rdx, rdi
	mov	rcx, rbx
	call	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
	mov	rax, QWORD PTR [rdi+24]
	mov	QWORD PTR [rbx+24], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory

; 90   : 	for (; _First != _Last; ++_Dest, (void)++_First)

	add	rbx, 32					; 00000020H
	mov	QWORD PTR _Dest$[rsp], rbx
	add	rdi, 32					; 00000020H
	jmp	SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 91   : 		{
; 92   : 		allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Dest), *_First);
; 93   : 		}
; 94   : 
; 95   : 	_CATCH_ALL
; 96   : 	_Destroy_range(_Next, _Dest, _Al);
; 97   : 	_RERAISE;
; 98   : 	_CATCH_END
; 99   : 
; 100  : 	return (_Dest);

	mov	rax, rbx

; 101  : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
$LN27@Uninitiali:
??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T4 = 32
$T1 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
__formal$dead$ = 120
?dtor$0@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA PROC ; `std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rdx, QWORD PTR _Dest$[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX0@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA ENDP ; `std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >'::`1'::dtor$0
$T4 = 32
$T1 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
__formal$dead$ = 120
?catch$3@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA PROC ; `std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >'::`1'::catch$3

; 91   : 		{
; 92   : 		allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Dest), *_First);
; 93   : 		}
; 94   : 
; 95   : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z$0:

; 91   : 		{
; 92   : 		allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Dest), *_First);
; 93   : 		}
; 94   : 
; 95   : 	_CATCH_ALL
; 96   : 	_Destroy_range(_Next, _Dest, _Al);

	mov	rdx, QWORD PTR _Dest$[rbp]
	mov	rcx, QWORD PTR _Next$[rbp]
	call	??$_Destroy_range@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >

; 91   : 		{
; 92   : 		allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Dest), *_First);
; 93   : 		}
; 94   : 
; 95   : 	_CATCH_ALL
; 96   : 	_Destroy_range(_Next, _Dest, _Al);
; 97   : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$3@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA ENDP ; `std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >'::`1'::catch$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 32
$T1 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
__formal$dead$ = 120
?dtor$0@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA PROC ; `std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rdx, QWORD PTR _Dest$[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX0@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA ENDP ; `std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 32
$T1 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
__formal$dead$ = 120
?catch$3@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA PROC ; `std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >'::`1'::catch$3

; 95   : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z$0:

; 96   : 	_Destroy_range(_Next, _Dest, _Al);

	mov	rdx, QWORD PTR _Dest$[rbp]
	mov	rcx, QWORD PTR _Next$[rbp]
	call	??$_Destroy_range@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@0AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >

; 97   : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$3@?0???$_Uninitialized_copy_al_unchecked@PEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@2@@std@@YAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@PEBU10@0PEAU10@AEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z@4HA ENDP ; `std::_Uninitialized_copy_al_unchecked<std::pair<std::vector<double,std::allocator<double> >,double> const * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >'::`1'::catch$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$?0U?$integral_constant@_N$00@std@@@_Unused_parameter@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0U?$integral_constant@_N$00@std@@@_Unused_parameter@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z PROC ; std::_Unused_parameter::_Unused_parameter<std::integral_constant<bool,1> >, COMDAT

; 551  : 		constexpr _Unused_parameter(_Ty&&) _NOEXCEPT {}

	mov	rax, rcx
	ret	0
??$?0U?$integral_constant@_N$00@std@@@_Unused_parameter@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z ENDP ; std::_Unused_parameter::_Unused_parameter<std::integral_constant<bool,1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$_Rechecked@PEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@@std@@YAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEAPEAU10@PEAU10@@Z
_TEXT	SEGMENT
_Dest$ = 8
_Src$ = 16
??$_Rechecked@PEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@@std@@YAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEAPEAU10@PEAU10@@Z PROC ; std::_Rechecked<std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64>, COMDAT

; 481  : 	_Dest = _Src;

	mov	QWORD PTR [rcx], rdx

; 482  : 	return (_Dest);

	mov	rax, rcx

; 483  : 	}

	ret	0
??$_Rechecked@PEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@PEAU12@@std@@YAAEAPEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEAPEAU10@PEAU10@@Z ENDP ; std::_Rechecked<std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64,std::pair<std::vector<double,std::allocator<double> >,double> * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\type_traits
;	COMDAT ??$forward@V?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z PROC ; std::forward<std::allocator<double> >, COMDAT

; 1592 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1593 : 	}

	ret	0
??$forward@V?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z ENDP ; std::forward<std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$?0V?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@N@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0V?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@N@1@@Z PROC ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><std::allocator<double> >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\vector

; 434  : 		: _Myfirst(),

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 435  : 		_Mylast(),

	mov	QWORD PTR [rcx+8], rax

; 436  : 		_Myend()

	mov	QWORD PTR [rcx+16], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility

; 313  : 		}

	mov	rax, rcx
	ret	0
??$?0V?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@N@1@@Z ENDP ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEANPEANV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_copy@PEANPEANV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@@Z PROC ; std::_Uninitialized_copy<double * __ptr64,double * __ptr64,std::allocator<double> >, COMDAT

; 116  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

$LN18:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility

; 2243 : 	const size_t _Count = _Last_ch - _First_ch;

	sub	rbx, rcx

; 2244 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	QWORD PTR __imp_memmove

; 2245 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory

; 126  : 	}

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_copy@PEANPEANV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@@Z ENDP ; std::_Uninitialized_copy<double * __ptr64,double * __ptr64,std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
;	COMDAT ??$map@V<lambda_87ccf09596cd73ff58e95777441719b2>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_87ccf09596cd73ff58e95777441719b2>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
_TEXT	SEGMENT
$T1 = 48
$T3 = 64
$T5 = 80
$T6 = 96
$T7 = 112
$T8 = 128
result$ = 160
f$ = 168
v$ = 176
??$map@V<lambda_87ccf09596cd73ff58e95777441719b2>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_87ccf09596cd73ff58e95777441719b2>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z PROC ; hof::map<<lambda_87ccf09596cd73ff58e95777441719b2>,double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> >,double * __ptr64,double,List<P<16,1>,EmptyList> >, COMDAT

; 7    :     void map(View<PB, B, DB> result, F f, View<PA, A, DA> v) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	r14
	sub	rsp, 144				; 00000090H
	mov	rdi, r8
	mov	rsi, rdx
	mov	r14, rcx

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	xor	ebx, ebx
	npad	13
$LL4@map:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdi]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	lea	rdx, QWORD PTR $T7[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	r9, QWORD PTR [rdi+8]
	mov	rcx, QWORD PTR [r14+8]
	add	r9, rbx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T1[rsp], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rbx

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [r14]
	mov	QWORD PTR $T3[rsp], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	mov	rax, QWORD PTR [rsi+8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	QWORD PTR $T3[rsp+8], rcx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	lea	rcx, QWORD PTR $T8[rsp]
	movaps	xmm1, XMMWORD PTR $T3[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	QWORD PTR $T1[rsp+8], r9
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movdqa	XMMWORD PTR $T5[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rax]
	mov	rax, QWORD PTR [rsi]
	movdqa	XMMWORD PTR $T8[rsp], xmm1
	movaps	XMMWORD PTR $T6[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rax]
	lea	rax, QWORD PTR $T5[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR [rsp+32], rax
	movaps	XMMWORD PTR $T7[rsp], xmm0
	call	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	inc	rbx
	cmp	rbx, 16
	jb	$LL4@map

; 10   :             f(result[i], v[i]);
; 11   :         }
; 12   :     }

	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	mov	rdi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	r14
	ret	0
??$map@V<lambda_87ccf09596cd73ff58e95777441719b2>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_87ccf09596cd73ff58e95777441719b2>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z ENDP ; hof::map<<lambda_87ccf09596cd73ff58e95777441719b2>,double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> >,double * __ptr64,double,List<P<16,1>,EmptyList> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@_K@Z PROC ; View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > >::operator[], COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rcx, QWORD PTR [rcx+8]
	add	rcx, r8

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax
	mov	QWORD PTR [rdx+8], rcx

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 31   :     }

	ret	0
??A?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@QEBA?AV?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@_K@Z ENDP ; View<double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_87ccf09596cd73ff58e95777441719b2>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
$T3 = 80
$T4 = 96
this$ = 128
result$ = 136
c$ = 144
??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_87ccf09596cd73ff58e95777441719b2>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z PROC ; <lambda_87ccf09596cd73ff58e95777441719b2>::operator()<View<double * __ptr64,double,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >, COMDAT

; 172  :                             map(result, [&](auto result, auto c) {

	sub	rsp, 120				; 00000078H

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	mov	rax, QWORD PTR [rcx+8]
	movups	xmm0, XMMWORD PTR [r8]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	lea	rcx, QWORD PTR $T4[rsp]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rax]
	lea	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR $T2[rsp]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rdx]
	lea	rdx, QWORD PTR $T3[rsp]
	mov	QWORD PTR [rsp+32], rax
	movaps	XMMWORD PTR $T4[rsp], xmm0
	call	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
	add	rsp, 120				; 00000078H
	ret	0
??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_87ccf09596cd73ff58e95777441719b2>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ENDP ; <lambda_87ccf09596cd73ff58e95777441719b2>::operator()<View<double * __ptr64,double,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File d:\documents\dev\lambdagen\view\view\hof.h
;	COMDAT ??$map@V<lambda_1273283c9775fef46ee1404488bda320>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_1273283c9775fef46ee1404488bda320>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z
_TEXT	SEGMENT
$T1 = 48
$T3 = 64
$T5 = 80
$T6 = 96
$T7 = 112
$T8 = 128
result$ = 160
f$ = 168
v$ = 176
??$map@V<lambda_1273283c9775fef46ee1404488bda320>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_1273283c9775fef46ee1404488bda320>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z PROC ; hof::map<<lambda_1273283c9775fef46ee1404488bda320>,double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> >,double * __ptr64,double,List<P<16,1>,EmptyList> >, COMDAT

; 7    :     void map(View<PB, B, DB> result, F f, View<PA, A, DA> v) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	r14
	sub	rsp, 144				; 00000090H
	mov	rdi, r8
	mov	rsi, rdx
	mov	r14, rcx

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	xor	ebx, ebx
	npad	13
$LL4@map:
; File d:\documents\dev\lambdagen\view\view\view.h

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdi]
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	lea	rdx, QWORD PTR $T7[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	r9, QWORD PTR [rdi+8]
	mov	rcx, QWORD PTR [r14+8]
	add	r9, rbx

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR $T1[rsp], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rbx

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [r14]
	mov	QWORD PTR $T3[rsp], rax
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	mov	rax, QWORD PTR [rsi+8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	QWORD PTR $T3[rsp+8], rcx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	lea	rcx, QWORD PTR $T8[rsp]
	movaps	xmm1, XMMWORD PTR $T3[rsp]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	QWORD PTR $T1[rsp+8], r9
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movdqa	XMMWORD PTR $T5[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rax]
	mov	rax, QWORD PTR [rsi]
	movdqa	XMMWORD PTR $T8[rsp], xmm1
	movaps	XMMWORD PTR $T6[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rax]
	lea	rax, QWORD PTR $T5[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR [rsp+32], rax
	movaps	XMMWORD PTR $T7[rsp], xmm0
	call	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
; File d:\documents\dev\lambdagen\view\view\hof.h

; 9    :         for (size_t i = 0; i < DA::head::dim; ++i) {

	inc	rbx
	cmp	rbx, 16
	jb	$LL4@map

; 10   :             f(result[i], v[i]);
; 11   :         }
; 12   :     }

	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	mov	rdi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	r14
	ret	0
??$map@V<lambda_1273283c9775fef46ee1404488bda320>@@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_1273283c9775fef46ee1404488bda320>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@U?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@@@Z ENDP ; hof::map<<lambda_1273283c9775fef46ee1404488bda320>,double const * __ptr64,double,List<P<16,1>,List<P<16,512>,EmptyList> >,double * __ptr64,double,List<P<16,1>,EmptyList> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_1273283c9775fef46ee1404488bda320>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
$T3 = 80
$T4 = 96
this$ = 128
result$ = 136
c$ = 144
??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_1273283c9775fef46ee1404488bda320>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z PROC ; <lambda_1273283c9775fef46ee1404488bda320>::operator()<View<double * __ptr64,double,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >, COMDAT

; 172  :                             map(result, [&](auto result, auto c) {

	sub	rsp, 120				; 00000078H

; 173  :                                 rnz(result, tmp, add, mul, r, c); },

	mov	rax, QWORD PTR [rcx+8]
	movups	xmm0, XMMWORD PTR [r8]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	lea	rcx, QWORD PTR $T4[rsp]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rax]
	lea	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR $T2[rsp]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	movups	xmm0, XMMWORD PTR [rdx]
	lea	rdx, QWORD PTR $T3[rsp]
	mov	QWORD PTR [rsp+32], rax
	movaps	XMMWORD PTR $T4[rsp], xmm0
	call	??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
	add	rsp, 120				; 00000078H
	ret	0
??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@<lambda_1273283c9775fef46ee1404488bda320>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ENDP ; <lambda_1273283c9775fef46ee1404488bda320>::operator()<View<double * __ptr64,double,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
;	COMDAT ??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V1@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@00@Z
_TEXT	SEGMENT
result$ = 8
f$dead$ = 16
v1$ = 24
<v_0>$ = 32
??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V1@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@00@Z PROC ; hof::zip<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,double * __ptr64,double,List<P<16,1>,EmptyList>,View<double * __ptr64,double,List<P<16,1>,EmptyList> > >, COMDAT

; 23   :     void zip(R result, F f, View<P, A, D> v1, V... v) {

$LN32:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	mov	QWORD PTR [rsp+32], r14
	mov	rdi, r9
	mov	rsi, r8
	mov	r14, rcx

; 24   :         for (size_t i = 0; i < D::head::dim; ++i) {

	xor	ebx, ebx
	npad	1
$LL4@zip:
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r11, QWORD PTR [rdi]
	mov	r9, QWORD PTR [rsi]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	r10, QWORD PTR [rdi+8]
	mov	rdx, QWORD PTR [rsi+8]
	add	r10, rbx
	mov	rcx, QWORD PTR [r14+8]
	add	rdx, rbx

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r8, QWORD PTR [r14]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rbx
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movsd	xmm0, QWORD PTR [r11+r10*8]
	addsd	xmm0, QWORD PTR [r9+rdx*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movsd	QWORD PTR [r8+rcx*8], xmm0

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r11, QWORD PTR [rdi]
	mov	r10, QWORD PTR [rsi]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	r9, QWORD PTR [rdi+8]
	mov	rdx, QWORD PTR [rsi+8]
	add	r9, rbx
	mov	rcx, QWORD PTR [r14+8]
	add	rdx, rbx

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r8, QWORD PTR [r14]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rbx
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movsd	xmm0, QWORD PTR [r11+r9*8+8]
	addsd	xmm0, QWORD PTR [r10+rdx*8+8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movsd	QWORD PTR [r8+rcx*8+8], xmm0

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r11, QWORD PTR [rdi]
	mov	r10, QWORD PTR [rsi]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	r9, QWORD PTR [rdi+8]
	mov	rdx, QWORD PTR [rsi+8]
	add	r9, rbx
	mov	rcx, QWORD PTR [r14+8]
	add	rdx, rbx

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r8, QWORD PTR [r14]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rbx
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movsd	xmm0, QWORD PTR [r11+r9*8+16]
	addsd	xmm0, QWORD PTR [r10+rdx*8+16]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movsd	QWORD PTR [r8+rcx*8+16], xmm0

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r11, QWORD PTR [rdi]
	mov	r10, QWORD PTR [rsi]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	r9, QWORD PTR [rdi+8]
	mov	rdx, QWORD PTR [rsi+8]
	add	r9, rbx
	mov	rcx, QWORD PTR [r14+8]
	add	rdx, rbx

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r8, QWORD PTR [r14]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rbx
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movsd	xmm0, QWORD PTR [r11+r9*8+24]
	addsd	xmm0, QWORD PTR [r10+rdx*8+24]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movsd	QWORD PTR [r8+rcx*8+24], xmm0

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r11, QWORD PTR [rdi]
	mov	r10, QWORD PTR [rsi]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	r9, QWORD PTR [rdi+8]
	mov	rdx, QWORD PTR [rsi+8]
	add	r9, rbx
	mov	rcx, QWORD PTR [r14+8]
	add	rdx, rbx

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r8, QWORD PTR [r14]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rbx
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movsd	xmm0, QWORD PTR [r11+r9*8+32]
	addsd	xmm0, QWORD PTR [r10+rdx*8+32]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movsd	QWORD PTR [r8+rcx*8+32], xmm0

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r11, QWORD PTR [rdi]
	mov	r10, QWORD PTR [rsi]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	r9, QWORD PTR [rdi+8]
	mov	rdx, QWORD PTR [rsi+8]
	add	r9, rbx
	mov	rcx, QWORD PTR [r14+8]
	add	rdx, rbx

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r8, QWORD PTR [r14]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rbx
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movsd	xmm0, QWORD PTR [r11+r9*8+40]
	addsd	xmm0, QWORD PTR [r10+rdx*8+40]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movsd	QWORD PTR [r8+rcx*8+40], xmm0

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	r9, QWORD PTR [rdi+8]
	mov	rdx, QWORD PTR [rsi+8]
	add	r9, rbx
	mov	rcx, QWORD PTR [r14+8]
	add	rdx, rbx

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r11, QWORD PTR [rdi]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rbx

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r10, QWORD PTR [rsi]
	mov	r8, QWORD PTR [r14]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movsd	xmm0, QWORD PTR [r11+r9*8+48]
	addsd	xmm0, QWORD PTR [r10+rdx*8+48]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movsd	QWORD PTR [r8+rcx*8+48], xmm0

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	r9, QWORD PTR [rdi+8]

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r11, QWORD PTR [rdi]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	r9, rbx
	mov	rdx, QWORD PTR [rsi+8]

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r10, QWORD PTR [rsi]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rdx, rbx
	mov	rcx, QWORD PTR [r14+8]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movsd	xmm0, QWORD PTR [r11+r9*8+56]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, rbx

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r8, QWORD PTR [r14]

; 78   :         data[base] = x;

	add	rbx, 8
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	addsd	xmm0, QWORD PTR [r10+rdx*8+56]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movsd	QWORD PTR [r8+rcx*8+56], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 24   :         for (size_t i = 0; i < D::head::dim; ++i) {

	cmp	rbx, 16
	jb	$LL4@zip

; 25   :             f(result[i], v1[i], v[i]...);
; 26   :         }
; 27   :     }

	mov	rbx, QWORD PTR [rsp+8]
	mov	rsi, QWORD PTR [rsp+16]
	mov	rdi, QWORD PTR [rsp+24]
	mov	r14, QWORD PTR [rsp+32]
	ret	0
??$zip@V?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V1@@hof@@YAXV?$View@PEANNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@00@Z ENDP ; hof::zip<View<double * __ptr64,double,List<P<16,1>,EmptyList> >,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,double * __ptr64,double,List<P<16,1>,EmptyList>,View<double * __ptr64,double,List<P<16,1>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
;	COMDAT ??$?RV?$View@PEANNUEmptyList@@@@V0@V0@@<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@QEBAXV?$View@PEANNUEmptyList@@@@00@Z
_TEXT	SEGMENT
this$dead$ = 8
result$ = 16
a$ = 24
b$ = 32
??$?RV?$View@PEANNUEmptyList@@@@V0@V0@@<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@QEBAXV?$View@PEANNUEmptyList@@@@00@Z PROC ; <lambda_3f837a234d39e606b056c86a3fa6e7a3>::operator()<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList> >, COMDAT

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	mov	rcx, QWORD PTR [r8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 82   :         return data[base];

	mov	r10, QWORD PTR [r8+8]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	mov	rax, QWORD PTR [r9]
; File d:\documents\dev\lambdagen\view\view\view.h

; 82   :         return data[base];

	mov	r8, QWORD PTR [r9+8]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movsd	xmm0, QWORD PTR [rcx+r10*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	mov	rcx, QWORD PTR [rdx+8]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	addsd	xmm0, QWORD PTR [rax+r8*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	mov	rax, QWORD PTR [rdx]
	movsd	QWORD PTR [rax+rcx*8], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	ret	0
??$?RV?$View@PEANNUEmptyList@@@@V0@V0@@<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@QEBAXV?$View@PEANNUEmptyList@@@@00@Z ENDP ; <lambda_3f837a234d39e606b056c86a3fa6e7a3>::operator()<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0
;	COMDAT ??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z
_TEXT	SEGMENT
$T4 = 32
__formal$dead$ = 64
$T1 = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::construct<std::pair<std::vector<double,std::allocator<double> >,double>,std::pair<std::vector<double,std::allocator<double> >,double> const & __ptr64>, COMDAT

; 854  : 		{	// construct _Objty(_Types...) at _Ptr

$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T4[rsp], -2
	mov	QWORD PTR [rsp+80], rbx
	mov	rbx, r8
	mov	rdi, rdx

; 855  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	QWORD PTR $T1[rsp], rdx
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp

	mov	rdx, r8
	mov	rcx, rdi
	call	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
	mov	rax, QWORD PTR [rbx+24]
	mov	QWORD PTR [rdi+24], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0

; 857  : 		}

	mov	rbx, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::construct<std::pair<std::vector<double,std::allocator<double> >,double>,std::pair<std::vector<double,std::allocator<double> >,double> const & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T4 = 32
__formal$dead$ = 64
$T1 = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$0@?0???$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z@4HA PROC ; `std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::construct<std::pair<std::vector<double,std::allocator<double> >,double>,std::pair<std::vector<double,std::allocator<double> >,double> const & __ptr64>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX0@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z@4HA ENDP ; `std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::construct<std::pair<std::vector<double,std::allocator<double> >,double>,std::pair<std::vector<double,std::allocator<double> >,double> const & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 32
__formal$dead$ = 64
$T1 = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$0@?0???$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z@4HA PROC ; `std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::construct<std::pair<std::vector<double,std::allocator<double> >,double>,std::pair<std::vector<double,std::allocator<double> >,double> const & __ptr64>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX0@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$construct@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@1@QEAU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@1@AEBU31@@Z@4HA ENDP ; `std::_Default_allocator_traits<std::allocator<std::pair<std::vector<double,std::allocator<double> >,double> > >::construct<std::pair<std::vector<double,std::allocator<double> >,double>,std::pair<std::vector<double,std::allocator<double> >,double> const & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$_Unchecked@PEAN@std@@YAPEANPEAN@Z
_TEXT	SEGMENT
_Src$ = 8
??$_Unchecked@PEAN@std@@YAPEANPEAN@Z PROC		; std::_Unchecked<double * __ptr64>, COMDAT

; 450  : 	return (_Src);

	mov	rax, rcx

; 451  : 	}

	ret	0
??$_Unchecked@PEAN@std@@YAPEANPEAN@Z ENDP		; std::_Unchecked<double * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$_Ptr_copy_cat@NN@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAN0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
??$_Ptr_copy_cat@NN@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAN0@Z PROC ; std::_Ptr_copy_cat<double,double>, COMDAT

; 872  : 	return {};

	mov	rax, rcx

; 873  : 	}

	ret	0
??$_Ptr_copy_cat@NN@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAN0@Z ENDP ; std::_Ptr_copy_cat<double,double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked@NNV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
__formal$dead$ = 72
__formal$dead$ = 80
__formal$dead$ = 88
??$_Uninitialized_copy_al_unchecked@NNV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked<double,double,std::allocator<double> >, COMDAT

; 108  : 	{	// copy [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility

; 2243 : 	const size_t _Count = _Last_ch - _First_ch;

	sub	rbx, rcx

; 2244 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	QWORD PTR __imp_memmove

; 2245 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory

; 110  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_copy_al_unchecked@NNV?$allocator@N@std@@@std@@YAPEANPEAN00AEAV?$allocator@N@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked<double,double,std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$_Rechecked@PEANPEAN@std@@YAAEAPEANAEAPEANPEAN@Z
_TEXT	SEGMENT
_Dest$ = 8
_Src$ = 16
??$_Rechecked@PEANPEAN@std@@YAAEAPEANAEAPEANPEAN@Z PROC	; std::_Rechecked<double * __ptr64,double * __ptr64>, COMDAT

; 481  : 	_Dest = _Src;

	mov	QWORD PTR [rcx], rdx

; 482  : 	return (_Dest);

	mov	rax, rcx

; 483  : 	}

	ret	0
??$_Rechecked@PEANPEAN@std@@YAAEAPEANAEAPEANPEAN@Z ENDP	; std::_Rechecked<double * __ptr64,double * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\cpu_benchmark.cpp
;	COMDAT ??0?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEBU01@@Z PROC ; std::pair<std::vector<double,std::allocator<double> >,double>::pair<std::vector<double,std::allocator<double> >,double>, COMDAT

; 256  : }

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx
	call	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@AEBV01@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
	mov	rax, QWORD PTR [rbx+24]
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+24], rax
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@QEAA@AEBU01@@Z ENDP ; std::pair<std::vector<double,std::allocator<double> >,double>::pair<std::vector<double,std::allocator<double> >,double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??0?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@QEAA@AEBQEBN_K@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
base$ = 24
??0?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@QEAA@AEBQEBN_K@Z PROC ; View<double const * __ptr64,double,List<P<16,512>,EmptyList> >::View<double const * __ptr64,double,List<P<16,512>,EmptyList> >, COMDAT

; 20   :     View(const Ptr& data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@QEAA@AEBQEBN_K@Z ENDP ; View<double const * __ptr64,double,List<P<16,512>,EmptyList> >::View<double const * __ptr64,double,List<P<16,512>,EmptyList> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
;	COMDAT ??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z
_TEXT	SEGMENT
result$ = 24
tmp$ = 32
f$dead$ = 40
g$dead$ = 48
v1$ = 56
<v_0>$ = 64
??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z PROC ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >, COMDAT

; 30   :     void rnz(R result, T tmp, F f, G g, View<P, A, D> v1, V... v) {

$LN52:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r14

; 31   :         g(result, v1[0], v[0]...);

	movups	xmm1, XMMWORD PTR [rcx]
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r11, QWORD PTR <v_0>$[rsp]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 30   :     void rnz(R result, T tmp, F f, G g, View<P, A, D> v1, V... v) {

	mov	rdi, rcx
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	rbx, QWORD PTR v1$[rsp]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 30   :     void rnz(R result, T tmp, F f, G g, View<P, A, D> v1, V... v) {

	mov	rsi, rdx
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movq	rcx, xmm1

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	r14d, 1

; 78   :         data[base] = x;

	psrldq	xmm1, 8

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r10, QWORD PTR [r11]
	mov	rax, QWORD PTR [rbx+8]
	mov	r9, QWORD PTR [r11+8]
	mov	r8, QWORD PTR [rbx]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 39   :     auto mul = [](auto result, auto a, auto b) {result = a * b; };

	movsd	xmm0, QWORD PTR [r10+r9*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r10d, 512				; 00000200H
; File d:\documents\dev\lambdagen\view\view\hof.h

; 39   :     auto mul = [](auto result, auto a, auto b) {result = a * b; };

	mulsd	xmm0, QWORD PTR [r8+rax*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movq	rax, xmm1
	movsd	QWORD PTR [rcx+rax*8], xmm0
	npad	6
$LL4@rnz:

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r9, QWORD PTR [r11]
	mov	r8, QWORD PTR [rbx]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 33   :             g(tmp, v1[i], v[i]...);

	movups	xmm1, XMMWORD PTR [rsi]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rdx, QWORD PTR [r11+8]
	mov	rcx, QWORD PTR [rbx+8]
	add	rdx, r10
	add	rcx, r14
; File d:\documents\dev\lambdagen\view\view\hof.h

; 39   :     auto mul = [](auto result, auto a, auto b) {result = a * b; };

	movsd	xmm0, QWORD PTR [r9+rdx*8]
	mulsd	xmm0, QWORD PTR [r8+rcx*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movq	rcx, xmm1
	psrldq	xmm1, 8
	movq	rax, xmm1
	movsd	QWORD PTR [rcx+rax*8], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 34   :             f(result, result, tmp);

	movups	xmm1, XMMWORD PTR [rdi]
	movups	xmm0, XMMWORD PTR [rsi]
	movups	xmm2, xmm1

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movq	rcx, xmm0
	psrldq	xmm0, 8
	movq	rax, xmm0
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	movq	rcx, xmm1
	psrldq	xmm1, 8
	movq	rax, xmm1
	addsd	xmm0, QWORD PTR [rcx+rax*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movq	rcx, xmm2
	psrldq	xmm2, 8
	movq	rax, xmm2
	movsd	QWORD PTR [rcx+rax*8], xmm0

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r9, QWORD PTR [r11]
	mov	r8, QWORD PTR [rbx]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 33   :             g(tmp, v1[i], v[i]...);

	movups	xmm1, XMMWORD PTR [rsi]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rdx, QWORD PTR [r11+8]
	mov	rcx, QWORD PTR [rbx+8]
	add	rdx, r10
	add	rcx, r14
; File d:\documents\dev\lambdagen\view\view\hof.h

; 39   :     auto mul = [](auto result, auto a, auto b) {result = a * b; };

	movsd	xmm0, QWORD PTR [r9+rdx*8+4096]
	mulsd	xmm0, QWORD PTR [r8+rcx*8+8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movq	rcx, xmm1
	psrldq	xmm1, 8
	movq	rax, xmm1
	movsd	QWORD PTR [rcx+rax*8], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 34   :             f(result, result, tmp);

	movups	xmm1, XMMWORD PTR [rdi]
	movups	xmm0, XMMWORD PTR [rsi]
	movups	xmm2, xmm1

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movq	rcx, xmm0
	psrldq	xmm0, 8
	movq	rax, xmm0
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	movq	rcx, xmm1
	psrldq	xmm1, 8
	movq	rax, xmm1
	addsd	xmm0, QWORD PTR [rcx+rax*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movq	rcx, xmm2
	psrldq	xmm2, 8
	movq	rax, xmm2
	movsd	QWORD PTR [rcx+rax*8], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 33   :             g(tmp, v1[i], v[i]...);

	movups	xmm1, XMMWORD PTR [rsi]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rdx, QWORD PTR [r11+8]

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r9, QWORD PTR [r11]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rdx, r10
	mov	rcx, QWORD PTR [rbx+8]

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r8, QWORD PTR [rbx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, r14
; File d:\documents\dev\lambdagen\view\view\hof.h

; 39   :     auto mul = [](auto result, auto a, auto b) {result = a * b; };

	movsd	xmm0, QWORD PTR [r9+rdx*8+8192]
	mulsd	xmm0, QWORD PTR [r8+rcx*8+16]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movq	rcx, xmm1
	psrldq	xmm1, 8
	movq	rax, xmm1
	movsd	QWORD PTR [rcx+rax*8], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 34   :             f(result, result, tmp);

	movups	xmm1, XMMWORD PTR [rdi]
	movups	xmm0, XMMWORD PTR [rsi]
	movups	xmm2, xmm1

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movq	rcx, xmm0
	psrldq	xmm0, 8
	movq	rax, xmm0
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	movq	rcx, xmm1
	psrldq	xmm1, 8
	movq	rax, xmm1
	addsd	xmm0, QWORD PTR [rcx+rax*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movq	rcx, xmm2
	psrldq	xmm2, 8
	movq	rax, xmm2
	movsd	QWORD PTR [rcx+rax*8], xmm0

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r9, QWORD PTR [r11]
	mov	r8, QWORD PTR [rbx]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 33   :             g(tmp, v1[i], v[i]...);

	movups	xmm1, XMMWORD PTR [rsi]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rdx, QWORD PTR [r11+8]
	mov	rcx, QWORD PTR [rbx+8]
	add	rdx, r10
	add	rcx, r14
; File d:\documents\dev\lambdagen\view\view\hof.h

; 39   :     auto mul = [](auto result, auto a, auto b) {result = a * b; };

	movsd	xmm0, QWORD PTR [r9+rdx*8+12288]
	mulsd	xmm0, QWORD PTR [r8+rcx*8+24]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movq	rcx, xmm1
	psrldq	xmm1, 8
	movq	rax, xmm1
	movsd	QWORD PTR [rcx+rax*8], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 34   :             f(result, result, tmp);

	movups	xmm1, XMMWORD PTR [rdi]
	movups	xmm0, XMMWORD PTR [rsi]
	movups	xmm2, xmm1

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movq	rcx, xmm0
	psrldq	xmm0, 8
	movq	rax, xmm0
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	movq	rcx, xmm1
	psrldq	xmm1, 8
	movq	rax, xmm1
	addsd	xmm0, QWORD PTR [rcx+rax*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movq	rcx, xmm2
	psrldq	xmm2, 8
	movq	rax, xmm2
	movsd	QWORD PTR [rcx+rax*8], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 33   :             g(tmp, v1[i], v[i]...);

	movups	xmm1, XMMWORD PTR [rsi]
; File d:\documents\dev\lambdagen\view\view\view.h

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rdx, QWORD PTR [r11+8]

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r9, QWORD PTR [r11]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rdx, r10
	mov	rcx, QWORD PTR [rbx+8]

; 78   :         data[base] = x;

	add	r10, 2560				; 00000a00H

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	r8, QWORD PTR [rbx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	add	rcx, r14

; 78   :         data[base] = x;

	add	r14, 5
; File d:\documents\dev\lambdagen\view\view\hof.h

; 39   :     auto mul = [](auto result, auto a, auto b) {result = a * b; };

	movsd	xmm0, QWORD PTR [r9+rdx*8+16384]
	mulsd	xmm0, QWORD PTR [r8+rcx*8+32]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movq	rcx, xmm1
	psrldq	xmm1, 8
	movq	rax, xmm1
	movsd	QWORD PTR [rcx+rax*8], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 34   :             f(result, result, tmp);

	movups	xmm1, XMMWORD PTR [rdi]
	movups	xmm0, XMMWORD PTR [rsi]
	movups	xmm2, xmm1

; 38   :     auto add = [](auto result, auto a, auto b) {result = a + b; };

	movq	rcx, xmm0
	psrldq	xmm0, 8
	movq	rax, xmm0
	movsd	xmm0, QWORD PTR [rcx+rax*8]
	movq	rcx, xmm1
	psrldq	xmm1, 8
	movq	rax, xmm1
	addsd	xmm0, QWORD PTR [rcx+rax*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	movq	rcx, xmm2
	psrldq	xmm2, 8
	movq	rax, xmm2
	movsd	QWORD PTR [rcx+rax*8], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 32   :         for (size_t i = 1; i < D::head::dim; ++i) {

	cmp	r10, 8192				; 00002000H
	jb	$LL4@rnz

; 35   :         }
; 36   :     }

	mov	rbx, QWORD PTR [rsp+40]
	mov	rsi, QWORD PTR [rsp+48]
	pop	r14
	pop	rdi
	ret	0
??$rnz@V?$View@PEANNUEmptyList@@@@V1@V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@hof@@YAXV?$View@PEANNUEmptyList@@@@0V<lambda_3f837a234d39e606b056c86a3fa6e7a3>@@V<lambda_961065762246b99eadeb829041f0d74c>@@V?$View@PEBNNU?$List@U?$P@$0BA@$00@@UEmptyList@@@@@@V?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@@Z ENDP ; hof::rnz<View<double * __ptr64,double,EmptyList>,View<double * __ptr64,double,EmptyList>,<lambda_3f837a234d39e606b056c86a3fa6e7a3>,<lambda_961065762246b99eadeb829041f0d74c>,double const * __ptr64,double,List<P<16,1>,EmptyList>,View<double const * __ptr64,double,List<P<16,512>,EmptyList> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\view.h
;	COMDAT ??A?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@QEBA?AV?$View@PEBNNUEmptyList@@@@_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
idx$ = 24
??A?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@QEBA?AV?$View@PEBNNUEmptyList@@@@_K@Z PROC ; View<double const * __ptr64,double,List<P<16,512>,EmptyList> >::operator[], COMDAT

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	rax, QWORD PTR [rcx]

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	shl	r8, 9
	add	r8, QWORD PTR [rcx+8]

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx], rax

; 30   :         return View<Ptr, T, Ds>(data, base + idx*D::stride);

	mov	rax, rdx

; 70   :     View(Ptr data, size_t base = 0) : data(data), base(base) {}

	mov	QWORD PTR [rdx+8], r8

; 31   :     }

	ret	0
??A?$View@PEBNNU?$List@U?$P@$0BA@$0CAA@@@UEmptyList@@@@@@QEBA?AV?$View@PEBNNUEmptyList@@@@_K@Z ENDP ; View<double const * __ptr64,double,List<P<16,512>,EmptyList> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
; File d:\documents\dev\lambdagen\view\view\view.h
; File d:\documents\dev\lambdagen\view\view\hof.h
;	COMDAT ??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNUEmptyList@@@@V1@@<lambda_961065762246b99eadeb829041f0d74c>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNUEmptyList@@@@1@Z
_TEXT	SEGMENT
this$dead$ = 8
result$ = 16
a$ = 24
b$ = 32
??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNUEmptyList@@@@V1@@<lambda_961065762246b99eadeb829041f0d74c>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNUEmptyList@@@@1@Z PROC ; <lambda_961065762246b99eadeb829041f0d74c>::operator()<View<double * __ptr64,double,EmptyList>,View<double const * __ptr64,double,EmptyList>,View<double const * __ptr64,double,EmptyList> >, COMDAT

; 39   :     auto mul = [](auto result, auto a, auto b) {result = a * b; };

	mov	rcx, QWORD PTR [r8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 82   :         return data[base];

	mov	r10, QWORD PTR [r8+8]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 39   :     auto mul = [](auto result, auto a, auto b) {result = a * b; };

	mov	rax, QWORD PTR [r9]
; File d:\documents\dev\lambdagen\view\view\view.h

; 82   :         return data[base];

	mov	r8, QWORD PTR [r9+8]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 39   :     auto mul = [](auto result, auto a, auto b) {result = a * b; };

	movsd	xmm0, QWORD PTR [rcx+r10*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	mov	rcx, QWORD PTR [rdx+8]
; File d:\documents\dev\lambdagen\view\view\hof.h

; 39   :     auto mul = [](auto result, auto a, auto b) {result = a * b; };

	mulsd	xmm0, QWORD PTR [rax+r8*8]
; File d:\documents\dev\lambdagen\view\view\view.h

; 78   :         data[base] = x;

	mov	rax, QWORD PTR [rdx]
	movsd	QWORD PTR [rax+rcx*8], xmm0
; File d:\documents\dev\lambdagen\view\view\hof.h

; 39   :     auto mul = [](auto result, auto a, auto b) {result = a * b; };

	ret	0
??$?RV?$View@PEANNUEmptyList@@@@V?$View@PEBNNUEmptyList@@@@V1@@<lambda_961065762246b99eadeb829041f0d74c>@@QEBAXV?$View@PEANNUEmptyList@@@@V?$View@PEBNNUEmptyList@@@@1@Z ENDP ; <lambda_961065762246b99eadeb829041f0d74c>::operator()<View<double * __ptr64,double,EmptyList>,View<double const * __ptr64,double,EmptyList>,View<double const * __ptr64,double,EmptyList> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\type_traits
;	COMDAT ??$forward@AEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAAEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEBU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAAEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEBU10@@Z PROC ; std::forward<std::pair<std::vector<double,std::allocator<double> >,double> const & __ptr64>, COMDAT

; 1592 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1593 : 	}

	ret	0
??$forward@AEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@std@@@std@@YAAEBU?$pair@V?$vector@NV?$allocator@N@std@@@std@@N@0@AEBU10@@Z ENDP ; std::forward<std::pair<std::vector<double,std::allocator<double> >,double> const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xutility
;	COMDAT ??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z PROC	; std::_Copy_memmove<double * __ptr64,double * __ptr64>, COMDAT

; 2239 : 	{	// implement copy-like function as memmove

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 2240 : 	const char * const _First_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_First));
; 2241 : 	const char * const _Last_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_Last));
; 2242 : 	char * const _Dest_ch = const_cast<char *>(reinterpret_cast<volatile char *>(_Dest));
; 2243 : 	const size_t _Count = _Last_ch - _First_ch;

	sub	rbx, rcx

; 2244 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	QWORD PTR __imp_memmove

; 2245 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]

; 2246 : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z ENDP	; std::_Copy_memmove<double * __ptr64,double * __ptr64>
_TEXT	ENDS
END
